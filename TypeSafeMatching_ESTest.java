/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 19 15:21:14 GMT 2025
 */

package org.mockito.internal.invocation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.ArgumentMatcher;
import org.mockito.internal.invocation.ArgumentMatcherAction;
import org.mockito.internal.invocation.TypeSafeMatching;
import org.mockito.internal.matchers.CapturingMatcher;
import org.mockito.internal.matchers.CompareEqual;
import org.mockito.internal.matchers.GreaterOrEqual;
import org.mockito.internal.matchers.Not;
import org.mockito.internal.matchers.NotNull;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeSafeMatching_ESTest extends TypeSafeMatching_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArgumentMatcherAction argumentMatcherAction0 = TypeSafeMatching.matchesTypeSafe();
      // Undeclared exception!
      try { 
        argumentMatcherAction0.apply((ArgumentMatcher) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.TypeSafeMatching", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArgumentMatcherAction argumentMatcherAction0 = TypeSafeMatching.matchesTypeSafe();
      CompareEqual<Integer> compareEqual0 = new CompareEqual<Integer>((Integer) null);
      Not not0 = new Not(compareEqual0);
      // Undeclared exception!
      try { 
        argumentMatcherAction0.apply(not0, not0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.mockito.internal.matchers.Not cannot be cast to class java.lang.Comparable (org.mockito.internal.matchers.Not is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6ab9d1e3; java.lang.Comparable is in module java.base of loader 'bootstrap')
         //
         verifyException("org.mockito.internal.matchers.CompareTo", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArgumentMatcherAction argumentMatcherAction0 = TypeSafeMatching.matchesTypeSafe();
      Class<Object> class0 = Object.class;
      CapturingMatcher<Object> capturingMatcher0 = new CapturingMatcher<Object>(class0);
      Object object0 = new Object();
      boolean boolean0 = argumentMatcherAction0.apply(capturingMatcher0, object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArgumentMatcherAction argumentMatcherAction0 = TypeSafeMatching.matchesTypeSafe();
      Class<Integer> class0 = Integer.class;
      NotNull<Integer> notNull0 = new NotNull<Integer>(class0);
      boolean boolean0 = argumentMatcherAction0.apply(notNull0, (Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArgumentMatcherAction argumentMatcherAction0 = TypeSafeMatching.matchesTypeSafe();
      Integer integer0 = new Integer(781);
      GreaterOrEqual<Integer> greaterOrEqual0 = new GreaterOrEqual<Integer>(integer0);
      Object object0 = new Object();
      boolean boolean0 = argumentMatcherAction0.apply(greaterOrEqual0, object0);
      assertFalse(boolean0);
  }
}
