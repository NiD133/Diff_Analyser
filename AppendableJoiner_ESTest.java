/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 18 20:16:33 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedWriter;
import java.nio.BufferOverflowException;
import java.nio.CharBuffer;
import java.nio.ReadOnlyBufferException;
import java.nio.charset.Charset;
import java.sql.SQLNonTransientConnectionException;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.EnumSet;
import java.util.LinkedHashSet;
import java.util.Locale;
import org.apache.commons.lang3.AppendableJoiner;
import org.apache.commons.lang3.function.FailableBiConsumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AppendableJoiner_ESTest extends AppendableJoiner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      StringBuffer stringBuffer1 = new StringBuffer(stringBuilder0);
      FailableBiConsumer<Appendable, Locale.Category, IOException> failableBiConsumer0 = FailableBiConsumer.nop();
      Class<Locale.Category> class0 = Locale.Category.class;
      EnumSet<Locale.Category> enumSet0 = EnumSet.allOf(class0);
      StringBuilder stringBuilder1 = AppendableJoiner.joinI(stringBuilder0, (CharSequence) stringBuilder0, (CharSequence) stringBuffer1, (CharSequence) stringBuffer0, failableBiConsumer0, (Iterable<Locale.Category>) enumSet0);
      assertEquals("", stringBuilder1.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AppendableJoiner.Builder<Object> appendableJoiner_Builder0 = AppendableJoiner.builder();
      StringBuilder stringBuilder0 = new StringBuilder();
      AppendableJoiner.Builder<Object> appendableJoiner_Builder1 = appendableJoiner_Builder0.setSuffix(stringBuilder0);
      AppendableJoiner<Object> appendableJoiner0 = appendableJoiner_Builder1.get();
      ArrayDeque<Object> arrayDeque0 = new ArrayDeque<Object>(1910);
      StringBuilder stringBuilder1 = appendableJoiner0.join(stringBuilder0, (Iterable<Object>) arrayDeque0);
      assertEquals("", stringBuilder1.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder0 = AppendableJoiner.builder();
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder[] stringBuilderArray0 = new StringBuilder[4];
      stringBuilderArray0[2] = stringBuilder0;
      StringBuffer stringBuffer0 = new StringBuffer(stringBuilder0);
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder1 = appendableJoiner_Builder0.setDelimiter(stringBuffer0);
      AppendableJoiner<StringBuilder> appendableJoiner0 = appendableJoiner_Builder1.get();
      appendableJoiner0.join(stringBuilderArray0[2], stringBuilderArray0);
      assertEquals("nullnullnullnullnull", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      StringBuilder[] stringBuilderArray0 = new StringBuilder[1];
      // Undeclared exception!
      try { 
        AppendableJoiner.joinA(stringBuilder0, (CharSequence) stringBuffer0, (CharSequence) stringBuilderArray0[0], (CharSequence) stringBuilder0, (FailableBiConsumer<Appendable, Object, IOException>) null, (Object[]) stringBuilderArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.AppendableJoiner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      FailableBiConsumer<Appendable, StringBuilder, IOException> failableBiConsumer0 = FailableBiConsumer.nop();
      StringBuilder[] stringBuilderArray0 = new StringBuilder[0];
      // Undeclared exception!
      try { 
        AppendableJoiner.joinSB((StringBuilder) null, (CharSequence) stringBuilder0, (CharSequence) null, (CharSequence) stringBuilder0, failableBiConsumer0, stringBuilderArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.AppendableJoiner", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      FailableBiConsumer<Appendable, StringBuilder, IOException> failableBiConsumer0 = FailableBiConsumer.nop();
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Charset charset0 = Charset.defaultCharset();
      CharBuffer charBuffer1 = CharBuffer.wrap((CharSequence) charBuffer0);
      charset0.encode(charBuffer0);
      StringBuilder[] stringBuilderArray0 = new StringBuilder[4];
      // Undeclared exception!
      try { 
        AppendableJoiner.joinSB(stringBuilder0, (CharSequence) charBuffer1, (CharSequence) charBuffer1, (CharSequence) "{1C", failableBiConsumer0, stringBuilderArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FailableBiConsumer<Appendable, StringBuilder, IOException> failableBiConsumer0 = FailableBiConsumer.nop();
      ArrayDeque<StringBuilder> arrayDeque0 = new ArrayDeque<StringBuilder>();
      // Undeclared exception!
      try { 
        AppendableJoiner.joinI((StringBuilder) null, (CharSequence) null, (CharSequence) null, (CharSequence) null, failableBiConsumer0, (Iterable<StringBuilder>) arrayDeque0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.AppendableJoiner", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder0 = AppendableJoiner.builder();
      AppendableJoiner<StringBuilder> appendableJoiner0 = appendableJoiner_Builder0.get();
      StringBuffer stringBuffer0 = new StringBuffer();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuffer0, 0, 0);
      StringBuilder[] stringBuilderArray0 = new StringBuilder[5];
      // Undeclared exception!
      try { 
        appendableJoiner0.joinA((Appendable) charBuffer0, stringBuilderArray0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder0 = AppendableJoiner.builder();
      AppendableJoiner<StringBuilder> appendableJoiner0 = appendableJoiner_Builder0.get();
      StringBuilder[] stringBuilderArray0 = new StringBuilder[0];
      // Undeclared exception!
      try { 
        appendableJoiner0.joinA((StringBuilder) null, stringBuilderArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.AppendableJoiner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder0 = AppendableJoiner.builder();
      AppendableJoiner<StringBuilder> appendableJoiner0 = appendableJoiner_Builder0.get();
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        appendableJoiner0.joinA((Appendable) pipedWriter0, (StringBuilder[]) null);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(2);
      AppendableJoiner.Builder<Appendable> appendableJoiner_Builder0 = AppendableJoiner.builder();
      AppendableJoiner<Appendable> appendableJoiner0 = appendableJoiner_Builder0.get();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuilder0);
      ArrayDeque<StringBuilder> arrayDeque0 = new ArrayDeque<StringBuilder>();
      LinkedHashSet<Appendable> linkedHashSet0 = new LinkedHashSet<Appendable>(arrayDeque0);
      // Undeclared exception!
      try { 
        appendableJoiner0.joinA((Appendable) charBuffer0, (Iterable<Appendable>) linkedHashSet0);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder0 = new AppendableJoiner.Builder<StringBuilder>();
      AppendableJoiner<StringBuilder> appendableJoiner0 = appendableJoiner_Builder0.get();
      ArrayDeque<StringBuilder> arrayDeque0 = new ArrayDeque<StringBuilder>();
      // Undeclared exception!
      try { 
        appendableJoiner0.joinA((StringBuilder) null, (Iterable<StringBuilder>) arrayDeque0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.AppendableJoiner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("7.6@B+");
      StringBuilder stringBuilder0 = new StringBuilder();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuilder0);
      FailableBiConsumer<Appendable, Appendable, IOException> failableBiConsumer0 = FailableBiConsumer.nop();
      // Undeclared exception!
      try { 
        AppendableJoiner.joinA((Appendable) charBuffer0, (CharSequence) stringBuffer0, (CharSequence) charBuffer0, (CharSequence) charBuffer0, failableBiConsumer0, (Appendable[]) null);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder0 = AppendableJoiner.builder();
      AppendableJoiner<StringBuilder> appendableJoiner0 = appendableJoiner_Builder0.get();
      // Undeclared exception!
      try { 
        appendableJoiner0.join((StringBuilder) null, (StringBuilder[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.AppendableJoiner", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      FailableBiConsumer<Appendable, StringBuilder, IOException> failableBiConsumer0 = FailableBiConsumer.nop();
      StringBuilder[] stringBuilderArray0 = new StringBuilder[6];
      StringBuilder stringBuilder1 = AppendableJoiner.joinA(stringBuilder0, (CharSequence) stringBuilder0, (CharSequence) stringBuilder0, (CharSequence) stringBuilder0, failableBiConsumer0, stringBuilderArray0);
      assertSame(stringBuilder1, stringBuilder0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AppendableJoiner.Builder<SQLNonTransientConnectionException> appendableJoiner_Builder0 = new AppendableJoiner.Builder<SQLNonTransientConnectionException>();
      FailableBiConsumer<Appendable, SQLNonTransientConnectionException, IOException> failableBiConsumer0 = FailableBiConsumer.nop();
      AppendableJoiner.Builder<SQLNonTransientConnectionException> appendableJoiner_Builder1 = appendableJoiner_Builder0.setElementAppender(failableBiConsumer0);
      AppendableJoiner<SQLNonTransientConnectionException> appendableJoiner0 = appendableJoiner_Builder1.get();
      assertNotNull(appendableJoiner0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder0 = new AppendableJoiner.Builder<StringBuilder>();
      StringBuilder stringBuilder0 = new StringBuilder();
      AppendableJoiner<StringBuilder> appendableJoiner0 = appendableJoiner_Builder0.get();
      StringBuilder stringBuilder1 = appendableJoiner0.join(stringBuilder0, (Iterable<StringBuilder>) null);
      assertEquals("", stringBuilder1.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      FailableBiConsumer<Appendable, StringBuilder, IOException> failableBiConsumer0 = FailableBiConsumer.nop();
      StringBuilder[] stringBuilderArray0 = new StringBuilder[0];
      StringBuilder stringBuilder1 = AppendableJoiner.joinSB(stringBuilder0, (CharSequence) stringBuffer0, (CharSequence) stringBuilder0, (CharSequence) stringBuilder0, failableBiConsumer0, stringBuilderArray0);
      assertSame(stringBuilder1, stringBuilder0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AppendableJoiner.Builder<SQLNonTransientConnectionException> appendableJoiner_Builder0 = new AppendableJoiner.Builder<SQLNonTransientConnectionException>();
      StringBuffer stringBuffer0 = new StringBuffer(1078);
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      AppendableJoiner<SQLNonTransientConnectionException> appendableJoiner0 = appendableJoiner_Builder0.get();
      StringBuilder stringBuilder1 = appendableJoiner0.joinA(stringBuilder0, (SQLNonTransientConnectionException[]) null);
      assertEquals("", stringBuilder1.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(1078);
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder0 = AppendableJoiner.builder();
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder1 = appendableJoiner_Builder0.setPrefix(stringBuffer0);
      assertSame(appendableJoiner_Builder1, appendableJoiner_Builder0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder0 = AppendableJoiner.builder();
      AppendableJoiner<StringBuilder> appendableJoiner0 = appendableJoiner_Builder0.get();
      ArrayList<StringBuilder> arrayList0 = new ArrayList<StringBuilder>();
      // Undeclared exception!
      try { 
        appendableJoiner0.join((StringBuilder) null, (Iterable<StringBuilder>) arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.AppendableJoiner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AppendableJoiner.Builder<SQLNonTransientConnectionException> appendableJoiner_Builder0 = new AppendableJoiner.Builder<SQLNonTransientConnectionException>();
      StringBuffer stringBuffer0 = new StringBuffer(1078);
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      AppendableJoiner<SQLNonTransientConnectionException> appendableJoiner0 = appendableJoiner_Builder0.get();
      LinkedHashSet<SQLNonTransientConnectionException> linkedHashSet0 = new LinkedHashSet<SQLNonTransientConnectionException>();
      StringBuilder stringBuilder1 = appendableJoiner0.joinA(stringBuilder0, (Iterable<SQLNonTransientConnectionException>) linkedHashSet0);
      assertEquals("", stringBuilder1.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AppendableJoiner.Builder<StringBuilder> appendableJoiner_Builder0 = new AppendableJoiner.Builder<StringBuilder>();
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      AppendableJoiner<StringBuilder> appendableJoiner0 = appendableJoiner_Builder0.get();
      StringBuilder[] stringBuilderArray0 = new StringBuilder[6];
      // Undeclared exception!
      try { 
        appendableJoiner0.joinA((Appendable) charBuffer0, stringBuilderArray0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }
}
