/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 19:16:32 GMT 2025
 */

package com.google.common.util.concurrent;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.util.concurrent.DirectExecutorService;
import java.time.Duration;
import java.time.temporal.ChronoField;
import java.time.temporal.TemporalUnit;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.Future;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.LinkedTransferQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ListeningExecutorService_ESTest extends ListeningExecutorService_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DirectExecutorService directExecutorService0 = new DirectExecutorService();
      Duration duration0 = Duration.ZERO;
      directExecutorService0.shutdown();
      boolean boolean0 = directExecutorService0.awaitTermination(duration0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DirectExecutorService directExecutorService0 = new DirectExecutorService();
      LinkedBlockingQueue<Callable<Object>> linkedBlockingQueue0 = new LinkedBlockingQueue<Callable<Object>>();
      // Undeclared exception!
      try { 
        directExecutorService0.invokeAny((Collection<? extends Callable<Object>>) linkedBlockingQueue0, (Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.util.concurrent.Internal", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DirectExecutorService directExecutorService0 = new DirectExecutorService();
      ArrayList<Callable<Integer>> arrayList0 = new ArrayList<Callable<Integer>>();
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      arrayList0.add(callable0);
      ChronoField chronoField0 = ChronoField.SECOND_OF_MINUTE;
      TemporalUnit temporalUnit0 = chronoField0.getRangeUnit();
      Duration duration0 = Duration.of(5112L, temporalUnit0);
      // Undeclared exception!
      try { 
        directExecutorService0.invokeAny((Collection<? extends Callable<Integer>>) arrayList0, duration0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/util/concurrent/TrustedListenableFutureTask
         //
         verifyException("com.google.common.util.concurrent.AbstractListeningExecutorService", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DirectExecutorService directExecutorService0 = new DirectExecutorService();
      Duration duration0 = Duration.ofMinutes((-356L));
      // Undeclared exception!
      try { 
        directExecutorService0.invokeAll((Collection<? extends Callable<Object>>) null, duration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.AbstractExecutorService", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DirectExecutorService directExecutorService0 = new DirectExecutorService();
      Duration duration0 = Duration.ZERO;
      LinkedHashSet<Callable<Object>> linkedHashSet0 = new LinkedHashSet<Callable<Object>>();
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      linkedHashSet0.add(callable0);
      // Undeclared exception!
      try { 
        directExecutorService0.invokeAll((Collection<? extends Callable<Object>>) linkedHashSet0, duration0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/google/common/util/concurrent/TrustedListenableFutureTask
         //
         verifyException("com.google.common.util.concurrent.AbstractListeningExecutorService", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DirectExecutorService directExecutorService0 = new DirectExecutorService();
      // Undeclared exception!
      try { 
        directExecutorService0.awaitTermination((Duration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.util.concurrent.Internal", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DirectExecutorService directExecutorService0 = new DirectExecutorService();
      Duration duration0 = Duration.ZERO;
      ArrayList<Callable<Object>> arrayList0 = new ArrayList<Callable<Object>>();
      // Undeclared exception!
      try { 
        directExecutorService0.invokeAny((Collection<? extends Callable<Object>>) arrayList0, duration0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.AbstractExecutorService", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DirectExecutorService directExecutorService0 = new DirectExecutorService();
      Duration duration0 = Duration.ZERO;
      LinkedTransferQueue<Callable<Object>> linkedTransferQueue0 = new LinkedTransferQueue<Callable<Object>>();
      List<Future<Object>> list0 = directExecutorService0.invokeAll((Collection<? extends Callable<Object>>) linkedTransferQueue0, duration0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DirectExecutorService directExecutorService0 = new DirectExecutorService();
      Duration duration0 = Duration.ZERO;
      boolean boolean0 = directExecutorService0.awaitTermination(duration0);
      assertFalse(boolean0);
  }
}
