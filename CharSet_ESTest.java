/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 18 20:18:22 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.CharRange;
import org.apache.commons.lang3.CharSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharSet_ESTest extends CharSet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[2] = "pDqg&f|G+l]-#pX9-?k";
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      charSet0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[1] = "^n%R";
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      assertNotNull(charSet0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "a-z";
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      assertNotNull(charSet0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[3];
      CharSet charSet0 = new CharSet(stringArray0);
      CharRange[] charRangeArray0 = charSet0.getCharRanges();
      assertEquals(0, charRangeArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharSet charSet0 = null;
      try {
        charSet0 = new CharSet((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String[] stringArray0 = new String[9];
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      CharSet charSet1 = CharSet.getInstance(stringArray0);
      boolean boolean0 = charSet1.equals(charSet0);
      assertTrue(boolean0);
      assertNotSame(charSet1, charSet0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharSet charSet0 = CharSet.ASCII_ALPHA_UPPER;
      boolean boolean0 = charSet0.equals(charSet0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[9];
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      Object object0 = new Object();
      boolean boolean0 = charSet0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[2] = "pDqg&f|G+l]-#pX9-?k";
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      boolean boolean0 = charSet0.contains('T');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[5] = "o|pC ~`^YDc:";
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      assertNotNull(charSet0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "]ZOr9";
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      assertNotNull(charSet0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String[] stringArray0 = new String[1];
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      charSet0.add("S4^V-hS3C g&F;t%");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharSet charSet0 = CharSet.getInstance((String[]) null);
      assertNull(charSet0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[9];
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      CharRange[] charRangeArray0 = charSet0.EMPTY.getCharRanges();
      assertEquals(0, charRangeArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[9];
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      boolean boolean0 = charSet0.contains('T');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[9];
      CharSet charSet0 = CharSet.getInstance(stringArray0);
      String string0 = charSet0.toString();
      assertEquals("[]", string0);
  }
}
