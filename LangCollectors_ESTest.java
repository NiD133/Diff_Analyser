/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 18 20:16:36 GMT 2025
 */

package org.apache.commons.lang3.stream;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.function.Function;
import java.util.stream.Collector;
import org.apache.commons.lang3.stream.LangCollectors;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LangCollectors_ESTest extends LangCollectors_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Collector<Object, ?, String> collector0 = LangCollectors.joining((CharSequence) null, (CharSequence) null, (CharSequence) charBuffer0);
      assertNotNull(collector0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Collector<Object, ?, String> collector0 = LangCollectors.joining((CharSequence) charBuffer0, (CharSequence) charBuffer0, (CharSequence) charBuffer0, (Function<Object, String>) null);
      assertNotNull(collector0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Collector<Object, ?, String> collector0 = LangCollectors.joining();
      assertNotNull(collector0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        LangCollectors.collect((Collector<? super CharBuffer, CharBuffer, CharBuffer>) null, (CharBuffer[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Collector<Object, ?, String> collector0 = LangCollectors.joining((CharSequence) null);
      assertNotNull(collector0);
  }
}
