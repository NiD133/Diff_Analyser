/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 18 13:09:13 GMT 2025
 */

package org.apache.commons.collections4.bag;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.Comparator;
import java.util.EnumSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Locale;
import java.util.NoSuchElementException;
import java.util.SortedMap;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.bag.AbstractMapBag;
import org.apache.commons.collections4.bag.HashBag;
import org.apache.commons.collections4.bag.TreeBag;
import org.apache.commons.collections4.functors.AnyPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TreeBag_ESTest extends TreeBag_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator0).toString();
      doReturn(0).when(comparator0).compare(any() , any());
      TreeBag<Predicate<Object>> treeBag0 = new TreeBag<Predicate<Object>>(comparator0);
      treeBag0.add((Predicate<Object>) null);
      Predicate<Object> predicate0 = treeBag0.last();
      assertNull(predicate0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TreeBag<Locale.FilteringMode> treeBag0 = new TreeBag<Locale.FilteringMode>((Comparator<? super Locale.FilteringMode>) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      treeBag0.add(locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = treeBag0.last();
      assertSame(locale_FilteringMode1, locale_FilteringMode0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      SortedMap<Locale.Category, AbstractMapBag.MutableInteger> sortedMap0 = (SortedMap<Locale.Category, AbstractMapBag.MutableInteger>)treeBag0.getMap();
      assertEquals(0, sortedMap0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TreeBag<Locale.FilteringMode> treeBag0 = new TreeBag<Locale.FilteringMode>((Comparator<? super Locale.FilteringMode>) null);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      treeBag0.add(locale_FilteringMode0);
      SortedMap<Locale.FilteringMode, AbstractMapBag.MutableInteger> sortedMap0 = (SortedMap<Locale.FilteringMode, AbstractMapBag.MutableInteger>)treeBag0.getMap();
      assertFalse(sortedMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator0).toString();
      doReturn(0).when(comparator0).compare(any() , any());
      TreeBag<AbstractMapBag.MutableInteger> treeBag0 = new TreeBag<AbstractMapBag.MutableInteger>(comparator0);
      treeBag0.add((AbstractMapBag.MutableInteger) null);
      AbstractMapBag.MutableInteger abstractMapBag_MutableInteger0 = treeBag0.first();
      assertNull(abstractMapBag_MutableInteger0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<Boolean> linkedList0 = new LinkedList<Boolean>();
      TreeBag<Boolean> treeBag0 = new TreeBag<Boolean>((Collection<? extends Boolean>) linkedList0);
      Comparator<? super Boolean> comparator0 = treeBag0.comparator();
      assertNull(comparator0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(comparator0).toString();
      doReturn(0, 0).when(comparator0).compare(any() , any());
      TreeBag<Object> treeBag0 = new TreeBag<Object>(comparator0);
      TreeBag<Locale.FilteringMode> treeBag1 = new TreeBag<Locale.FilteringMode>();
      boolean boolean0 = treeBag0.add((Object) treeBag1);
      AbstractMapBag.MutableInteger abstractMapBag_MutableInteger0 = new AbstractMapBag.MutableInteger((-45));
      boolean boolean1 = treeBag0.add((Object) abstractMapBag_MutableInteger0);
      assertFalse(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TreeBag<AbstractMapBag.MutableInteger> treeBag0 = new TreeBag<AbstractMapBag.MutableInteger>();
      // Undeclared exception!
      try { 
        treeBag0.first();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TreeBag<Object> treeBag0 = new TreeBag<Object>();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        treeBag0.add(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Objects of type class java.lang.Object cannot be added to a naturally ordered TreeBag as it does not implement Comparable
         //
         verifyException("org.apache.commons.collections4.bag.TreeBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      EnumSet<Locale.Category> enumSet0 = EnumSet.of(locale_Category0, locale_Category0);
      TreeBag<Object> treeBag0 = new TreeBag<Object>((Iterable<?>) enumSet0);
      // Undeclared exception!
      try { 
        treeBag0.add((Object) "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TreeBag<Object> treeBag0 = null;
      try {
        treeBag0 = new TreeBag<Object>((Iterable<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.AbstractMapBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      Object object0 = new Object();
      linkedHashSet0.add(object0);
      TreeBag<Object> treeBag0 = null;
      try {
        treeBag0 = new TreeBag<Object>((Iterable<?>) linkedHashSet0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Objects of type class java.lang.Object cannot be added to a naturally ordered TreeBag as it does not implement Comparable
         //
         verifyException("org.apache.commons.collections4.bag.TreeBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TreeBag<Predicate<Object>> treeBag0 = new TreeBag<Predicate<Object>>();
      // Undeclared exception!
      try { 
        treeBag0.add((Predicate<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // object
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(comparator0).toString();
      TreeBag<Object> treeBag0 = new TreeBag<Object>(comparator0);
      Comparator<? super Object> comparator1 = treeBag0.comparator();
      assertNotNull(comparator1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashBag<Predicate<Object>> hashBag0 = new HashBag<Predicate<Object>>();
      Predicate<Object> predicate0 = AnyPredicate.anyPredicate((Collection<? extends Predicate<? super Object>>) hashBag0);
      hashBag0.add(predicate0);
      TreeBag<Predicate<Object>> treeBag0 = null;
      try {
        treeBag0 = new TreeBag<Predicate<Object>>((Collection<? extends Predicate<Object>>) hashBag0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Objects of type class org.apache.commons.collections4.functors.FalsePredicate cannot be added to a naturally ordered TreeBag as it does not implement Comparable
         //
         verifyException("org.apache.commons.collections4.bag.TreeBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TreeBag<AbstractMapBag.MutableInteger> treeBag0 = null;
      try {
        treeBag0 = new TreeBag<AbstractMapBag.MutableInteger>((Collection<? extends AbstractMapBag.MutableInteger>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.AbstractMapBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeBag<AbstractMapBag.MutableInteger> treeBag0 = new TreeBag<AbstractMapBag.MutableInteger>(comparator0);
      // Undeclared exception!
      try { 
        treeBag0.last();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      EnumSet<Locale.Category> enumSet0 = EnumSet.of(locale_Category0, locale_Category0);
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>((Iterable<? extends Locale.Category>) enumSet0);
      Locale.Category locale_Category1 = treeBag0.first();
      assertEquals(Locale.Category.FORMAT, locale_Category1);
  }
}
