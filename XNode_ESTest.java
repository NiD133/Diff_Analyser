/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 23 14:16:46 GMT 2025
 */

package org.apache.ibatis.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Locale;
import java.util.Properties;
import java.util.function.Supplier;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.ibatis.parsing.XNode;
import org.apache.ibatis.parsing.XPathParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.xml.sax.ext.DefaultHandler2;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XNode_ESTest extends XNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("`<k}k`_uR'");
      iIOMetadataNode0.removeChild(iIOMetadataNode0);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      String string0 = xNode0.toString();
      assertEquals("<`<k}k`_uR'>\n</`<k}k`_uR'>\n", string0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      XNode xNode1 = xNode0.newXNode(iIOMetadataNode0);
      assertNull(xNode1.getFloatBody());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      String string0 = xNode0.getValueBasedIdentifier();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      String string0 = xNode0.getStringBody("AB!:=lXjtIw");
      assertEquals("AB!:=lXjtIw", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      String string0 = xNode0.getStringBody("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      String string0 = xNode0.getStringAttribute("", supplier0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn("").when(supplier0).get();
      String string0 = xNode0.getStringAttribute("cK(Z'", supplier0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XPathParser xPathParser0 = new XPathParser((Document) null, false, properties0, defaultHandler2_0);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      String string0 = xNode0.getStringAttribute("", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(" />\n");
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      String string0 = xNode0.getStringAttribute(" ", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("2pY", "2pY");
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      String string0 = xNode0.getStringAttribute("2pY");
      assertNotNull(string0);
      assertEquals("2pY", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("W^Z|[");
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      String string0 = xNode0.getName();
      assertEquals("W^Z|[", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Long long0 = new Long(0L);
      Long long1 = xNode0.getLongBody(long0);
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Long long0 = new Long(11L);
      Long long1 = xNode0.getLongBody(long0);
      assertEquals(11L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Long long0 = xNode0.getLongBody((Long) null);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Long long0 = new Long(0L);
      Long long1 = xNode0.getLongAttribute("", long0);
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Long long0 = new Long(2541L);
      Long long1 = xNode0.getLongAttribute("%CjKdy/@j1\"{KuK'", long0);
      assertEquals(2541L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Long long0 = new Long((-2217L));
      Long long1 = xNode0.getLongAttribute("%CjKdy/@j1\"{KuK'", long0);
      assertEquals((-2217L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = new Integer(0);
      Integer integer1 = xNode0.getIntBody(integer0);
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = xNode0.getIntBody((Integer) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = new Integer((-1150));
      Integer integer1 = xNode0.getIntBody(integer0);
      assertEquals((-1150), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = new Integer(0);
      Integer integer1 = xNode0.getIntAttribute("biJO]9XZVS~T!6D,E{", integer0);
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = new Integer(3);
      Integer integer1 = xNode0.getIntAttribute("", integer0);
      assertEquals(3, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = new Integer((-170));
      Integer integer1 = xNode0.getIntAttribute("org.apache.ibatis.parsing.XNode", integer0);
      assertEquals((-170), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Float float0 = new Float(0.0);
      Float float1 = xNode0.getFloatBody(float0);
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Float float0 = new Float((double) 293L);
      Float float1 = xNode0.getFloatBody(float0);
      assertEquals(293.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Float float0 = new Float((-3170.6738875886467));
      Float float1 = xNode0.getFloatBody(float0);
      assertEquals((-3170.6738F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Float float0 = new Float(0.0);
      Float float1 = xNode0.getFloatAttribute("2_0_V", float0);
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Float float0 = new Float(507.2F);
      Float float1 = xNode0.getFloatAttribute("!=lM", float0);
      assertEquals(507.2F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Float float0 = new Float((-2026.99645744));
      Float float1 = xNode0.getFloatAttribute("X'y2is^hJ_9RY8Qzf~", float0);
      assertEquals((-2026.9965F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Float float0 = xNode0.getFloatAttribute("");
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(" />\n");
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Class<Locale.IsoCountryCode> class0 = Locale.IsoCountryCode.class;
      Locale.IsoCountryCode locale_IsoCountryCode0 = Locale.IsoCountryCode.PART1_ALPHA3;
      Locale.IsoCountryCode locale_IsoCountryCode1 = xNode0.getEnumAttribute(class0, "", locale_IsoCountryCode0);
      assertSame(locale_IsoCountryCode1, locale_IsoCountryCode0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Double double0 = new Double(97);
      Double double1 = xNode0.getDoubleBody(double0);
      assertEquals(97.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Double double0 = xNode0.getDoubleBody((Double) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Double double0 = new Double((-1696L));
      Double double1 = xNode0.getDoubleBody(double0);
      assertEquals((-1696.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("M>/QTFx#Et:2opz");
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Double double0 = new Double(0.0);
      Double double1 = xNode0.getDoubleAttribute("<M>/QTFx#Et:2opz />\n", double0);
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(" />\n");
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Double double0 = new Double(768.82985);
      Double double1 = xNode0.getDoubleAttribute("(z|PWb^", double0);
      assertEquals(768.82985, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Double double0 = xNode0.getDoubleAttribute("\"", (Double) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = xNode0.getBooleanBody(boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Boolean boolean0 = Boolean.valueOf("org.apache.ibatis.parsing.GenericTokenParser");
      Boolean boolean1 = xNode0.getBooleanBody(boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Boolean boolean0 = xNode0.getBooleanAttribute("null", (Boolean) null);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("2pY", "2pY");
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Boolean boolean0 = xNode0.getBooleanAttribute("2pY");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      List<XNode> list0 = xNode0.evalNodes("org.apache.ibatis.parsing.PropertyParser.default-value-separator");
      assertFalse(list0.contains(xNode0));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      XNode xNode1 = xNode0.evalNode("org.apache.ibatis.exceptions.IbatisException");
      assertNull(xNode1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode1);
      XPathParser xPathParser0 = new XPathParser((Document) null);
      Node node1 = iIOMetadataNode1.insertBefore(iIOMetadataNode0, node0);
      XNode xNode0 = new XNode(xPathParser0, node1, properties0);
      // Undeclared exception!
      try { 
        xNode0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getStringAttribute("07#W,'B'", (Supplier<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.parsing.XNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getStringAttribute((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getStringAttribute((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      xNode0.getPath();
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Long long0 = new Long(94L);
      // Undeclared exception!
      try { 
        xNode0.getLongAttribute((String) null, long0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getLongAttribute((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = Integer.valueOf(116);
      // Undeclared exception!
      try { 
        xNode0.getIntAttribute((String) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getIntAttribute((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Float float0 = new Float(0.0F);
      // Undeclared exception!
      try { 
        xNode0.getFloatAttribute((String) null, float0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Class<Locale.Category> class0 = Locale.Category.class;
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      // Undeclared exception!
      try { 
        xNode0.getEnumAttribute(class0, (String) null, locale_Category0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Class<Locale.Category> class0 = Locale.Category.class;
      // Undeclared exception!
      try { 
        xNode0.getEnumAttribute(class0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Double double0 = new Double(0.0);
      // Undeclared exception!
      try { 
        xNode0.getDoubleAttribute((String) null, double0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getDoubleAttribute((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        xNode0.getBooleanAttribute((String) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getBooleanAttribute((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.evalString("<null>\n  <null />\n</null>\n");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error evaluating XPath.  Cause: javax.xml.xpath.XPathExpressionException: javax.xml.transform.TransformerException: A location path was expected, but the following token was encountered:  <
         //
         verifyException("org.apache.ibatis.parsing.XPathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.evalString("null");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.parsing.XNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.evalNodes("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.parsing.XNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.evalNode("qY1AVLeE|y?n8Y<");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.parsing.XNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.evalDouble("X\u0003'5C;kL4$\u0006mq");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.parsing.XNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.evalBoolean("=)coWX*V^N1)|]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error evaluating XPath.  Cause: javax.xml.xpath.XPathExpressionException: javax.xml.transform.TransformerException: A location path was expected, but the following token was encountered:  =
         //
         verifyException("org.apache.ibatis.parsing.XPathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.evalBoolean("ZL{eHF");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.parsing.XNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Properties properties0 = new Properties();
      XNode xNode0 = null;
      try {
        xNode0 = new XNode((XPathParser) null, (Node) null, properties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      List<XNode> list0 = xNode0.getChildren();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      List<XNode> list0 = xNode0.getChildren();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("2pY", "2pY");
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Float float0 = new Float(1325.6389109520017);
      // Undeclared exception!
      try { 
        xNode0.getFloatAttribute("2pY", float0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(" />\n");
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Double double0 = new Double((-2446.09697821936));
      Double double1 = xNode0.getDoubleAttribute("< />\n />\n", double0);
      assertEquals((-2446.09697821936), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("2pY", "2pY");
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Double double0 = new Double((-1.0));
      // Undeclared exception!
      try { 
        xNode0.getDoubleAttribute("2pY", double0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Long long0 = xNode0.getLongAttribute("org.apache.ibatis.exceptions.IbatisException", (Long) null);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("2pY", "2pY");
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getLongAttribute("2pY", (Long) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"2pY\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = xNode0.getIntAttribute("^5CYJ", (Integer) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = xNode0.getBooleanAttribute("", boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      String string0 = xNode0.getStringAttribute("=)coWX*V^N1)|]", "=)coWX*V^N1)|]");
      assertEquals("=)coWX*V^N1)|]", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("2pY", "2pY");
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      String string0 = xNode0.getStringAttribute("2pY", "-%Y");
      assertEquals("2pY", string0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Class<Locale.IsoCountryCode> class0 = Locale.IsoCountryCode.class;
      xNode0.getEnumAttribute(class0, "", (Locale.IsoCountryCode) null);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode(" />\n");
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Float float0 = xNode0.getFloatBody((Float) null);
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Double double0 = new Double(0.0);
      Double double1 = xNode0.getDoubleBody(double0);
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Long long0 = new Long((-1669L));
      Long long1 = xNode0.getLongBody(long0);
      assertEquals((-1669L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = new Integer(97);
      Integer integer1 = xNode0.getIntBody(integer0);
      assertEquals(97, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Boolean boolean0 = xNode0.getBooleanBody((Boolean) null);
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      String string0 = xNode0.getStringBody((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      XNode xNode1 = xNode0.getParent();
      assertNull(xNode1.getBooleanBody());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      XNode xNode1 = xNode0.getParent();
      assertNull(xNode1);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      String string0 = xNode0.getStringAttribute("g\"7}o`");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      String string0 = xNode0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      String string0 = xNode0.toString();
      assertEquals("<null>\n  <null />\n</null>\n", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      xNode0.toString();
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("2iY", "2iY");
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      String string0 = xNode0.toString();
      assertEquals("<null 2iY=\"2iY\" />\n", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Float float0 = xNode0.getFloatAttribute("9>K6|", (Float) null);
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2pY");
      iIOMetadataNode0.setAttribute("2pY", "2pY");
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getFloatAttribute("2pY");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("name", "2iY");
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getDoubleAttribute("name");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("", "P29]`x-B?");
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getLongAttribute("");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"P29]`x-B?\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("2iY", "2iY");
      Properties properties0 = new Properties();
      XPathParser xPathParser0 = new XPathParser((Document) null, false, properties0);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Integer integer0 = new Integer(46);
      // Undeclared exception!
      try { 
        xNode0.getIntAttribute("2iY", integer0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"2iY\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("(GuYxoEF5(T:yL", "false");
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Boolean boolean0 = xNode0.getBooleanAttribute("(GuYxoEF5(T:yL", (Boolean) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn("cK(Z'").when(supplier0).get();
      String string0 = xNode0.getStringAttribute("cK(Z'", supplier0);
      assertEquals("cK(Z'", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("2iY", "0+jGUyO42`[");
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      String string0 = xNode0.getStringAttribute("2iY", supplier0);
      assertEquals("0+jGUyO42`[", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("2pY", "2pY");
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      Locale.IsoCountryCode locale_IsoCountryCode0 = Locale.IsoCountryCode.PART1_ALPHA2;
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Class<Locale.IsoCountryCode> class0 = Locale.IsoCountryCode.class;
      // Undeclared exception!
      try { 
        xNode0.getEnumAttribute(class0, "2pY", locale_IsoCountryCode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant java.util.Locale.IsoCountryCode.2pY
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode1);
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode1, properties0);
      String string0 = xNode0.getValueBasedIdentifier();
      assertEquals("null_null", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode1);
      DefaultHandler2 defaultHandler2_0 = new DefaultHandler2();
      XPathParser xPathParser0 = new XPathParser((Document) null, false, properties0, defaultHandler2_0);
      XNode xNode0 = new XNode(xPathParser0, node0, properties0);
      String string0 = xNode0.getPath();
      assertEquals("null/null", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.insertBefore(iIOMetadataNode1, iIOMetadataNode1);
      XNode xNode0 = new XNode((XPathParser) null, node0, (Properties) null);
      // Undeclared exception!
      try { 
        xNode0.getValueBasedIdentifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Double double0 = xNode0.getDoubleBody();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = xNode0.getIntBody();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Boolean boolean0 = xNode0.getBooleanBody();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.getFloatAttribute((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Long long0 = xNode0.getLongAttribute("");
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Float float0 = xNode0.getFloatBody();
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Boolean boolean0 = xNode0.evalBoolean("name");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Class<Locale.IsoCountryCode> class0 = Locale.IsoCountryCode.class;
      xNode0.getEnumAttribute(class0, "");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.evalNodes("y6<OipM*RS!4=R\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error evaluating XPath.  Cause: javax.xml.xpath.XPathExpressionException: javax.xml.transform.TransformerException: misquoted literal... expected double quote!
         //
         verifyException("org.apache.ibatis.parsing.XPathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.newXNode((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Integer integer0 = xNode0.getIntAttribute("9>K6|");
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      String string0 = xNode0.evalString("org.apache.ibatis.parsing.PropertyParser.enable-default-value");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Properties properties1 = xNode0.getChildrenAsProperties();
      assertTrue(properties1.equals((Object)properties0));
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      Node node0 = xNode0.getNode();
      assertSame(node0, iIOMetadataNode0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.evalNode("2iY");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error evaluating XPath.  Cause: javax.xml.xpath.XPathExpressionException: javax.xml.transform.TransformerException: 2iY could not be formatted to a number!
         //
         verifyException("org.apache.ibatis.parsing.XPathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Double double0 = xNode0.getDoubleAttribute("name");
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      // Undeclared exception!
      try { 
        xNode0.evalDouble("H%7;)SgDF9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error evaluating XPath.  Cause: javax.xml.xpath.XPathExpressionException: javax.xml.transform.TransformerException: Extra illegal tokens: ')', 'SgDF9'
         //
         verifyException("org.apache.ibatis.parsing.XPathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, false);
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Long long0 = xNode0.getLongBody();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XPathParser xPathParser0 = new XPathParser((Document) null, true);
      Properties properties0 = new Properties();
      XNode xNode0 = new XNode(xPathParser0, iIOMetadataNode0, properties0);
      Boolean boolean0 = xNode0.getBooleanAttribute("false");
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Properties properties0 = new Properties();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XNode xNode0 = new XNode((XPathParser) null, iIOMetadataNode0, properties0);
      String string0 = xNode0.getStringBody();
      assertNull(string0);
  }
}
