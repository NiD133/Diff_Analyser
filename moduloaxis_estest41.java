package org.jfree.chart.axis;

import org.jfree.chart.api.RectangleEdge;
import org.jfree.data.Range;
import org.junit.Test;
import static org.junit.Assert.assertEquals;

/**
 * This test class focuses on the behavior of the ModuloAxis class.
 * Note: The original test class was generated by a tool and included many
 * unused imports, which have been removed for clarity.
 */
public class ModuloAxis_ESTestTest41 extends ModuloAxis_ESTest_scaffolding {

    /**
     * Verifies that java2DToValue() returns the lower bound of the axis's range
     * when the drawing area (Rectangle2D) is null. This is a documented
     * special case in the source code.
     */
    @Test
    public void java2DToValue_withNullArea_shouldReturnLowerBoundOfRange() {
        // Arrange
        // A ModuloAxis is often used for compass-like displays, so a 0-360 range is a suitable example.
        Range fixedRange = new Range(0.0, 360.0);
        ModuloAxis moduloAxis = new ModuloAxis("Angle", fixedRange);

        // The expected result is the lower bound of the axis's range.
        double expectedValue = fixedRange.getLowerBound();
        
        // The actual Java2D coordinate and the edge should be ignored when the drawing area is null.
        double arbitraryJava2DCoordinate = 5.0;
        RectangleEdge edge = RectangleEdge.TOP;

        // Act
        // Call the method with a null drawing area to trigger the special case.
        double actualValue = moduloAxis.java2DToValue(arbitraryJava2DCoordinate, null, edge);

        // Assert
        // The method should return the lower bound of the fixed range.
        assertEquals("When the drawing area is null, java2DToValue should return the lower bound of the range.",
                expectedValue, actualValue, 0.01);
    }
}