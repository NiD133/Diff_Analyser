/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 17 19:47:32 GMT 2025
 */

package org.jfree.chart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Rectangle;
import java.awt.geom.Rectangle2D;
import java.util.Locale;
import java.util.SimpleTimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.entity.EntityCollection;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.data.xy.XYDatasetTableModel;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ChartRenderingInfo_ESTest extends ChartRenderingInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle rectangle0 = new Rectangle((-1), (-1), 1, 7);
      chartRenderingInfo0.setChartArea(rectangle0);
      chartRenderingInfo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo0.addSubplotInfo(plotRenderingInfo0);
      PlotRenderingInfo plotRenderingInfo1 = chartRenderingInfo0.getPlotInfo();
      assertEquals(1, plotRenderingInfo1.getSubplotCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      EntityCollection entityCollection0 = chartRenderingInfo0.getEntityCollection();
      assertNull(entityCollection0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(1, ",:Q.N1exKdJ$");
      Locale locale0 = Locale.JAPANESE;
      DateAxis dateAxis0 = new DateAxis(",:Q.N1exKdJ$", simpleTimeZone0, locale0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      jFreeChart0.createBufferedImage(10, 10, 1749.95538, (double) 2.0F, chartRenderingInfo0);
      EntityCollection entityCollection0 = chartRenderingInfo0.getEntityCollection();
      assertEquals(3, entityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      Rectangle rectangle0 = new Rectangle(1, 294, (-343), 7);
      chartRenderingInfo0.setChartArea(rectangle0);
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartRenderingInfo0.getChartArea();
      assertEquals(294.0, rectangle2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle rectangle0 = new Rectangle((-521), (-782), 0, (-2457));
      chartRenderingInfo0.setChartArea(rectangle0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      assertEquals((-2010.5), rectangle2D0.getCenterY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      rectangle2D_Double0.setFrameFromDiagonal(2626.9361169318868, 2868.898929, 0.0, 2868.898929);
      chartRenderingInfo0.setChartArea(rectangle2D_Double0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      assertEquals(0.0, rectangle2D0.getMinX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle rectangle0 = new Rectangle((-1), (-1), 1, 7);
      chartRenderingInfo0.setChartArea(rectangle0);
      Rectangle2D rectangle2D0 = chartRenderingInfo0.getChartArea();
      assertEquals(0.0, rectangle2D0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      // Undeclared exception!
      try { 
        chartRenderingInfo0.setChartArea((Rectangle2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      plotRenderingInfo0.addSubplotInfo(plotRenderingInfo0);
      // Undeclared exception!
      try { 
        chartRenderingInfo0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      assertTrue(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      
      chartRenderingInfo1.setEntityCollection((EntityCollection) null);
      boolean boolean0 = chartRenderingInfo0.equals(chartRenderingInfo1);
      assertFalse(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      assertTrue(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(1, ",:Q.N1exKdJ$");
      Locale locale0 = Locale.JAPANESE;
      DateAxis dateAxis0 = new DateAxis(",:Q.N1exKdJ$", simpleTimeZone0, locale0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      jFreeChart0.createBufferedImage(10, 10, 1749.95538, (double) 2.0F, chartRenderingInfo0);
      boolean boolean0 = chartRenderingInfo0.equals(chartRenderingInfo1);
      assertFalse(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      XYDatasetTableModel xYDatasetTableModel0 = new XYDatasetTableModel();
      boolean boolean0 = chartRenderingInfo0.equals(xYDatasetTableModel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      boolean boolean0 = chartRenderingInfo0.equals(chartRenderingInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Object object0 = chartRenderingInfo0.clone();
      boolean boolean0 = chartRenderingInfo0.equals(object0);
      assertNotSame(object0, chartRenderingInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.clear();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo((EntityCollection) null);
      chartRenderingInfo0.clear();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      chartRenderingInfo0.setEntityCollection((EntityCollection) null);
      Object object0 = chartRenderingInfo0.clone();
      assertNotSame(object0, chartRenderingInfo0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      ChartRenderingInfo chartRenderingInfo1 = new ChartRenderingInfo();
      assertTrue(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      
      plotRenderingInfo0.addSubplotInfo(plotRenderingInfo0);
      boolean boolean0 = chartRenderingInfo0.equals(chartRenderingInfo1);
      assertFalse(chartRenderingInfo1.equals((Object)chartRenderingInfo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      EntityCollection entityCollection0 = chartRenderingInfo0.getEntityCollection();
      assertEquals(0, entityCollection0.getEntityCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartRenderingInfo0.getChartArea();
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
  }
}
