/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 23 13:29:15 GMT 2025
 */

package com.fasterxml.jackson.core.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.io.SerializedString;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SerializedString_ESTest extends SerializedString_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Q");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        serializedString0.appendUnquoted(charArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("8+19.:23Vy=-x");
      byte[] byteArray0 = serializedString0.asUnquotedUTF8();
      // Undeclared exception!
      try { 
        serializedString0.appendQuotedUTF8(byteArray0, (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("E]`R4#OI%");
      MockFile mockFile0 = new MockFile("E]`R4#OI%", "E]`R4#OI%");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      int int0 = serializedString0.writeUnquotedUTF8(mockFileOutputStream0);
      assertEquals(9, int0);
      assertEquals(9L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(14);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0, 65);
      int int0 = serializedString0.writeQuotedUTF8(bufferedOutputStream0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("0");
      MockPrintStream mockPrintStream0 = new MockPrintStream("Sc2,\"g4ysda!5!{]");
      int int0 = serializedString0.writeQuotedUTF8(mockPrintStream0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString(";\"mRHC$u");
      String string0 = serializedString0.toString();
      assertEquals(";\"mRHC$u", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("'n~Q4n");
      serializedString0._jdkSerializeValue = "";
      Object object0 = serializedString0.readResolve();
      assertEquals("", object0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      int int0 = serializedString0.putUnquotedUTF8(byteBuffer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      int int0 = serializedString0.putQuotedUTF8(byteBuffer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      String string0 = serializedString0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      int int0 = serializedString0.charLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      char[] charArray0 = serializedString0.asQuotedChars();
      assertEquals(0, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      byte[] byteArray0 = new byte[2];
      int int0 = serializedString0.appendUnquotedUTF8(byteArray0, (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      char[] charArray0 = new char[7];
      int int0 = serializedString0.appendUnquoted(charArray0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("j");
      char[] charArray0 = new char[4];
      int int0 = serializedString0.appendUnquoted(charArray0, 1);
      assertEquals(1, int0);
      assertArrayEquals(new char[] {'\u0000', 'j', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      byte[] byteArray0 = new byte[9];
      int int0 = serializedString0.appendQuotedUTF8(byteArray0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      char[] charArray0 = new char[5];
      int int0 = serializedString0.appendQuoted(charArray0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      char[] charArray0 = new char[4];
      serializedString0._quotedChars = charArray0;
      int int0 = serializedString0.appendQuoted(charArray0, 0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      // Undeclared exception!
      try { 
        serializedString0.writeUnquotedUTF8((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        serializedString0.writeQuotedUTF8(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("X fh]-BVE2`Wh");
      // Undeclared exception!
      try { 
        serializedString0.putUnquotedUTF8((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      // Undeclared exception!
      try { 
        serializedString0.appendUnquotedUTF8((byte[]) null, (-443));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("R^$t>9-hl+");
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        serializedString0.appendUnquotedUTF8(byteArray0, (-1910));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("wSQ ");
      // Undeclared exception!
      try { 
        serializedString0.appendUnquoted((char[]) null, (-1666));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Rklr,bQx~YNd\"");
      // Undeclared exception!
      try { 
        serializedString0.appendQuotedUTF8((byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SerializedString serializedString0 = null;
      try {
        serializedString0 = new SerializedString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null String illegal for SerializedString
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      SerializedString serializedString1 = new SerializedString("");
      boolean boolean0 = serializedString0.equals(serializedString1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      boolean boolean0 = serializedString0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      boolean boolean0 = serializedString0.equals(serializedString0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("8+19.:23Vy=-x");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      boolean boolean0 = serializedString0.equals(byteBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString(" ");
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(3669);
      int int0 = serializedString0.putUnquotedUTF8(byteBuffer0);
      assertEquals(3668, byteBuffer0.remaining());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("L,3EO8LyQHon");
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      int int0 = serializedString0.putUnquotedUTF8(byteBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("8+19.:23Vy=-x");
      serializedString0.asUnquotedUTF8();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      int int0 = serializedString0.putUnquotedUTF8(byteBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(7);
      SerializedString serializedString0 = new SerializedString("8g9F:23V=x");
      int int0 = serializedString0.putQuotedUTF8(byteBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(3615);
      SerializedString serializedString0 = new SerializedString("8+19F:23Vy=-x");
      int int0 = serializedString0.putQuotedUTF8(byteBuffer0);
      assertEquals(3602, byteBuffer0.remaining());
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Q");
      serializedString0.asQuotedUTF8();
      // Undeclared exception!
      try { 
        serializedString0.putQuotedUTF8((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("2#>7299cK");
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        serializedString0.writeUnquotedUTF8(pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      byte[] byteArray0 = new byte[0];
      MockPrintStream mockPrintStream0 = new MockPrintStream("I?4|?BKE|");
      int int0 = serializedString0.appendUnquotedUTF8(byteArray0, 1);
      assertEquals((-1), int0);
      
      int int1 = serializedString0.writeUnquotedUTF8(mockPrintStream0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      // Undeclared exception!
      try { 
        serializedString0.writeQuotedUTF8((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      serializedString0.asQuotedUTF8();
      // Undeclared exception!
      try { 
        serializedString0.writeQuotedUTF8((OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("TP1aO6Zd");
      byte[] byteArray0 = serializedString0.asUnquotedUTF8();
      int int0 = serializedString0.appendUnquotedUTF8(byteArray0, 0);
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      byte[] byteArray0 = serializedString0.asUnquotedUTF8();
      assertNotNull(byteArray0);
      
      int int0 = serializedString0.appendUnquotedUTF8(byteArray0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString(", coipied ");
      char[] charArray0 = new char[2];
      int int0 = serializedString0.appendUnquoted(charArray0, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Broken surrogate pair: first char 0x");
      char[] charArray0 = serializedString0.asQuotedChars();
      // Undeclared exception!
      try { 
        serializedString0.appendUnquoted(charArray0, (-182));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("M:oX:\"bsoHuP");
      byte[] byteArray0 = new byte[14];
      int int0 = serializedString0.appendQuotedUTF8(byteArray0, (byte)77);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString(", coipied ");
      byte[] byteArray0 = serializedString0.asQuotedUTF8();
      assertNotNull(byteArray0);
      
      byte[] byteArray1 = new byte[20];
      int int0 = serializedString0.appendQuotedUTF8(byteArray1, 0);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Q");
      char[] charArray0 = serializedString0.asQuotedChars();
      // Undeclared exception!
      try { 
        serializedString0.appendQuoted(charArray0, (-932));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Q");
      // Undeclared exception!
      try { 
        serializedString0.appendQuoted((char[]) null, (-932));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.SerializedString", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("n5($,aeq=SuL");
      char[] charArray0 = serializedString0.asQuotedChars();
      assertNotNull(charArray0);
      
      int int0 = serializedString0.appendQuoted(charArray0, 188);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("R^$t>9-hl+");
      byte[] byteArray0 = serializedString0.asUnquotedUTF8();
      byte[] byteArray1 = serializedString0.asUnquotedUTF8();
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("Null String illegal for SerializedString");
      byte[] byteArray0 = serializedString0.asQuotedUTF8();
      byte[] byteArray1 = serializedString0.asQuotedUTF8();
      assertSame(byteArray1, byteArray0);
      assertNotNull(byteArray1);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("2]sk2");
      char[] charArray0 = serializedString0.asQuotedChars();
      char[] charArray1 = serializedString0.asQuotedChars();
      assertSame(charArray1, charArray0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("vH47?#$,~&t");
      // Undeclared exception!
      try { 
        serializedString0.readResolve();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null String illegal for SerializedString
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString(">l2[BA");
      serializedString0.hashCode();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      String string0 = serializedString0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("j");
      int int0 = serializedString0.charLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("TP1aO6Zd");
      String string0 = serializedString0.getValue();
      assertEquals("TP1aO6Zd", string0);
  }
}
