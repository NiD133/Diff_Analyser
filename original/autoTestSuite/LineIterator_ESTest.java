/*
 * This file was automatically generated by EvoSuite
 * Thu May 15 20:54:50 GMT 2025
 */

package org.apache.commons.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.Reader;
import java.io.StringReader;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import org.apache.commons.io.LineIterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LineIterator_ESTest extends LineIterator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")DuFnfWZ&V3D_i");
      LineIterator lineIterator0 = new LineIterator(stringReader0);
      String string0 = lineIterator0.nextLine();
      assertEquals(")DuFnfWZ&V3D_i", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\r");
      LineIterator lineIterator0 = new LineIterator(stringReader0);
      String string0 = lineIterator0.next();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      LineIterator lineIterator0 = new LineIterator(bufferedReader0);
      boolean boolean0 = lineIterator0.isValidLine("I?");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("CRLF");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      bufferedReader0.close();
      LineIterator lineIterator0 = new LineIterator(bufferedReader0);
      // Undeclared exception!
      try { 
        lineIterator0.nextLine();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.apache.commons.io.LineIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("org.apache.commons.io.LineIterator");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      bufferedReader0.close();
      LineIterator lineIterator0 = new LineIterator(bufferedReader0);
      // Undeclared exception!
      try { 
        lineIterator0.next();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.apache.commons.io.LineIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("DwHpo._Y&0~e=On_{");
      LineIterator lineIterator0 = new LineIterator(stringReader0);
      LineIterator lineIterator1 = new LineIterator(stringReader0);
      LineIterator.closeQuietly(lineIterator1);
      // Undeclared exception!
      try { 
        lineIterator0.hasNext();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // java.io.IOException: Stream closed
         //
         verifyException("org.apache.commons.io.LineIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LineIterator lineIterator0 = null;
      try {
        lineIterator0 = new LineIterator((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // reader
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      LineIterator lineIterator0 = new LineIterator(bufferedReader0);
      String string0 = lineIterator0.nextLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[>J6V7G{V9/r,");
      LineIterator lineIterator0 = new LineIterator(stringReader0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      lineIterator0.forEachRemaining(consumer0);
      boolean boolean0 = lineIterator0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("[>J6V7G{V9/r,");
      LineIterator lineIterator0 = new LineIterator(stringReader0);
      lineIterator0.hasNext();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      lineIterator0.forEachRemaining(consumer0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qA92@1;@bJJXiw\"");
      LineIterator lineIterator0 = new LineIterator(stringReader0);
      lineIterator0.close();
      // Undeclared exception!
      try { 
        lineIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No more lines
         //
         verifyException("org.apache.commons.io.LineIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader(")!PsaWEtKc");
      LineIterator lineIterator0 = new LineIterator(stringReader0);
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      lineIterator0.forEachRemaining(consumer0);
      // Undeclared exception!
      try { 
        lineIterator0.nextLine();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No more lines
         //
         verifyException("org.apache.commons.io.LineIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("qA92@1;@bJJXiw\"");
      LineIterator lineIterator0 = new LineIterator(stringReader0);
      String string0 = lineIterator0.next();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!77U'||S(5");
      BufferedReader bufferedReader0 = new BufferedReader(stringReader0);
      LineIterator lineIterator0 = new LineIterator(bufferedReader0);
      // Undeclared exception!
      try { 
        lineIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // remove not supported
         //
         verifyException("org.apache.commons.io.LineIterator", e);
      }
  }
}
