package org.jfree.chart.annotations;

import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.Drawable;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.BlockContainer;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.title.CompositeTitle;
import org.junit.Test;

import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;

// Note: The test class name "XYDrawableAnnotation_ESTestTest19" is generated by a tool.
// A more descriptive name would be "XYDrawableAnnotationTest".
public class XYDrawableAnnotation_ESTestTest19 extends XYDrawableAnnotation_ESTest_scaffolding {

    /**
     * This test verifies that the draw() method throws a NullPointerException
     * when the PlotRenderingInfo object has a null owner (ChartRenderingInfo)
     * and the annotation has a tooltip set.
     *
     * The tooltip triggers a call to add an entity, which fails when it tries
     * to access the entity collection from the null owner.
     */
    @Test(expected = NullPointerException.class)
    public void drawWithNullRenderingInfoOwnerAndTooltipShouldThrowNPE() {
        // Arrange
        // 1. Create a drawable object to be used by the annotation.
        Drawable drawable = new CompositeTitle(new BlockContainer());

        // 2. Create the annotation and set a tooltip text. The tooltip is crucial
        // for this test as it triggers the code path that adds a chart entity.
        XYDrawableAnnotation annotation = new XYDrawableAnnotation(10.0, 20.0, 100.0, 50.0, drawable);
        annotation.setToolTipText("Test Tooltip");

        // 3. Set up the necessary plot and axis objects required by the draw method.
        XYPlot plot = new XYPlot();
        Rectangle2D dataArea = new Rectangle2D.Double(0, 0, 400, 300);
        ValueAxis domainAxis = new NumberAxis("X-Axis");
        ValueAxis rangeAxis = new NumberAxis("Y-Axis");

        // 4. Create a Graphics2D context for drawing.
        BufferedImage image = new BufferedImage(400, 300, BufferedImage.TYPE_INT_ARGB);
        Graphics2D graphics = image.createGraphics();

        // 5. Create a PlotRenderingInfo with a null ChartRenderingInfo owner.
        // This is the specific condition that causes the expected exception.
        PlotRenderingInfo plotInfoWithNullOwner = new PlotRenderingInfo(null);
        int rendererIndex = 0;

        // Act
        // The following call will attempt to add an entity for the tooltip but will
        // fail because plotInfo.getOwner() returns null, leading to an NPE.
        annotation.draw(graphics, plot, dataArea, domainAxis, rangeAxis, rendererIndex, plotInfoWithNullOwner);

        // Assert
        // The @Test(expected = NullPointerException.class) annotation handles the
        // assertion, automatically failing the test if this exception is not thrown.
    }
}