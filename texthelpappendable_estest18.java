package org.apache.commons.cli.help;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import java.io.StringWriter;
import org.junit.Test;

// The original class name `TextHelpAppendable_ESTestTest18` was generated by a tool
// and is not descriptive. A more conventional name is used here.
public class TextHelpAppendableTest {

    @Test
    public void resizeWithNegativeFractionShouldSetWidthAndIndentToZero() {
        // Arrange
        // Use a StringWriter to prevent the test from writing to System.out.
        StringWriter writer = new StringWriter();
        TextHelpAppendable helpAppendable = new TextHelpAppendable(writer);
        TextStyle.Builder styleBuilder = helpAppendable.getTextStyleBuilder();

        // Sanity check: ensure the initial dimensions are positive before resizing.
        // The default width is 74 and indent is 3.
        assertTrue("Precondition: Initial max width must be positive.", helpAppendable.getMaxWidth() > 0);
        assertTrue("Precondition: Initial indent must be positive.", helpAppendable.getIndent() > 0);

        final double negativeFraction = -2.0;

        // Act
        // The resize method modifies the provided styleBuilder in place.
        helpAppendable.resize(styleBuilder, negativeFraction);

        // Assert
        // Since layout dimensions cannot be negative, resizing by a negative fraction
        // should result in the dimensions being floored at 0.
        assertEquals("Max width should be set to 0", 0, helpAppendable.getMaxWidth());
        assertEquals("Indent should be set to 0", 0, helpAppendable.getIndent());
    }
}