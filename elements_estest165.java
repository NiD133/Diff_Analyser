package org.jsoup.select;

import org.jsoup.nodes.Element;
import org.junit.Test;

/**
 * This test case verifies the behavior of the {@link Elements#nextAll()} method
 * when the collection contains invalid data, specifically null elements.
 *
 * Note: The original test class extended a scaffolding class generated by a tool.
 * This dependency has been removed to create a self-contained and clearer test case.
 */
public class Elements_ESTestTest165 {

    /**
     * Verifies that calling {@code nextAll()} on an {@code Elements} collection
     * containing a {@code null} member throws a {@code NullPointerException}.
     * <p>
     * The {@code nextAll()} method iterates through its elements to find their siblings.
     * When it encounters a {@code null} element, any attempt to call a method on it
     * will result in a {@code NullPointerException}, which is the expected behavior
     * for such invalid input.
     */
    @Test(expected = NullPointerException.class)
    public void nextAllShouldThrowNullPointerExceptionWhenListContainsNull() {
        // Arrange: Create an Elements collection containing a single null element.
        // One null is sufficient to demonstrate the behavior.
        Elements elementsWithNull = new Elements((Element) null);

        // Act: Call the method under test. This is expected to throw the exception.
        elementsWithNull.nextAll();

        // Assert: The test framework verifies that a NullPointerException was thrown,
        // as specified by the `expected` attribute of the @Test annotation. No further
        // assertions are needed.
    }
}