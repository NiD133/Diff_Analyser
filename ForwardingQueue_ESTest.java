/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 18:50:23 GMT 2025
 */

package com.google.common.collect;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.EvictingQueue;
import com.google.common.collect.LinkedListMultimap;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ForwardingQueue_ESTest extends ForwardingQueue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvictingQueue<Object> evictingQueue0 = EvictingQueue.create((int) 'b');
      Object object0 = new Object();
      evictingQueue0.standardOffer(object0);
      Object object1 = evictingQueue0.standardPoll();
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EvictingQueue<Locale.FilteringMode> evictingQueue0 = EvictingQueue.create(1);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      evictingQueue0.add(locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = evictingQueue0.standardPeek();
      assertSame(locale_FilteringMode1, locale_FilteringMode0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EvictingQueue<Object> evictingQueue0 = EvictingQueue.create((int) 'b');
      Object object0 = new Object();
      evictingQueue0.standardOffer(object0);
      Object object1 = evictingQueue0.remove();
      assertFalse(evictingQueue0.contains(object1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvictingQueue<Locale.FilteringMode> evictingQueue0 = EvictingQueue.create(126);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      evictingQueue0.add(locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = evictingQueue0.poll();
      assertFalse(evictingQueue0.contains(locale_FilteringMode1));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EvictingQueue<Locale.Category> evictingQueue0 = EvictingQueue.create(5760);
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      evictingQueue0.add(locale_Category0);
      Locale.Category locale_Category1 = evictingQueue0.peek();
      assertTrue(evictingQueue0.contains(locale_Category1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvictingQueue<Object> evictingQueue0 = EvictingQueue.create(613);
      LinkedListMultimap<Object, Object> linkedListMultimap0 = LinkedListMultimap.create();
      boolean boolean0 = evictingQueue0.offer(linkedListMultimap0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EvictingQueue<Object> evictingQueue0 = EvictingQueue.create(1937);
      Object object0 = new Object();
      evictingQueue0.standardOffer(object0);
      Object object1 = evictingQueue0.element();
      assertTrue(evictingQueue0.contains(object1));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EvictingQueue<Object> evictingQueue0 = EvictingQueue.create(2014);
      // Undeclared exception!
      try { 
        evictingQueue0.standardOffer((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EvictingQueue<Object> evictingQueue0 = EvictingQueue.create(2);
      // Undeclared exception!
      try { 
        evictingQueue0.offer((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvictingQueue<Object> evictingQueue0 = EvictingQueue.create((int) 'b');
      Object object0 = evictingQueue0.standardPoll();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EvictingQueue<Comparable<CharBuffer>> evictingQueue0 = EvictingQueue.create(0);
      Comparable<CharBuffer> comparable0 = evictingQueue0.standardPeek();
      assertNull(comparable0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EvictingQueue<Object> evictingQueue0 = EvictingQueue.create((int) 'b');
      // Undeclared exception!
      try { 
        evictingQueue0.remove();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvictingQueue<Object> evictingQueue0 = EvictingQueue.create(0);
      Object object0 = evictingQueue0.peek();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvictingQueue<Object> evictingQueue0 = EvictingQueue.create(1937);
      // Undeclared exception!
      try { 
        evictingQueue0.element();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EvictingQueue<Locale.FilteringMode> evictingQueue0 = EvictingQueue.create(126);
      evictingQueue0.poll();
  }
}
