package org.apache.commons.lang3.concurrent;

import org.junit.Test;
import java.util.NoSuchElementException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

/**
 * This test class has been refactored to improve understandability.
 * The original test was generated by EvoSuite and contained unclear naming and irrelevant code.
 */
public class MultiBackgroundInitializer_ESTestTest21 extends MultiBackgroundInitializer_ESTest_scaffolding {

    /**
     * Tests that calling getException() on the results of an empty MultiBackgroundInitializer
     * with a non-existent initializer name throws a NoSuchElementException.
     */
    @Test
    public void getExceptionForNonExistentInitializerShouldThrowNoSuchElementException() throws Exception {
        // Arrange
        // Create an initializer with no children and get its results.
        MultiBackgroundInitializer multiInitializer = new MultiBackgroundInitializer();
        MultiBackgroundInitializer.MultiBackgroundInitializerResults results = multiInitializer.initialize();
        final String nonExistentName = "nonExistentInitializer";

        // Act & Assert
        try {
            results.getException(nonExistentName);
            fail("Expected a NoSuchElementException to be thrown for a non-existent initializer name.");
        } catch (NoSuchElementException e) {
            // Verify that the correct exception was thrown with the expected message.
            final String expectedMessage = "No child initializer with name " + nonExistentName;
            assertEquals(expectedMessage, e.getMessage());
        }
    }
}