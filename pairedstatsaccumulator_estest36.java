package com.google.common.math;

import static org.junit.Assert.assertEquals;
import org.junit.Test;

/**
 * Tests for {@link PairedStatsAccumulator}.
 *
 * <p>The original test class name `PairedStatsAccumulator_ESTestTest36` and its scaffolding
 * parent class suggest it was generated by a tool. This has been simplified for clarity.
 */
public class PairedStatsAccumulatorTest {

    private static final double TOLERANCE = 0.01;

    @Test
    public void sampleCovariance_withTwoPoints_calculatesCorrectly() {
        // Arrange
        PairedStatsAccumulator accumulator = new PairedStatsAccumulator();
        // Add two data points. Note that 4.9E-324 is Double.MIN_VALUE,
        // which is effectively zero for this calculation.
        accumulator.add(4.9E-324, 1.0);
        accumulator.add(-1313.1264, 4.9E-324);

        // Act
        double actualSampleCovariance = accumulator.sampleCovariance();

        // Assert
        // For two points (x1, y1) and (x2, y2), the sample covariance is:
        // Σ[(xi - x_mean) * (yi - y_mean)] / (n - 1)
        // With our points (approx. 0, 1) and (-1313.1264, 0):
        // x_mean ≈ -656.5632
        // y_mean ≈ 0.5
        // cov ≈ [ (0 - (-656.5632)) * (1 - 0.5) + (-1313.1264 - (-656.5632)) * (0 - 0.5) ] / 1
        //     ≈ 656.5632 * 0.5 + (-656.5632) * (-0.5)
        //     ≈ 328.2816 + 328.2816 = 656.5632
        double expectedSampleCovariance = 656.5632;
        assertEquals(expectedSampleCovariance, actualSampleCovariance, TOLERANCE);
    }
}