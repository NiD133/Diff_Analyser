package org.apache.commons.cli.help;

import static org.junit.Assert.assertEquals;

import java.io.IOException;
import java.io.StringWriter;
import org.junit.Test;

/**
 * Tests for {@link TextHelpAppendable}.
 * This test class was improved for understandability.
 */
// The original test class extended a scaffolding class generated by EvoSuite.
// This is maintained to show the context of the original code.
public class TextHelpAppendable_ESTestTest92 extends TextHelpAppendable_ESTest_scaffolding {

    /**
     * Verifies that calling printWrapped() does not have side effects on the
     * TextHelpAppendable's configuration, such as its indent level or max width.
     */
    @Test(timeout = 4000)
    public void printWrappedShouldNotModifyInternalState() throws IOException {
        // Arrange: Create a TextHelpAppendable with a StringWriter to avoid console output
        // and set up the text and style for the operation.
        StringWriter writer = new StringWriter();
        TextHelpAppendable helpAppendable = new TextHelpAppendable(writer);
        TextStyle defaultStyle = TextStyle.DEFAULT;
        String textToPrint = "Width must be greater than 0";

        // Act: Call the method under test.
        helpAppendable.printWrapped(textToPrint, defaultStyle);

        // Assert: Verify that the configuration properties of the helpAppendable instance
        // remain unchanged and are still set to their default values.
        assertEquals("Max width should remain the default value after printing.",
            TextHelpAppendable.DEFAULT_WIDTH, helpAppendable.getMaxWidth());
        assertEquals("Indent should remain the default value after printing.",
            TextHelpAppendable.DEFAULT_INDENT, helpAppendable.getIndent());
    }
}