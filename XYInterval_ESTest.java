/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 17 19:37:14 GMT 2025
 */

package org.jfree.data.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.data.xy.XYInterval;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class XYInterval_ESTest extends XYInterval_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, 0.0, (-482.4691016522));
      boolean boolean0 = xYInterval1.equals(xYInterval0);
      assertFalse(xYInterval0.equals((Object)xYInterval1));
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, (-4225.494), 953.2917971756976);
      boolean boolean0 = xYInterval1.equals(xYInterval0);
      assertFalse(boolean0);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(953.2917971756976, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals((-4225.494), xYInterval1.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, (-2810.0), 2884.608252158, (-2810.0));
      boolean boolean0 = xYInterval1.equals(xYInterval0);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertFalse(boolean0);
      assertEquals(2884.608252158, xYInterval1.getYLow(), 0.01);
      assertEquals((-2810.0), xYInterval1.getYHigh(), 0.01);
      assertEquals((-2810.0), xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, (-1.0), 0.0, 0.0, (-1.0));
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 1.0, 0.0, 0.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(1.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals((-1.0), xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(1.0, 0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = xYInterval1.equals(xYInterval0);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertFalse(xYInterval0.equals((Object)xYInterval1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(2850.5914155, 2850.5914155, 2850.5914155, 2850.5914155, (-1461.548));
      double double0 = xYInterval0.getYLow();
      assertEquals(2850.5914155, double0, 0.01);
      assertEquals(2850.5914155, xYInterval0.getXHigh(), 0.01);
      assertEquals(2850.5914155, xYInterval0.getY(), 0.01);
      assertEquals(2850.5914155, xYInterval0.getXLow(), 0.01);
      assertEquals((-1461.548), xYInterval0.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1.0), (-1.0), 0.0, (-3333.3187), (-1.0));
      double double0 = xYInterval0.getYLow();
      assertEquals((-1.0), xYInterval0.getYHigh(), 0.01);
      assertEquals((-1.0), xYInterval0.getXHigh(), 0.01);
      assertEquals((-3333.3187), double0, 0.01);
      assertEquals((-1.0), xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(1.0, 1.0, 1.0, 1.0, 1.0);
      double double0 = xYInterval0.getYHigh();
      assertEquals(1.0, xYInterval0.getXLow(), 0.01);
      assertEquals(1.0, xYInterval0.getY(), 0.01);
      assertEquals(1.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, xYInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, (-4479.95885));
      double double0 = xYInterval0.getYHigh();
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals((-4479.95885), double0, 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(2850.5914155, 2850.5914155, 2850.5914155, 2850.5914155, (-1461.548));
      double double0 = xYInterval0.getY();
      assertEquals(2850.5914155, double0, 0.01);
      assertEquals(2850.5914155, xYInterval0.getYLow(), 0.01);
      assertEquals(2850.5914155, xYInterval0.getXHigh(), 0.01);
      assertEquals((-1461.548), xYInterval0.getYHigh(), 0.01);
      assertEquals(2850.5914155, xYInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-1607.637878647), (-1607.637878647), (-1607.637878647), 0.0, 0.0);
      double double0 = xYInterval0.getY();
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals((-1607.637878647), xYInterval0.getXLow(), 0.01);
      assertEquals((-1607.637878647), double0, 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals((-1607.637878647), xYInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(2850.5914155, 2850.5914155, 2850.5914155, 2850.5914155, (-1461.548));
      double double0 = xYInterval0.getXLow();
      assertEquals(2850.5914155, xYInterval0.getYLow(), 0.01);
      assertEquals(2850.5914155, xYInterval0.getY(), 0.01);
      assertEquals(2850.5914155, double0, 0.01);
      assertEquals((-1461.548), xYInterval0.getYHigh(), 0.01);
      assertEquals(2850.5914155, xYInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-2082.436), (-1.0), 1907.7299979743054, 0.0, 1.0);
      double double0 = xYInterval0.getXLow();
      assertEquals((-2082.436), double0, 0.01);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals((-1.0), xYInterval0.getXHigh(), 0.01);
      assertEquals(1907.7299979743054, xYInterval0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(2850.5914155, 2850.5914155, 2850.5914155, 2850.5914155, (-1461.548));
      double double0 = xYInterval0.getXHigh();
      assertEquals(2850.5914155, xYInterval0.getXLow(), 0.01);
      assertEquals((-1461.548), xYInterval0.getYHigh(), 0.01);
      assertEquals(2850.5914155, double0, 0.01);
      assertEquals(2850.5914155, xYInterval0.getY(), 0.01);
      assertEquals(2850.5914155, xYInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-2082.436), (-1.0), 1907.7299979743054, 0.0, 1.0);
      double double0 = xYInterval0.getXHigh();
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(1907.7299979743054, xYInterval0.getY(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-2082.436), xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, 0.0, (-482.4691016522));
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals((-482.4691016522), xYInterval1.getYHigh(), 0.01);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = xYInterval1.equals(xYInterval0);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, (-2810.0), 2884.608252158, (-2810.0));
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals((-2810.0), xYInterval1.getY(), 0.01);
      assertEquals((-2810.0), xYInterval1.getYHigh(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(2884.608252158, xYInterval1.getYLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(689.6742630008566, 689.6742630008566, 689.6742630008566, 689.6742630008566, 689.6742630008566);
      XYInterval xYInterval1 = new XYInterval(689.6742630008566, (-1.0), (-1.0), 689.6742630008566, (-1.0));
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(689.6742630008566, xYInterval1.getYLow(), 0.01);
      assertEquals((-1.0), xYInterval1.getYHigh(), 0.01);
      assertEquals(689.6742630008566, xYInterval1.getXLow(), 0.01);
      assertFalse(boolean0);
      assertEquals((-1.0), xYInterval1.getXHigh(), 0.01);
      assertEquals((-1.0), xYInterval1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(1.0, 0.0, 0.0, 0.0, 0.0);
      boolean boolean0 = xYInterval0.equals(xYInterval1);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertFalse(xYInterval1.equals((Object)xYInterval0));
      assertFalse(boolean0);
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      Object object0 = new Object();
      boolean boolean0 = xYInterval0.equals(object0);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertFalse(boolean0);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval((-4479.95885), (-4479.95885), (-446.52402887375), (-482.4691016522), 1.0);
      boolean boolean0 = xYInterval0.equals(xYInterval0);
      assertEquals((-446.52402887375), xYInterval0.getY(), 0.01);
      assertEquals((-482.4691016522), xYInterval0.getYLow(), 0.01);
      assertTrue(boolean0);
      assertEquals(1.0, xYInterval0.getYHigh(), 0.01);
      assertEquals((-4479.95885), xYInterval0.getXLow(), 0.01);
      assertEquals((-4479.95885), xYInterval0.getXHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      XYInterval xYInterval1 = new XYInterval(0.0, 0.0, 0.0, 3289.17253997, 0.0);
      boolean boolean0 = xYInterval1.equals(xYInterval0);
      assertFalse(boolean0);
      assertFalse(xYInterval0.equals((Object)xYInterval1));
      assertEquals(0.0, xYInterval1.getYHigh(), 0.01);
      assertEquals(3289.17253997, xYInterval1.getYLow(), 0.01);
      assertEquals(0.0, xYInterval1.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval1.getXLow(), 0.01);
      assertEquals(0.0, xYInterval1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      double double0 = xYInterval0.getYHigh();
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, (-4479.95885));
      double double0 = xYInterval0.getY();
      assertEquals((-4479.95885), xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      double double0 = xYInterval0.getXLow();
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      double double0 = xYInterval0.getXHigh();
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
      assertEquals(0.0, xYInterval0.getYLow(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XYInterval xYInterval0 = new XYInterval(0.0, 0.0, 0.0, 0.0, 0.0);
      double double0 = xYInterval0.getYLow();
      assertEquals(0.0, xYInterval0.getYHigh(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, xYInterval0.getXLow(), 0.01);
      assertEquals(0.0, xYInterval0.getXHigh(), 0.01);
      assertEquals(0.0, xYInterval0.getY(), 0.01);
  }
}
