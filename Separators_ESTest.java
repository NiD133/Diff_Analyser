/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 23 13:28:51 GMT 2025
 */

package com.fasterxml.jackson.core.util;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.core.util.Separators;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Separators_ESTest extends Separators_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.AFTER;
      Separators separators0 = new Separators("", ')', separators_Spacing0, ')', separators_Spacing0, "", 'M', separators_Spacing0, "");
      Separators separators1 = separators0.withArrayValueSeparator('T');
      assertEquals(')', separators0.getObjectEntrySeparator());
      assertEquals(')', separators0.getObjectFieldValueSeparator());
      assertEquals("", separators1.getArrayEmptySeparator());
      assertEquals('T', separators1.getArrayValueSeparator());
      assertEquals("", separators1.getObjectEmptySeparator());
      assertEquals("", separators1.getRootSeparator());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Separators separators0 = new Separators();
      Separators separators1 = separators0.withArrayValueSeparator('(');
      assertEquals(':', separators0.getObjectFieldValueSeparator());
      assertEquals('(', separators1.getArrayValueSeparator());
      assertEquals(',', separators1.getObjectEntrySeparator());
      assertEquals(Separators.Spacing.NONE, separators1.getObjectEntrySpacing());
      assertEquals(',', separators0.getObjectEntrySeparator());
      assertEquals(Separators.Spacing.BOTH, separators1.getObjectFieldValueSpacing());
      assertEquals(Separators.Spacing.NONE, separators1.getArrayValueSpacing());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.AFTER;
      Separators.Spacing separators_Spacing1 = Separators.Spacing.BEFORE;
      Separators separators0 = new Separators("", ')', separators_Spacing0, ')', separators_Spacing1, "", 'M', separators_Spacing0, "");
      Separators separators1 = separators0.withObjectEntrySpacing(separators_Spacing0);
      assertEquals("", separators1.getObjectEmptySeparator());
      assertEquals(')', separators0.getObjectEntrySeparator());
      assertEquals(Separators.Spacing.AFTER, separators0.getObjectFieldValueSpacing());
      assertEquals("", separators1.getRootSeparator());
      assertEquals(Separators.Spacing.AFTER, separators0.getArrayValueSpacing());
      assertEquals(')', separators0.getObjectFieldValueSeparator());
      assertEquals("", separators1.getArrayEmptySeparator());
      assertEquals('M', separators0.getArrayValueSeparator());
      assertNotSame(separators1, separators0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Separators separators0 = new Separators('z', 'b', 'z');
      Separators separators1 = separators0.withRootSeparator("");
      Separators.Spacing separators_Spacing0 = Separators.Spacing.AFTER;
      Separators separators2 = separators1.withObjectEntrySpacing(separators_Spacing0);
      assertEquals(Separators.Spacing.AFTER, separators2.getObjectEntrySpacing());
      assertEquals(" ", separators2.getArrayEmptySeparator());
      assertEquals(" ", separators2.getObjectEmptySeparator());
      assertEquals(Separators.Spacing.BOTH, separators2.getObjectFieldValueSpacing());
      assertEquals(Separators.Spacing.NONE, separators2.getArrayValueSpacing());
      assertEquals('z', separators2.getObjectFieldValueSeparator());
      assertEquals("", separators2.getRootSeparator());
      assertEquals('z', separators2.getArrayValueSeparator());
      assertEquals('b', separators2.getObjectEntrySeparator());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators((String) null, '6', separators_Spacing0, 'E', separators_Spacing0, (String) null, '3', separators_Spacing0, (String) null);
      Separators separators1 = separators0.withObjectEntrySeparator('>');
      assertEquals('6', separators0.getObjectFieldValueSeparator());
      assertEquals('>', separators1.getObjectEntrySeparator());
      assertEquals('3', separators0.getArrayValueSeparator());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.BOTH;
      Separators separators0 = new Separators((String) null, 'A', separators_Spacing0, 'A', separators_Spacing0, (String) null, 'A', separators_Spacing0, (String) null);
      Separators separators1 = separators0.withObjectFieldValueSeparator('?');
      assertEquals('A', separators0.getArrayValueSeparator());
      assertEquals('A', separators1.getArrayValueSeparator());
      assertEquals('A', separators0.getObjectEntrySeparator());
      assertEquals('A', separators1.getObjectEntrySeparator());
      assertEquals('?', separators1.getObjectFieldValueSeparator());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.AFTER;
      Separators separators0 = new Separators("U?B$vB\"1@5", 'V', separators_Spacing0, 'V', separators_Spacing0, '7', separators_Spacing0);
      Separators separators1 = separators0.withObjectFieldValueSeparator('O');
      assertEquals('V', separators1.getObjectEntrySeparator());
      assertEquals('V', separators0.getObjectEntrySeparator());
      assertEquals('O', separators1.getObjectFieldValueSeparator());
      assertEquals('7', separators0.getArrayValueSeparator());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.BOTH;
      Separators separators0 = new Separators("", 'a', separators_Spacing0, 'O', separators_Spacing0, "OA)D?vv7:1U", 'a', separators_Spacing0, "OA)D?vv7:1U");
      String string0 = separators0.getRootSeparator();
      assertEquals('a', separators0.getArrayValueSeparator());
      assertEquals("OA)D?vv7:1U", separators0.getObjectEmptySeparator());
      assertEquals('O', separators0.getObjectEntrySeparator());
      assertEquals("OA)D?vv7:1U", separators0.getArrayEmptySeparator());
      assertEquals("", string0);
      assertEquals('a', separators0.getObjectFieldValueSeparator());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Separators separators0 = Separators.createDefaultInstance();
      Separators separators1 = separators0.withObjectFieldValueSeparator('8');
      char char0 = separators1.getObjectFieldValueSeparator();
      assertEquals(Separators.Spacing.NONE, separators1.getObjectEntrySpacing());
      assertEquals(',', separators0.getObjectEntrySeparator());
      assertEquals('8', char0);
      assertEquals(Separators.Spacing.BOTH, separators1.getObjectFieldValueSpacing());
      assertEquals(',', separators0.getArrayValueSeparator());
      assertEquals(Separators.Spacing.NONE, separators1.getArrayValueSpacing());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'j', separators_Spacing0, 'j', separators_Spacing0, "nCF", 'W', separators_Spacing0, "nCF");
      char char0 = separators0.getObjectFieldValueSeparator();
      assertEquals("nCF", separators0.getObjectEmptySeparator());
      assertEquals('W', separators0.getArrayValueSeparator());
      assertEquals('j', char0);
      assertEquals("", separators0.getRootSeparator());
      assertEquals("nCF", separators0.getArrayEmptySeparator());
      assertEquals('j', separators0.getObjectEntrySeparator());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Separators separators0 = new Separators();
      char char0 = separators0.getObjectEntrySeparator();
      assertEquals(',', separators0.getArrayValueSeparator());
      assertEquals(Separators.Spacing.BOTH, separators0.getObjectFieldValueSpacing());
      assertEquals(Separators.Spacing.NONE, separators0.getArrayValueSpacing());
      assertEquals(':', separators0.getObjectFieldValueSeparator());
      assertEquals(Separators.Spacing.NONE, separators0.getObjectEntrySpacing());
      assertEquals(',', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Separators separators0 = new Separators('f', 'f', 'f');
      char char0 = separators0.getObjectEntrySeparator();
      assertEquals('f', separators0.getArrayValueSeparator());
      assertEquals('f', char0);
      assertEquals(Separators.Spacing.NONE, separators0.getObjectEntrySpacing());
      assertEquals(Separators.Spacing.BOTH, separators0.getObjectFieldValueSpacing());
      assertEquals(Separators.Spacing.NONE, separators0.getArrayValueSpacing());
      assertEquals('f', separators0.getObjectFieldValueSeparator());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators((String) null, '6', separators_Spacing0, 'E', separators_Spacing0, (String) null, '3', separators_Spacing0, (String) null);
      String string0 = separators0.getObjectEmptySeparator();
      assertEquals('6', separators0.getObjectFieldValueSeparator());
      assertEquals('E', separators0.getObjectEntrySeparator());
      assertEquals('3', separators0.getArrayValueSeparator());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.AFTER;
      Separators separators0 = new Separators("U?B$vB\"1@5", 'V', separators_Spacing0, 'V', separators_Spacing0, '7', separators_Spacing0);
      char char0 = separators0.getArrayValueSeparator();
      assertEquals('7', char0);
      assertEquals('V', separators0.getObjectFieldValueSeparator());
      assertEquals('V', separators0.getObjectEntrySeparator());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Separators separators0 = new Separators('J', 'J', 'N');
      char char0 = separators0.getArrayValueSeparator();
      assertEquals('J', separators0.getObjectFieldValueSeparator());
      assertEquals(Separators.Spacing.NONE, separators0.getObjectEntrySpacing());
      assertEquals(Separators.Spacing.BOTH, separators0.getObjectFieldValueSpacing());
      assertEquals(Separators.Spacing.NONE, separators0.getArrayValueSpacing());
      assertEquals('N', char0);
      assertEquals('J', separators0.getObjectEntrySeparator());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.BOTH;
      Separators separators0 = new Separators((String) null, 'A', separators_Spacing0, 'A', separators_Spacing0, (String) null, 'A', separators_Spacing0, (String) null);
      String string0 = separators0.getArrayEmptySeparator();
      assertEquals('A', separators0.getObjectEntrySeparator());
      assertEquals('A', separators0.getObjectFieldValueSeparator());
      assertNull(string0);
      assertEquals('A', separators0.getArrayValueSeparator());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.AFTER;
      Separators separators0 = new Separators("oRb)u^~$[*+b+7&Gu", 'D', separators_Spacing0, 'y', separators_Spacing0, "oRb)u^~$[*+b+7&Gu", '1', separators_Spacing0, "com.fasterxml.jackson.core.util.Separators$Spacing");
      String string0 = separators0.getArrayEmptySeparator();
      assertEquals('1', separators0.getArrayValueSeparator());
      assertEquals('y', separators0.getObjectEntrySeparator());
      assertEquals("oRb)u^~$[*+b+7&Gu", separators0.getObjectEmptySeparator());
      assertEquals('D', separators0.getObjectFieldValueSeparator());
      assertEquals("com.fasterxml.jackson.core.util.Separators$Spacing", string0);
      assertEquals("oRb)u^~$[*+b+7&Gu", separators0.getRootSeparator());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Separators separators0 = new Separators();
      separators0.getObjectEmptySeparator();
      assertEquals(',', separators0.getArrayValueSeparator());
      assertEquals(',', separators0.getObjectEntrySeparator());
      assertEquals(Separators.Spacing.BOTH, separators0.getObjectFieldValueSpacing());
      assertEquals(Separators.Spacing.NONE, separators0.getArrayValueSpacing());
      assertEquals(Separators.Spacing.NONE, separators0.getObjectEntrySpacing());
      assertEquals(':', separators0.getObjectFieldValueSeparator());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators((String) null, '6', separators_Spacing0, 'E', separators_Spacing0, (String) null, '3', separators_Spacing0, (String) null);
      Separators separators1 = separators0.withArrayEmptySeparator((String) null);
      assertEquals('E', separators1.getObjectEntrySeparator());
      assertSame(separators1, separators0);
      assertEquals('3', separators1.getArrayValueSeparator());
      assertEquals('6', separators1.getObjectFieldValueSeparator());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      Separators separators1 = separators0.withArrayEmptySeparator(" ");
      assertEquals("", separators1.getObjectEmptySeparator());
      assertEquals('J', separators0.getArrayValueSeparator());
      assertEquals(" ", separators1.getArrayEmptySeparator());
      assertEquals('J', separators0.getObjectEntrySeparator());
      assertEquals("", separators1.getRootSeparator());
      assertNotSame(separators1, separators0);
      assertEquals('J', separators0.getObjectFieldValueSeparator());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.AFTER;
      Separators separators0 = new Separators("oRb)u^~$[*+b+7&Gu", 'D', separators_Spacing0, 'y', separators_Spacing0, "oRb)u^~$[*+b+7&Gu", '1', separators_Spacing0, "com.fasterxml.jackson.core.util.Separators$Spacing");
      Separators separators1 = separators0.withArrayValueSpacing(separators_Spacing0);
      assertEquals("com.fasterxml.jackson.core.util.Separators$Spacing", separators1.getArrayEmptySeparator());
      assertEquals('y', separators1.getObjectEntrySeparator());
      assertEquals("oRb)u^~$[*+b+7&Gu", separators1.getRootSeparator());
      assertEquals('D', separators1.getObjectFieldValueSeparator());
      assertEquals('1', separators1.getArrayValueSeparator());
      assertEquals("oRb)u^~$[*+b+7&Gu", separators1.getObjectEmptySeparator());
      assertSame(separators1, separators0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      Separators.Spacing separators_Spacing1 = Separators.Spacing.AFTER;
      Separators separators1 = separators0.withArrayValueSpacing(separators_Spacing1);
      assertEquals('J', separators0.getArrayValueSeparator());
      assertEquals("", separators1.getRootSeparator());
      assertEquals(Separators.Spacing.NONE, separators1.getObjectFieldValueSpacing());
      assertEquals('J', separators0.getObjectEntrySeparator());
      assertEquals(Separators.Spacing.AFTER, separators1.getArrayValueSpacing());
      assertEquals("2U#AD9", separators1.getArrayEmptySeparator());
      assertEquals('J', separators0.getObjectFieldValueSeparator());
      assertEquals("", separators1.getObjectEmptySeparator());
      assertEquals(Separators.Spacing.NONE, separators1.getObjectEntrySpacing());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      Separators separators1 = separators0.withArrayValueSeparator('J');
      assertEquals('J', separators1.getObjectFieldValueSeparator());
      assertSame(separators1, separators0);
      assertEquals("", separators1.getRootSeparator());
      assertEquals('J', separators1.getObjectEntrySeparator());
      assertEquals("2U#AD9", separators1.getArrayEmptySeparator());
      assertEquals("", separators1.getObjectEmptySeparator());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      Separators separators1 = separators0.withObjectEmptySeparator("");
      assertSame(separators1, separators0);
      assertEquals('J', separators1.getObjectFieldValueSeparator());
      assertEquals("", separators1.getRootSeparator());
      assertEquals('J', separators1.getObjectEntrySeparator());
      assertEquals("2U#AD9", separators1.getArrayEmptySeparator());
      assertEquals('J', separators1.getArrayValueSeparator());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      Separators separators1 = separators0.withObjectEmptySeparator(" ");
      assertEquals('J', separators0.getObjectEntrySeparator());
      assertEquals("2U#AD9", separators1.getArrayEmptySeparator());
      assertEquals(" ", separators1.getObjectEmptySeparator());
      assertEquals('J', separators0.getArrayValueSeparator());
      assertEquals("", separators1.getRootSeparator());
      assertEquals('J', separators0.getObjectFieldValueSeparator());
      assertNotSame(separators1, separators0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Separators separators0 = Separators.createDefaultInstance();
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators1 = separators0.withObjectEntrySpacing(separators_Spacing0);
      assertEquals(',', separators1.getObjectEntrySeparator());
      assertEquals(',', separators1.getArrayValueSeparator());
      assertEquals(Separators.Spacing.NONE, separators1.getArrayValueSpacing());
      assertEquals(':', separators1.getObjectFieldValueSeparator());
      assertEquals(Separators.Spacing.BOTH, separators1.getObjectFieldValueSpacing());
      assertSame(separators1, separators0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      Separators separators1 = separators0.withObjectEntrySeparator('J');
      assertEquals("", separators1.getObjectEmptySeparator());
      assertEquals("2U#AD9", separators1.getArrayEmptySeparator());
      assertEquals('J', separators1.getArrayValueSeparator());
      assertEquals('J', separators1.getObjectFieldValueSeparator());
      assertSame(separators1, separators0);
      assertEquals("", separators1.getRootSeparator());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Separators separators0 = Separators.createDefaultInstance();
      Separators separators1 = separators0.withObjectEntrySeparator('e');
      assertEquals(',', separators1.getArrayValueSeparator());
      assertEquals(',', separators0.getArrayValueSeparator());
      assertEquals('e', separators1.getObjectEntrySeparator());
      assertEquals(Separators.Spacing.NONE, separators1.getObjectEntrySpacing());
      assertEquals(Separators.Spacing.BOTH, separators1.getObjectFieldValueSpacing());
      assertEquals(Separators.Spacing.NONE, separators1.getArrayValueSpacing());
      assertEquals(':', separators0.getObjectFieldValueSeparator());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Separators separators0 = Separators.createDefaultInstance();
      Separators.Spacing separators_Spacing0 = Separators.Spacing.BOTH;
      Separators separators1 = separators0.withObjectFieldValueSpacing(separators_Spacing0);
      assertEquals(Separators.Spacing.NONE, separators1.getObjectEntrySpacing());
      assertEquals(',', separators1.getArrayValueSeparator());
      assertEquals(Separators.Spacing.NONE, separators1.getArrayValueSpacing());
      assertEquals(':', separators1.getObjectFieldValueSeparator());
      assertEquals(',', separators1.getObjectEntrySeparator());
      assertSame(separators1, separators0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      Separators.Spacing separators_Spacing1 = Separators.Spacing.AFTER;
      Separators separators1 = separators0.withObjectFieldValueSpacing(separators_Spacing1);
      assertEquals('J', separators0.getObjectFieldValueSeparator());
      assertEquals("2U#AD9", separators1.getArrayEmptySeparator());
      assertEquals("", separators1.getObjectEmptySeparator());
      assertEquals(Separators.Spacing.NONE, separators1.getArrayValueSpacing());
      assertEquals(Separators.Spacing.NONE, separators1.getObjectEntrySpacing());
      assertEquals("", separators1.getRootSeparator());
      assertEquals('J', separators0.getArrayValueSeparator());
      assertEquals(Separators.Spacing.AFTER, separators1.getObjectFieldValueSpacing());
      assertEquals('J', separators0.getObjectEntrySeparator());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      Separators separators1 = separators0.withObjectFieldValueSeparator('J');
      assertSame(separators1, separators0);
      assertEquals("", separators1.getRootSeparator());
      assertEquals("2U#AD9", separators1.getArrayEmptySeparator());
      assertEquals('J', separators1.getArrayValueSeparator());
      assertEquals("", separators1.getObjectEmptySeparator());
      assertEquals('J', separators1.getObjectEntrySeparator());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Separators separators0 = Separators.createDefaultInstance();
      Separators separators1 = separators0.withObjectFieldValueSeparator('|');
      assertEquals('|', separators1.getObjectFieldValueSeparator());
      assertEquals(',', separators0.getArrayValueSeparator());
      assertEquals(Separators.Spacing.NONE, separators1.getObjectEntrySpacing());
      assertEquals(Separators.Spacing.NONE, separators1.getArrayValueSpacing());
      assertEquals(Separators.Spacing.BOTH, separators1.getObjectFieldValueSpacing());
      assertEquals(',', separators0.getObjectEntrySeparator());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      Separators separators1 = separators0.withRootSeparator(" ");
      Separators separators2 = separators1.withRootSeparator(" ");
      assertEquals('J', separators0.getArrayValueSeparator());
      assertNotSame(separators2, separators0);
      assertEquals("2U#AD9", separators2.getArrayEmptySeparator());
      assertSame(separators2, separators1);
      assertEquals('J', separators0.getObjectEntrySeparator());
      assertEquals("", separators2.getObjectEmptySeparator());
      assertEquals('J', separators0.getObjectFieldValueSeparator());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Separators separators0 = Separators.createDefaultInstance();
      Separators separators1 = separators0.withRootSeparator((String) null);
      String string0 = separators1.getRootSeparator();
      assertEquals(',', separators0.getObjectEntrySeparator());
      assertNull(string0);
      assertEquals(Separators.Spacing.NONE, separators1.getArrayValueSpacing());
      assertEquals(':', separators0.getObjectFieldValueSeparator());
      assertEquals(Separators.Spacing.BOTH, separators1.getObjectFieldValueSpacing());
      assertEquals(',', separators0.getArrayValueSeparator());
      assertEquals(Separators.Spacing.NONE, separators1.getObjectEntrySpacing());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.BOTH;
      String string0 = separators_Spacing0.spacesAfter();
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.BOTH;
      String string0 = separators_Spacing0.apply('p');
      assertEquals(" p ", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Separators separators0 = new Separators('(', '(', '(');
      Separators.Spacing separators_Spacing0 = separators0.getArrayValueSpacing();
      String string0 = separators_Spacing0.spacesBefore();
      assertEquals("", string0);
      assertEquals(Separators.Spacing.BOTH, separators0.getObjectFieldValueSpacing());
      assertEquals('(', separators0.getObjectEntrySeparator());
      assertEquals(Separators.Spacing.NONE, separators0.getObjectEntrySpacing());
      assertEquals('(', separators0.getArrayValueSeparator());
      assertEquals('(', separators0.getObjectFieldValueSeparator());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Separators separators0 = Separators.createDefaultInstance();
      separators0.getRootSeparator();
      assertEquals(Separators.Spacing.NONE, separators0.getObjectEntrySpacing());
      assertEquals(':', separators0.getObjectFieldValueSeparator());
      assertEquals(',', separators0.getObjectEntrySeparator());
      assertEquals(Separators.Spacing.NONE, separators0.getArrayValueSpacing());
      assertEquals(Separators.Spacing.BOTH, separators0.getObjectFieldValueSpacing());
      assertEquals(',', separators0.getArrayValueSeparator());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      separators0.getObjectFieldValueSpacing();
      assertEquals("", separators0.getRootSeparator());
      assertEquals('J', separators0.getObjectFieldValueSeparator());
      assertEquals('J', separators0.getArrayValueSeparator());
      assertEquals("2U#AD9", separators0.getArrayEmptySeparator());
      assertEquals("", separators0.getObjectEmptySeparator());
      assertEquals('J', separators0.getObjectEntrySeparator());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      separators0.getObjectEntrySpacing();
      assertEquals("", separators0.getObjectEmptySeparator());
      assertEquals("", separators0.getRootSeparator());
      assertEquals('J', separators0.getArrayValueSeparator());
      assertEquals("2U#AD9", separators0.getArrayEmptySeparator());
      assertEquals('J', separators0.getObjectFieldValueSeparator());
      assertEquals('J', separators0.getObjectEntrySeparator());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.AFTER;
      Separators separators0 = new Separators("", ')', separators_Spacing0, ')', separators_Spacing0, "", 'M', separators_Spacing0, "");
      String string0 = separators0.getArrayEmptySeparator();
      assertEquals("", string0);
      assertEquals('M', separators0.getArrayValueSeparator());
      assertEquals(')', separators0.getObjectEntrySeparator());
      assertEquals("", separators0.getRootSeparator());
      assertEquals("", separators0.getObjectEmptySeparator());
      assertEquals(')', separators0.getObjectFieldValueSeparator());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Separators separators0 = Separators.createDefaultInstance();
      char char0 = separators0.getArrayValueSeparator();
      assertEquals(Separators.Spacing.NONE, separators0.getArrayValueSpacing());
      assertEquals(',', separators0.getObjectEntrySeparator());
      assertEquals(Separators.Spacing.BOTH, separators0.getObjectFieldValueSpacing());
      assertEquals(Separators.Spacing.NONE, separators0.getObjectEntrySpacing());
      assertEquals(':', separators0.getObjectFieldValueSeparator());
      assertEquals(',', char0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.AFTER;
      Separators separators0 = new Separators("IS:B2Ea", 'V', separators_Spacing0, '9', separators_Spacing0, '9', separators_Spacing0);
      char char0 = separators0.getObjectEntrySeparator();
      assertEquals('V', separators0.getObjectFieldValueSeparator());
      assertEquals(" ", separators0.getObjectEmptySeparator());
      assertEquals('9', char0);
      assertEquals(" ", separators0.getArrayEmptySeparator());
      assertEquals('9', separators0.getArrayValueSeparator());
      assertEquals("IS:B2Ea", separators0.getRootSeparator());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Separators.Spacing separators_Spacing0 = Separators.Spacing.NONE;
      Separators separators0 = new Separators("", 'J', separators_Spacing0, 'J', separators_Spacing0, "", 'J', separators_Spacing0, "2U#AD9");
      String string0 = separators0.getObjectEmptySeparator();
      assertEquals("", separators0.getRootSeparator());
      assertEquals('J', separators0.getObjectFieldValueSeparator());
      assertEquals('J', separators0.getObjectEntrySeparator());
      assertEquals("", string0);
      assertEquals("2U#AD9", separators0.getArrayEmptySeparator());
      assertEquals('J', separators0.getArrayValueSeparator());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Separators separators0 = Separators.createDefaultInstance();
      char char0 = separators0.getObjectFieldValueSeparator();
      assertEquals(':', char0);
      assertEquals(',', separators0.getArrayValueSeparator());
      assertEquals(Separators.Spacing.NONE, separators0.getObjectEntrySpacing());
      assertEquals(',', separators0.getObjectEntrySeparator());
      assertEquals(Separators.Spacing.NONE, separators0.getArrayValueSpacing());
      assertEquals(Separators.Spacing.BOTH, separators0.getObjectFieldValueSpacing());
  }
}
