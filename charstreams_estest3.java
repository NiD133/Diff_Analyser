package com.google.common.io;

import static org.junit.Assert.assertTrue;

import java.io.IOException;
import java.nio.CharBuffer;
import java.util.List;
import org.junit.Test;

/**
 * Contains an improved version of a test for {@link CharStreams},
 * originally generated by the EvoSuite tool.
 */
public class CharStreams_ESTestTest3 {

    @Test
    public void readLines_fromExhaustedReadable_returnsEmptyList() throws IOException {
        // Arrange: Create a Readable that contains content but is positioned at the end,
        // simulating a stream that has already been fully read.
        CharBuffer readableWithContent = CharBuffer.wrap(new char[]{'a', '\n', 'b'});
        readableWithContent.position(readableWithContent.limit()); // Advance position to the end

        // Act: Attempt to read lines from the exhausted readable source.
        List<String> lines = CharStreams.readLines(readableWithContent);

        // Assert: The result should be an empty list, as there's nothing left to read.
        assertTrue(
                "readLines should return an empty list for a readable that is already at its end.",
                lines.isEmpty());
    }
}