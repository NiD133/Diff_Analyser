package org.jsoup.helper;

import org.jsoup.nodes.Document;
import org.junit.Test;

/**
 * Test suite for {@link W3CDom}.
 * This class contains an improved version of a test originally generated by EvoSuite.
 */
public class W3CDom_ESTestTest27 {

    /**
     * Verifies that the W3CDom.convert method throws a StackOverflowError
     * when processing a jsoup Document with a circular reference. This ensures
     * the conversion process does not hang indefinitely on malformed input.
     */
    @Test(timeout = 4000, expected = StackOverflowError.class)
    public void convertWithCircularReferenceThrowsStackOverflow() {
        // Arrange: Create a jsoup document with a circular reference.
        // This is an invalid structure that should cause infinite recursion during traversal.
        Document docWithCircularReference = Document.createShell("");
        docWithCircularReference.appendChild(docWithCircularReference);

        // Act: Attempt to convert the malformed document.
        // The W3CDom.convert method traverses the node tree. Due to the circular
        // reference, this traversal will never terminate, leading to a StackOverflowError.
        // The @Test(expected=...) annotation asserts this behavior.
        W3CDom.convert(docWithCircularReference);
    }
}