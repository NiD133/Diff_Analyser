package org.apache.commons.io.input;

import org.junit.Test;
import static org.junit.Assert.assertEquals;

import java.io.IOException;
import java.io.Reader;
import java.util.Collections;

/**
 * This test class contains an improved version of a test originally generated by EvoSuite.
 * The focus is on ensuring the test is clear, understandable, and easy to maintain.
 */
public class SequenceReader_ESTestTest2 {

    /**
     * Tests that a SequenceReader initialized with an empty collection of readers
     * is immediately at the end of the stream and returns -1 (EOF).
     *
     * This behavior is expected even when a zero-length read is requested, which
     * for a non-empty reader would typically return 0.
     */
    @Test(timeout = 4000)
    public void readFromEmptySequenceShouldReturnEof() throws IOException {
        // Arrange: Create a SequenceReader with no underlying readers.
        final Iterable<Reader> emptyReaderCollection = Collections.emptyList();
        final SequenceReader sequenceReader = new SequenceReader(emptyReaderCollection);
        final char[] buffer = new char[10];

        // Act: Attempt to read from the empty sequence. The original test case
        // correctly identified the edge case of requesting zero characters.
        final int charCount = sequenceReader.read(buffer, 1, 0);

        // Assert: The reader should return -1 (EOF) because there are no readers to sequence.
        assertEquals("Expected End-Of-File for an empty sequence", -1, charCount);
    }
}