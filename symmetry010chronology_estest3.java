package org.threeten.extra.chrono;

import org.junit.Test;
import java.time.chrono.Era;
import java.time.chrono.IsoEra;
import static org.junit.Assert.assertEquals;

// NOTE: Unused imports from the original file have been removed for clarity.
// The original class structure, likely generated by a tool, is preserved.

public class Symmetry010Chronology_ESTestTest3 extends Symmetry010Chronology_ESTest_scaffolding {

    /**
     * Tests the calculation of the proleptic year for year 0 of the BCE era.
     */
    @Test
    public void prolepticYear_withBceEraAndYearOfEraZero_returnsOne() {
        // Arrange
        Era bceEra = IsoEra.BCE;
        int yearOfEra = 0;

        // According to the standard definition for IsoEra, the proleptic year for
        // the BCE era is calculated as (1 - yearOfEra). For a yearOfEra of 0,
        // the expected proleptic year is 1.
        int expectedProlepticYear = 1;

        // Act
        // The method under test is called on the singleton instance.
        int actualProlepticYear = Symmetry010Chronology.INSTANCE.prolepticYear(bceEra, yearOfEra);

        // Assert
        assertEquals(expectedProlepticYear, actualProlepticYear);
    }
}