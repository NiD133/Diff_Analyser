package org.apache.commons.io.input;

import org.junit.Test;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;

import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;

/**
 * Contains tests for the {@link WindowsLineEndingInputStream} class, focusing on exception handling.
 * This class was originally generated by EvoSuite and has been improved for clarity.
 */
public class WindowsLineEndingInputStream_ESTestTest5 extends WindowsLineEndingInputStream_ESTest_scaffolding {

    /**
     * Tests that an IOException from the underlying stream is propagated correctly by the read() method.
     */
    @Test(timeout = 4000, expected = IOException.class)
    public void readShouldPropagateIOExceptionFromUnderlyingStream() throws IOException {
        // Arrange: Create an underlying input stream that is guaranteed to fail on read.
        // A MockFileInputStream created with a default (invalid) FileDescriptor will
        // throw an IOException when any read operation is attempted.
        FileDescriptor invalidFileDescriptor = new FileDescriptor();
        InputStream failingInputStream = new MockFileInputStream(invalidFileDescriptor);
        WindowsLineEndingInputStream windowsLineEndingInputStream = new WindowsLineEndingInputStream(failingInputStream, false);

        // Act: Attempt to read from the stream, which should trigger the exception.
        windowsLineEndingInputStream.read();

        // Assert: An IOException is expected, as declared in the @Test annotation.
    }
}