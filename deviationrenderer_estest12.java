package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

/**
 * Contains tests for the {@link DeviationRenderer} class.
 *
 * <p>Note: This class is a refactored version of a test that was likely
 * generated by a tool (original name: DeviationRenderer_ESTestTest12).
 * The refactoring aims to improve clarity and maintainability.</p>
 */
public class DeviationRendererTest extends DeviationRenderer_ESTest_scaffolding {

    /**
     * Verifies that isLinePass() correctly identifies pass 1 as the line-drawing pass.
     * This test also confirms that the renderer is initialized with the correct
     * default values for its alpha and 'drawSeriesLineAsPath' properties.
     */
    @Test
    public void isLinePass_shouldReturnTrue_whenPassIsOne() {
        // Arrange: Create a new DeviationRenderer instance. The constructor sets
        // several default properties that are also verified by this test.
        DeviationRenderer renderer = new DeviationRenderer(false, false);

        // Act: Check if pass 1 is designated for line drawing.
        boolean isLinePass = renderer.isLinePass(1);

        // Assert: Confirm the result and the renderer's default state.
        // The DeviationRenderer uses multiple passes to draw. Pass 1 is for the line.
        assertTrue("isLinePass(1) should return true, as this pass is for drawing lines.", isLinePass);

        // The constructor should also set the following default values.
        assertEquals("Default alpha transparency should be 0.5f.", 0.5f, renderer.getAlpha(), 0.0f);
        assertTrue("The 'drawSeriesLineAsPath' property should be forced to true by default.", renderer.getDrawSeriesLineAsPath());
    }
}