package org.apache.commons.cli.help;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.io.IOException;
import org.junit.Test;

// The original test class name and extension suggest it was generated by a tool.
// The test method within has been refactored for clarity.
public class TextHelpAppendable_ESTestTest84 extends TextHelpAppendable_ESTest_scaffolding {

    /**
     * Verifies that appendHeader() throws an IllegalArgumentException when the
     * header level is less than the minimum required value of 1.
     */
    @Test
    public void appendHeaderShouldThrowIllegalArgumentExceptionWhenLevelIsLessThanOne() throws IOException {
        // Arrange: Set up the test conditions.
        final TextHelpAppendable textHelpAppendable = TextHelpAppendable.systemOut();
        final int invalidLevel = 0; // A level must be 1 or greater, so 0 is an invalid edge case.
        final CharSequence headerText = "Test Header";

        // Act & Assert: Execute the method and verify the expected exception.
        try {
            textHelpAppendable.appendHeader(invalidLevel, headerText);
            fail("Expected an IllegalArgumentException to be thrown for a level less than 1.");
        } catch (final IllegalArgumentException e) {
            // Verify that the exception message is clear and correct.
            assertEquals("level must be at least 1", e.getMessage());
        }
    }
}