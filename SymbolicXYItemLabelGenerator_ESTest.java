/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 17:14:07 GMT 2025
 */

package org.jfree.chart.labels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.ChronoLocalDate;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.chart.date.SerialDate;
import org.jfree.chart.labels.SymbolicXYItemLabelGenerator;
import org.jfree.data.time.DynamicTimeSeriesCollection;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.DefaultHighLowDataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XYDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SymbolicXYItemLabelGenerator_ESTest extends SymbolicXYItemLabelGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(6, 6);
      float[] floatArray0 = new float[5];
      dynamicTimeSeriesCollection0.appendData(floatArray0, 2, 0);
      // Undeclared exception!
      try { 
        symbolicXYItemLabelGenerator0.generateToolTip(dynamicTimeSeriesCollection0, 1, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      MockDate mockDate0 = new MockDate(102L);
      SerialDate serialDate0 = SerialDate.createInstance((Date) mockDate0);
      Date[] dateArray0 = new Date[3];
      dateArray0[0] = (Date) mockDate0;
      double[] doubleArray0 = new double[1];
      DefaultHighLowDataset defaultHighLowDataset0 = new DefaultHighLowDataset(serialDate0, dateArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
      String string0 = symbolicXYItemLabelGenerator0.generateToolTip(defaultHighLowDataset0, 0, 0);
      assertEquals("X: 102.0, Y: 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      DefaultTableXYDataset<ChronoLocalDate> defaultTableXYDataset0 = new DefaultTableXYDataset<ChronoLocalDate>();
      // Undeclared exception!
      try { 
        symbolicXYItemLabelGenerator0.generateToolTip(defaultTableXYDataset0, 1970, 1970);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      // Undeclared exception!
      try { 
        symbolicXYItemLabelGenerator0.generateToolTip((XYDataset) null, 44, 44);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      DynamicTimeSeriesCollection dynamicTimeSeriesCollection0 = new DynamicTimeSeriesCollection(1970, 1970);
      // Undeclared exception!
      try { 
        symbolicXYItemLabelGenerator0.generateToolTip(dynamicTimeSeriesCollection0, 1970, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1970 out of bounds for length 1970
         //
         verifyException("org.jfree.data.time.DynamicTimeSeriesCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      Object object0 = new Object();
      boolean boolean0 = symbolicXYItemLabelGenerator0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      boolean boolean0 = symbolicXYItemLabelGenerator0.equals(symbolicXYItemLabelGenerator0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      symbolicXYItemLabelGenerator0.hashCode();
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      TimeSeriesCollection<ChronoLocalDate> timeSeriesCollection0 = new TimeSeriesCollection<ChronoLocalDate>();
      String string0 = symbolicXYItemLabelGenerator0.generateLabel(timeSeriesCollection0, (-1034), (-4019));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SymbolicXYItemLabelGenerator symbolicXYItemLabelGenerator0 = new SymbolicXYItemLabelGenerator();
      Object object0 = symbolicXYItemLabelGenerator0.clone();
      boolean boolean0 = symbolicXYItemLabelGenerator0.equals(object0);
      assertTrue(boolean0);
  }
}
