/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 23 14:16:47 GMT 2025
 */

package org.apache.ibatis.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StringReader;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLWarning;
import java.sql.Statement;
import org.apache.ibatis.jdbc.ScriptRunner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ScriptRunner_ESTest extends ScriptRunner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn((-2539)).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(true, false).when(resultSet0).next();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(statement0).execute(anyString());
      doReturn(false, false, false, false, false).when(statement0).getMoreResults();
      doReturn(resultSet0).when(statement0).getResultSet();
      doReturn(0, 0, 0, 0, 0).when(statement0).getUpdateCount();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(statement0).when(connection0).createStatement();
      doReturn(false, false).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      scriptRunner0.setSendFullScript(true);
      Reader reader0 = Reader.nullReader();
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(reader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error executing: .  Cause: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(true, true, true).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      StringReader stringReader0 = new StringReader("M&.?G0tfcHspB ");
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error executing: M&.?G0tfcHspB 
         // .  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Line missing end-of-line terminator (;) => M&.?G0tfcHspB 
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ScriptRunner scriptRunner0 = new ScriptRunner((Connection) null);
      Reader reader0 = Reader.nullReader();
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(reader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not set AutoCommit to false. Cause: java.lang.NullPointerException
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "--UVo%w/S[2W`*&");
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(1192).when(resultSetMetaData0).getColumnCount();
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(resultSetMetaData0).getColumnLabel(anyInt());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(statement0).execute(anyString());
      doReturn(false, false, true).when(statement0).getMoreResults();
      doReturn(resultSet0, (ResultSet) null).when(statement0).getResultSet();
      doReturn((-1588), 43).when(statement0).getUpdateCount();
      doReturn((SQLWarning) null, (SQLWarning) null, (SQLWarning) null, (SQLWarning) null).when(statement0).getWarnings();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(statement0).when(connection0).createStatement();
      doReturn(false, false).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      scriptRunner0.setStopOnError(false);
      scriptRunner0.setRemoveCRs(true);
      scriptRunner0.setThrowWarning(true);
      scriptRunner0.setSendFullScript(true);
      scriptRunner0.setRemoveCRs(false);
      scriptRunner0.setAutoCommit(false);
      scriptRunner0.setSendFullScript(true);
      Reader reader0 = Reader.nullReader();
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(reader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error executing: .  Cause: java.lang.NullPointerException
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      scriptRunner0.closeConnection();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(true, true, true).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      scriptRunner0.setErrorLogWriter((PrintWriter) null);
      StringReader stringReader0 = new StringReader("//");
      stringReader0.read();
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error executing: /
         // .  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Line missing end-of-line terminator (;) => /
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(245).when(resultSetMetaData0).getColumnCount();
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(resultSetMetaData0).getColumnLabel(anyInt());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn(false).when(resultSet0).next();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(statement0).execute(anyString());
      doReturn(false, true).when(statement0).getMoreResults();
      doReturn(resultSet0, (ResultSet) null).when(statement0).getResultSet();
      doReturn(245).when(statement0).getUpdateCount();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(statement0).when(connection0).createStatement();
      doReturn(true, true).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      scriptRunner0.setSendFullScript(true);
      scriptRunner0.setLogWriter((PrintWriter) null);
      StringReader stringReader0 = new StringReader("UVo%w/2W`*&");
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error executing: UVo%w/2W`*&
         // .  Cause: java.lang.NullPointerException
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(1649).when(resultSetMetaData0).getColumnCount();
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(resultSetMetaData0).getColumnLabel(anyInt());
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(resultSet0).getString(anyInt());
      doReturn(true, false).when(resultSet0).next();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(statement0).execute(anyString());
      doReturn(false, false, false, false, false).when(statement0).getMoreResults();
      doReturn(resultSet0).when(statement0).getResultSet();
      doReturn(0, 0, 0, 0, 0).when(statement0).getUpdateCount();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(statement0).when(connection0).createStatement();
      doReturn(true, true).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      StringReader stringReader0 = new StringReader(";");
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error executing: 
         // .  Cause: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SQLWarning sQLWarning0 = mock(SQLWarning.class, new ViolatedAssumptionAnswer());
      doReturn("5MBV").when(sQLWarning0).toString();
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(statement0).execute(anyString());
      doReturn(sQLWarning0).when(statement0).getWarnings();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(statement0).when(connection0).createStatement();
      doReturn(true, true).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      scriptRunner0.setThrowWarning(true);
      StringReader stringReader0 = new StringReader("5MBV");
      scriptRunner0.setDelimiter("5MBV");
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error executing: 
         // .  Cause: 5MBV
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(statement0).execute(anyString());
      doReturn(false, false).when(statement0).getMoreResults();
      doReturn(705, (-227290201), (-1)).when(statement0).getUpdateCount();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(statement0).when(connection0).createStatement();
      doReturn(true, true, true).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      StringReader stringReader0 = new StringReader("_DO3)u?Yu1;[5^Fn");
      scriptRunner0.runScript(stringReader0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Statement statement0 = mock(Statement.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(statement0).execute(anyString());
      doReturn(false, false, false, false, false).when(statement0).getMoreResults();
      doReturn(0, 0, 0, 0, 0).when(statement0).getUpdateCount();
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(statement0).when(connection0).createStatement();
      doReturn(false, false).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      scriptRunner0.setRemoveCRs(true);
      StringReader stringReader0 = new StringReader("-qevb`g.'TE7FRo;A");
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error executing: -qevb`g.'TE7FRo
         // .  Cause: org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn((Statement) null).when(connection0).createStatement();
      doReturn(true, true).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      scriptRunner0.setFullLineDelimiter(true);
      StringReader stringReader0 = new StringReader(";");
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error executing: 
         // .  Cause: java.lang.NullPointerException
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(true, true, true).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      scriptRunner0.setFullLineDelimiter(true);
      StringReader stringReader0 = new StringReader("\"MqN");
      // Undeclared exception!
      try { 
        scriptRunner0.runScript(stringReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error executing: \"MqN
         // .  Cause: org.evosuite.runtime.mock.java.lang.MockThrowable: Line missing end-of-line terminator (;) => \"MqN
         //
         verifyException("org.apache.ibatis.jdbc.ScriptRunner", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      StringReader stringReader0 = new StringReader("//--rg.apache.ibatis.jdbc.ScriptRunner");
      scriptRunner0.runScript(stringReader0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\n");
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      scriptRunner0.runScript(stringReader0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Connection connection0 = mock(Connection.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(connection0).getAutoCommit();
      ScriptRunner scriptRunner0 = new ScriptRunner(connection0);
      StringReader stringReader0 = new StringReader("--U1!-k'1|Ud7jJjpCMf");
      scriptRunner0.runScript(stringReader0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ScriptRunner scriptRunner0 = new ScriptRunner((Connection) null);
      scriptRunner0.setEscapeProcessing(true);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ScriptRunner scriptRunner0 = new ScriptRunner((Connection) null);
      scriptRunner0.closeConnection();
  }
}
