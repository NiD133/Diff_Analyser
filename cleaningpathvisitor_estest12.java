package org.apache.commons.io.file;

import org.junit.Test;

import static org.junit.Assert.assertNotEquals;

/**
 * Tests for {@link CleaningPathVisitor}.
 * This class contains test cases generated by EvoSuite, which have been refactored for better readability.
 */
public class CleaningPathVisitor_ESTestTest12 extends CleaningPathVisitor_ESTest_scaffolding {

    /**
     * Tests that two CleaningPathVisitor instances created with different configurations
     * are not considered equal.
     */
    @Test
    public void testEqualsReturnsFalseForDifferentConfigurations() {
        // Arrange
        // Create a visitor with a specific counter and a list of paths to skip.
        final Counters.PathCounters customCounters = new CountingPathVisitor.Builder().getPathCounters();
        final String[] pathsToSkip = {"", "", "", "", "", ""};
        final CleaningPathVisitor customVisitor = new CleaningPathVisitor(customCounters, pathsToSkip);

        // Create another visitor using a default factory method, which will have a different internal state.
        final CountingPathVisitor defaultVisitor = CleaningPathVisitor.withBigIntegerCounters();

        // Act & Assert
        // The two visitors are not equivalent, so equals() should return false.
        // We also test the symmetric property of the equals method.
        assertNotEquals(customVisitor, defaultVisitor);
        assertNotEquals(defaultVisitor, customVisitor);
    }
}