package org.apache.commons.collections4.map;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import java.util.Map;
import org.junit.Test;

// Note: The original test class name and inheritance are preserved.
// Unused imports generated by the test tool have been removed for clarity.
public class PredicatedMap_ESTestTest16 extends PredicatedMap_ESTest_scaffolding {

    /**
     * Tests that the {@code predicatedMap} factory method throws a
     * NullPointerException when the map to be decorated is null.
     */
    @Test
    public void predicatedMapFactory_whenMapIsNull_throwsNullPointerException() {
        // The factory method is documented to throw a NullPointerException if the map is null.
        // This test verifies that contract.
        try {
            // Act: Call the factory method with a null map.
            // The predicates can also be null as they are not relevant to this test case.
            PredicatedMap.predicatedMap((Map<Object, Object>) null, null, null);

            // Assert: If no exception is thrown, the test fails.
            fail("Expected a NullPointerException to be thrown for a null map argument.");
        } catch (final NullPointerException e) {
            // Assert: The expected exception was caught.
            // For added robustness, we can check the exception message to confirm
            // that the 'map' parameter was the cause of the exception.
            // This is good practice when multiple arguments could be null.
            assertEquals("map", e.getMessage());
        }
    }
}