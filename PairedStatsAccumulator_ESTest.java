/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 19:17:22 GMT 2025
 */

package com.google.common.math;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.math.LinearTransformation;
import com.google.common.math.PairedStats;
import com.google.common.math.PairedStatsAccumulator;
import com.google.common.math.Stats;
import java.util.ArrayDeque;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PairedStatsAccumulator_ESTest extends PairedStatsAccumulator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(0.0, 0.0);
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.leastSquaresFit();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add((-1672.7733723256124), (-1672.7733723256124));
      pairedStatsAccumulator0.add((-1672.7733723256124), (-1672.7733723256124));
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.pearsonsCorrelationCoefficient();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(0.0, (-2551.7129547187));
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.pearsonsCorrelationCoefficient();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add((-1.0), (-1.0));
      pairedStatsAccumulator0.add((-1313.1264), 1.0);
      pairedStatsAccumulator0.add((-1.0), (-1313.1264));
      double double0 = pairedStatsAccumulator0.sampleCovariance();
      assertEquals((-287820.6991961601), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(0.0, 0.0);
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.sampleCovariance();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      Stats stats0 = new Stats((-8253L), (-8253L), (-8253L), 2242.352921728372, (-8253L));
      PairedStats pairedStats0 = new PairedStats(stats0, stats0, (-8253L));
      pairedStatsAccumulator0.addAll(pairedStats0);
      double double0 = pairedStatsAccumulator0.populationCovariance();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(863464.0975884801, 38.358751);
      pairedStatsAccumulator0.add((-2001.999), (-2001.999));
      PairedStats pairedStats0 = pairedStatsAccumulator0.snapshot();
      pairedStatsAccumulator0.add(1.0, 779.3943325);
      pairedStatsAccumulator0.addAll(pairedStats0);
      assertEquals(2L, pairedStats0.count());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      Stats stats0 = new Stats((-2955L), (-2955L), 0.03, 1.0, 0.03);
      PairedStats pairedStats0 = new PairedStats(stats0, stats0, (-648.72643));
      pairedStatsAccumulator0.addAll(pairedStats0);
      pairedStatsAccumulator0.addAll(pairedStats0);
      assertEquals((-2955L), pairedStats0.count());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      Stats stats0 = new Stats((-2859L), 1736.0, (-205.958587102), (-205.958587102), Double.NaN);
      PairedStats pairedStats0 = new PairedStats(stats0, stats0, 69.34955793);
      pairedStatsAccumulator0.addAll(pairedStats0);
      pairedStatsAccumulator0.add(0.0, (-1.0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(4.9E-324, 1.0);
      Stats stats0 = pairedStatsAccumulator0.yStats();
      assertEquals(1.0, stats0.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add((-1.0), (-1.0));
      Stats stats0 = pairedStatsAccumulator0.yStats();
      assertEquals((-1.0), stats0.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      Stats stats0 = new Stats((-481L), 1660997.3216492385, 1660997.3216492385, 1660997.3216492385, (-481L));
      PairedStats pairedStats0 = new PairedStats(stats0, stats0, (-116.2946));
      pairedStatsAccumulator0.addAll(pairedStats0);
      Stats stats1 = pairedStatsAccumulator0.yStats();
      assertEquals((-7.989397117132837E8), stats1.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(863464.0975884801, 38.358751);
      Stats stats0 = pairedStatsAccumulator0.xStats();
      assertEquals(863464.0975884801, stats0.sum(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      Stats stats0 = new Stats((-1418L), (-1672.7733723256124), 0.03, (-1418L), 0.03);
      PairedStats pairedStats0 = new PairedStats(stats0, stats0, (-1418L));
      pairedStatsAccumulator0.addAll(pairedStats0);
      PairedStats pairedStats1 = pairedStatsAccumulator0.snapshot();
      assertTrue(pairedStats1.equals((Object)pairedStats0));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(1.9393330267238755E12, 1.9393330267238755E12);
      pairedStatsAccumulator0.add(1.9393330267238755E12, 1.9393330267238755E12);
      double double0 = pairedStatsAccumulator0.sampleCovariance();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(863464.0975884801, 38.358751);
      pairedStatsAccumulator0.add((-2001.999), (-2001.999));
      double double0 = pairedStatsAccumulator0.populationCovariance();
      assertEquals(4.4146511460050505E8, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(4.9E-324, 1.0);
      pairedStatsAccumulator0.add(1.0, 4.9E-324);
      double double0 = pairedStatsAccumulator0.populationCovariance();
      assertEquals((-0.25), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(1896976.6974008642, 969.9234729266376);
      pairedStatsAccumulator0.add(2.0994296721195953E179, 0.0);
      double double0 = pairedStatsAccumulator0.pearsonsCorrelationCoefficient();
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add((-1.0), (-1.0));
      pairedStatsAccumulator0.add((-1313.1264), 1.0);
      double double0 = pairedStatsAccumulator0.pearsonsCorrelationCoefficient();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(863464.0975884801, 38.358751);
      long long0 = pairedStatsAccumulator0.count();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      Stats stats0 = new Stats((-1418L), (-1672.7733723256124), 0.03, (-1418L), 0.03);
      PairedStats pairedStats0 = new PairedStats(stats0, stats0, (-1418L));
      pairedStatsAccumulator0.addAll(pairedStats0);
      long long0 = pairedStatsAccumulator0.count();
      assertEquals((-1418L), long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(1896976.2003985401, 1896976.2003985401);
      pairedStatsAccumulator0.add(2.0994296721195953E179, 2.0994296721195953E179);
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.leastSquaresFit();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.addAll((PairedStats) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.math.PairedStatsAccumulator", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(154.3044396684968, 154.3044396684968);
      Stats stats0 = new Stats((-9223372036854775808L), (-9223372036854775808L), (-9223372036854775808L), (-716.5114168133774), 1586.65153);
      ArrayDeque<Integer> arrayDeque0 = new ArrayDeque<Integer>();
      Iterator<Integer> iterator0 = arrayDeque0.descendingIterator();
      Stats stats1 = Stats.of(iterator0);
      PairedStats pairedStats0 = new PairedStats(stats0, stats1, (-716.5114168133774));
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.addAll(pairedStats0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      double[] doubleArray0 = new double[1];
      Stats stats0 = Stats.of(doubleArray0);
      Stats stats1 = pairedStatsAccumulator0.xStats();
      PairedStats pairedStats0 = new PairedStats(stats0, stats1, 5700.61466);
      pairedStatsAccumulator0.addAll(pairedStats0);
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.add(7367227.571539006, 7367227.571539006);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      long long0 = pairedStatsAccumulator0.count();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add((-1672.7733723256124), (-1672.7733723256124));
      pairedStatsAccumulator0.add((-1672.7733723256124), (-1672.7733723256124));
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.leastSquaresFit();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add((-1672.7733723256124), (-1672.7733723256124));
      pairedStatsAccumulator0.add(316907.19778532686, (-1672.7733723256124));
      LinearTransformation linearTransformation0 = pairedStatsAccumulator0.leastSquaresFit();
      assertNotNull(linearTransformation0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add((-1.0), 1.0);
      pairedStatsAccumulator0.add((-1.0), (-1.0));
      LinearTransformation linearTransformation0 = pairedStatsAccumulator0.leastSquaresFit();
      assertNotNull(linearTransformation0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(1018.9124, 1.0);
      pairedStatsAccumulator0.add(1.0, Double.NaN);
      LinearTransformation linearTransformation0 = pairedStatsAccumulator0.leastSquaresFit();
      assertNotNull(linearTransformation0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.leastSquaresFit();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(4.9E-324, (-118.2309144));
      pairedStatsAccumulator0.add((-118.2309144), (-118.2309144));
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.pearsonsCorrelationCoefficient();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(4.9E-324, 2.7650006221898014E246);
      Stats stats0 = new Stats(1L, 2.0, (-387.69334), 1L, 2.7650006221898014E246);
      PairedStats pairedStats0 = new PairedStats(stats0, stats0, 2.0);
      pairedStatsAccumulator0.addAll(pairedStats0);
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.pearsonsCorrelationCoefficient();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      pairedStatsAccumulator0.add(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY);
      double double0 = pairedStatsAccumulator0.pearsonsCorrelationCoefficient();
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.pearsonsCorrelationCoefficient();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(4.9E-324, 1.0);
      pairedStatsAccumulator0.add((-1313.1264), 4.9E-324);
      double double0 = pairedStatsAccumulator0.sampleCovariance();
      assertEquals(656.5632, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.sampleCovariance();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(863464.0975884801, 38.358751);
      double double0 = pairedStatsAccumulator0.populationCovariance();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      // Undeclared exception!
      try { 
        pairedStatsAccumulator0.populationCovariance();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      Stats stats0 = new Stats((-1395L), 1375.1959817, (-1395L), 0.0, 0.03);
      PairedStats pairedStats0 = new PairedStats(stats0, stats0, (-1395L));
      pairedStatsAccumulator0.addAll(pairedStats0);
      Stats stats1 = pairedStatsAccumulator0.xStats();
      assertEquals((-1395L), stats1.count());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      pairedStatsAccumulator0.add(863464.0975884801, 38.358751);
      pairedStatsAccumulator0.add((-2001.999), (-2001.999));
      double double0 = pairedStatsAccumulator0.pearsonsCorrelationCoefficient();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      PairedStats pairedStats0 = pairedStatsAccumulator0.snapshot();
      pairedStatsAccumulator0.addAll(pairedStats0);
      assertEquals(0L, pairedStats0.count());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PairedStatsAccumulator pairedStatsAccumulator0 = new PairedStatsAccumulator();
      Stats stats0 = pairedStatsAccumulator0.yStats();
      assertEquals(0.0, stats0.sum(), 0.01);
  }
}
