/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 23 14:39:15 GMT 2025
 */

package org.apache.ibatis.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.CallableStatement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.YearMonth;
import org.apache.ibatis.session.Configuration;
import org.apache.ibatis.type.ArrayTypeHandler;
import org.apache.ibatis.type.ClobTypeHandler;
import org.apache.ibatis.type.EnumOrdinalTypeHandler;
import org.apache.ibatis.type.IntegerTypeHandler;
import org.apache.ibatis.type.JdbcType;
import org.apache.ibatis.type.MonthTypeHandler;
import org.apache.ibatis.type.ObjectTypeHandler;
import org.apache.ibatis.type.StringTypeHandler;
import org.apache.ibatis.type.YearMonthTypeHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BaseTypeHandler_ESTest extends BaseTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringTypeHandler stringTypeHandler0 = new StringTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      JdbcType jdbcType0 = JdbcType.NUMERIC;
      stringTypeHandler0.setParameter(preparedStatement0, 3693, "PARTIAL", jdbcType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      YearMonthTypeHandler yearMonthTypeHandler0 = new YearMonthTypeHandler();
      CallableStatement callableStatement0 = mock(CallableStatement.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(callableStatement0).getString(anyInt());
      YearMonth yearMonth0 = yearMonthTypeHandler0.getResult(callableStatement0, 0);
      assertNull(yearMonth0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectTypeHandler objectTypeHandler0 = new ObjectTypeHandler();
      CallableStatement callableStatement0 = mock(CallableStatement.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callableStatement0).getObject(anyInt());
      Object object0 = objectTypeHandler0.getNullableResult(callableStatement0, 1779);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<JdbcType> class0 = JdbcType.class;
      EnumOrdinalTypeHandler<JdbcType> enumOrdinalTypeHandler0 = new EnumOrdinalTypeHandler<JdbcType>(class0);
      CallableStatement callableStatement0 = mock(CallableStatement.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(callableStatement0).getInt(anyInt());
      doReturn(false).when(callableStatement0).wasNull();
      JdbcType jdbcType0 = enumOrdinalTypeHandler0.getNullableResult(callableStatement0, 807);
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      enumOrdinalTypeHandler0.setNonNullParameter(preparedStatement0, 0, jdbcType0, jdbcType0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClobTypeHandler clobTypeHandler0 = ClobTypeHandler.INSTANCE;
      JdbcType jdbcType0 = JdbcType.TIME_WITH_TIMEZONE;
      // Undeclared exception!
      try { 
        clobTypeHandler0.setParameter((PreparedStatement) null, (-3018), (String) null, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.type.BaseTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MonthTypeHandler monthTypeHandler0 = new MonthTypeHandler();
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      JdbcType jdbcType0 = JdbcType.DOUBLE;
      // Undeclared exception!
      try { 
        arrayTypeHandler0.setNonNullParameter(preparedStatement0, (-349), monthTypeHandler0, jdbcType0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ArrayType Handler requires SQL array or java array parameter and does not support type class org.apache.ibatis.type.MonthTypeHandler
         //
         verifyException("org.apache.ibatis.type.ArrayTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      Integer integer0 = new Integer(0);
      JdbcType jdbcType0 = JdbcType.DATALINK;
      // Undeclared exception!
      try { 
        integerTypeHandler0.setNonNullParameter((PreparedStatement) null, 0, integer0, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.type.IntegerTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClobTypeHandler clobTypeHandler0 = ClobTypeHandler.INSTANCE;
      // Undeclared exception!
      try { 
        clobTypeHandler0.getResult((CallableStatement) null, 4491);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error attempting to get column #4491 from callable statement.  Cause: java.lang.NullPointerException
         //
         verifyException("org.apache.ibatis.type.BaseTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectTypeHandler objectTypeHandler0 = new ObjectTypeHandler();
      // Undeclared exception!
      try { 
        objectTypeHandler0.getNullableResult((ResultSet) null, "Whv13V)Nc");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.type.ObjectTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = new IntegerTypeHandler();
      // Undeclared exception!
      try { 
        integerTypeHandler0.getNullableResult((ResultSet) null, 21);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.type.IntegerTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      // Undeclared exception!
      try { 
        arrayTypeHandler0.getNullableResult((CallableStatement) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.type.ArrayTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<JdbcType> class0 = JdbcType.class;
      EnumOrdinalTypeHandler<JdbcType> enumOrdinalTypeHandler0 = new EnumOrdinalTypeHandler<JdbcType>(class0);
      CallableStatement callableStatement0 = mock(CallableStatement.class, new ViolatedAssumptionAnswer());
      doReturn((-983)).when(callableStatement0).getInt(anyInt());
      // Undeclared exception!
      try { 
        enumOrdinalTypeHandler0.getNullableResult(callableStatement0, (-983));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot convert -983 to JdbcType by ordinal value.
         //
         verifyException("org.apache.ibatis.type.EnumOrdinalTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClobTypeHandler clobTypeHandler0 = new ClobTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        clobTypeHandler0.setParameter(preparedStatement0, (-3), (String) null, (JdbcType) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JDBC requires that the JdbcType must be specified for all nullable parameters.
         //
         verifyException("org.apache.ibatis.type.BaseTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClobTypeHandler clobTypeHandler0 = new ClobTypeHandler();
      JdbcType jdbcType0 = JdbcType.DATALINK;
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      clobTypeHandler0.setParameter(preparedStatement0, (-1), (String) null, jdbcType0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClobTypeHandler clobTypeHandler0 = ClobTypeHandler.INSTANCE;
      JdbcType jdbcType0 = JdbcType.STRUCT;
      // Undeclared exception!
      try { 
        clobTypeHandler0.setParameter((PreparedStatement) null, (-420), "tA pe~s<#.", jdbcType0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error setting non null for parameter #-420 with JdbcType STRUCT . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.lang.NullPointerException
         //
         verifyException("org.apache.ibatis.type.BaseTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringTypeHandler stringTypeHandler0 = new StringTypeHandler();
      CallableStatement callableStatement0 = mock(CallableStatement.class, new ViolatedAssumptionAnswer());
      doReturn(" Q9@^x<<xBG*k").when(callableStatement0).getString(anyInt());
      String string0 = stringTypeHandler0.getResult(callableStatement0, 0);
      assertEquals(" Q9@^x<<xBG*k", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectTypeHandler objectTypeHandler0 = ObjectTypeHandler.INSTANCE;
      // Undeclared exception!
      try { 
        objectTypeHandler0.getResult((ResultSet) null, "(?y^aVym-^?qnK=B\"");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error attempting to get column '(?y^aVym-^?qnK=B\"' from result set.  Cause: java.lang.NullPointerException
         //
         verifyException("org.apache.ibatis.type.BaseTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClobTypeHandler clobTypeHandler0 = new ClobTypeHandler();
      clobTypeHandler0.setConfiguration((Configuration) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntegerTypeHandler integerTypeHandler0 = IntegerTypeHandler.INSTANCE;
      // Undeclared exception!
      try { 
        integerTypeHandler0.getResult((ResultSet) null, 2558);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Error attempting to get column #2558 from result set.  Cause: java.lang.NullPointerException
         //
         verifyException("org.apache.ibatis.type.BaseTypeHandler", e);
      }
  }
}
