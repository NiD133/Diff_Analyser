package org.apache.commons.lang3.concurrent;

import org.junit.Test;
import java.util.NoSuchElementException;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

/**
 * This class contains a refactored version of a test for {@link MultiBackgroundInitializer}.
 * The original test was generated by the EvoSuite tool.
 */
public class MultiBackgroundInitializer_ESTestTest18 extends MultiBackgroundInitializer_ESTest_scaffolding {

    /**
     * Verifies that calling getResultObject() on the results of an empty
     * MultiBackgroundInitializer with an unknown name throws a NoSuchElementException.
     */
    @Test(timeout = 4000)
    public void getResultObjectForUnknownInitializerThrowsException() throws Exception {
        // Arrange: Create an initializer with no child tasks and get the results.
        final MultiBackgroundInitializer multiInitializer = new MultiBackgroundInitializer();
        final MultiBackgroundInitializer.MultiBackgroundInitializerResults results = multiInitializer.initialize();
        final String unknownInitializerName = "non.existent.initializer.name";

        // Act & Assert: Expect a NoSuchElementException when requesting a result for a non-existent name.
        try {
            results.getResultObject(unknownInitializerName);
            fail("Expected NoSuchElementException was not thrown for an unknown initializer.");
        } catch (final NoSuchElementException e) {
            // Verify the exception message is correct and informative.
            final String expectedMessage = "No child initializer with name " + unknownInitializerName;
            assertEquals(expectedMessage, e.getMessage());
        }
    }
}