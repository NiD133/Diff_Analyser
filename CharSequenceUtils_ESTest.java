/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 18 20:17:01 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import org.apache.commons.lang3.CharSequenceUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharSequenceUtils_ESTest extends CharSequenceUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuilder0, false, 0, stringBuilder0, 0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuffer0, false, 0, stringBuffer0, 6, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = CharSequenceUtils.regionMatches("', is neither of type Map.Entry nor an Array", false, 117, "", (-1469), (-1231));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, 1114111, 1114111);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, 116, 13);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, "6KY>-,V");
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder1, 1403, 1403);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append((-1.0F));
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, (-778), 4);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      stringBuilder0.insert(0, "6KY>-,V");
      char[] charArray0 = new char[20];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, stringBuilder0, 2750);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      StringBuilder stringBuilder1 = stringBuilder0.insert(0, 0.0);
      int int0 = CharSequenceUtils.lastIndexOf("@3AXK#eny?[;j'", stringBuilder1, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      StringBuilder stringBuilder1 = stringBuilder0.append(1937);
      stringBuilder0.append(true);
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) stringBuilder1);
      StringBuilder stringBuilder2 = stringBuilder1.insert(0, (CharSequence) charBuffer0);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder1, stringBuilder2, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(4);
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, stringBuffer0, 4);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      StringBuilder stringBuilder1 = new StringBuilder("");
      stringBuilder0.appendCodePoint(0);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, stringBuilder1, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = CharSequenceUtils.lastIndexOf("', is neither of type Map.Entry nor an Array", "/VQAuqQP6w", (-731));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.appendCodePoint(65565);
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, 65536, (-853));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(";i]b}Z<[yv");
      stringBuilder0.appendCodePoint(1114111);
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, 65536, (-897));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, 116, (-2503));
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, (-1952), (-1952));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', ss }either of tpp Map.Entry nor an Array");
      stringBuilder0.insert(32, '?');
      stringBuilder0.deleteCharAt(5);
      int int0 = CharSequenceUtils.lastIndexOf("', ss }either of tpp Map.Entry nor an Array", stringBuilder0, 5);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder(0);
      CharSequence charSequence0 = CharSequenceUtils.subSequence(stringBuilder0, 0);
      assertEquals("", charSequence0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      stringBuilder0.insert(0, (CharSequence) stringBuilder0);
      StringBuilder stringBuilder1 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, stringBuilder1, 98);
      assertEquals(44, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = CharSequenceUtils.lastIndexOf("', is neither of type Map.Entry nor an Array", 102, 102);
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      StringBuffer stringBuffer0 = new StringBuffer(0);
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, stringBuffer0, Integer.MAX_VALUE);
      assertEquals(44, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      stringBuilder0.appendCodePoint(1114111);
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, 1114111, (-897));
      assertEquals(44, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      // Undeclared exception!
      CharSequenceUtils.toCharArray(charBuffer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      // Undeclared exception!
      try { 
        CharSequenceUtils.subSequence(stringBuffer0, 407);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -407
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(84);
      // Undeclared exception!
      try { 
        CharSequenceUtils.subSequence(charBuffer0, (-233));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.regionMatches((CharSequence) null, false, 12, (CharSequence) null, 12, 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.indexOf((CharSequence) null, 113, 113);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = CharSequenceUtils.toCharArray("', is neither of type Map.Entry nor an Array");
      assertEquals(44, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      char[] charArray0 = CharSequenceUtils.toCharArray(stringBuilder0);
      assertArrayEquals(new char[] {}, charArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      char[] charArray0 = CharSequenceUtils.toCharArray(stringBuilder0);
      assertEquals(44, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharSequence charSequence0 = CharSequenceUtils.subSequence((CharSequence) null, 1114110);
      assertNull(charSequence0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "', is neither of type Map.Entry nor an Array");
      CharSequence charSequence0 = CharSequenceUtils.subSequence(stringBuilder0, 0);
      assertNotNull(charSequence0);
      assertEquals("', is neither of type Map.Entry nor an Array", charSequence0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuilder0, true, 0, stringBuilder0, 7, 16);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is eithr of typ Map.Entrynor an Array");
      boolean boolean0 = CharSequenceUtils.regionMatches("', is eithr of typ Map.Entrynor an Array", false, 1, stringBuilder0, 1, 7);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is either of typ Map.Entry nor anArray");
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuilder0, false, 1, "', is either of typ Map.Entry nor anArray", 0, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuilder0, false, 84, stringBuilder0, 48, 48);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuilder0, true, 1096, stringBuilder0, 1096, (-1627));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      boolean boolean0 = CharSequenceUtils.regionMatches(stringBuilder0, true, 16, stringBuilder0, (-2908), 16);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      boolean boolean0 = CharSequenceUtils.regionMatches("', is neither of type Map.Entry nor an Array", false, (-3004), stringBuilder0, 65, (-93));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(65536);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder1, 65536, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', ss }either of typp Map.Entry nor an Array");
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, 1114110, 25);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(65571);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder1, 65541, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, 1114122, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, (-76), (-76));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      int int0 = CharSequenceUtils.lastIndexOf("', is either of typ Map.Entry nor an Array", 1203, 36);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        CharSequenceUtils.lastIndexOf((CharSequence) null, 1041, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.lang3.CharSequenceUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("er of tpp mer of tpp map.entry nor an array");
      stringBuilder0.delete(22, 789);
      int int0 = CharSequenceUtils.lastIndexOf("er of tpp mer of tpp map.entry nor an array", stringBuilder0, 22);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', ss }either of tpp Map.Entry nor an Array");
      stringBuilder0.deleteCharAt(1);
      int int0 = CharSequenceUtils.lastIndexOf("', ss }either of tpp Map.Entry nor an Array", stringBuilder0, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      stringBuffer0.append('2');
      int int0 = CharSequenceUtils.lastIndexOf(stringBuffer0, stringBuffer0, '2');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3);
      int int0 = CharSequenceUtils.lastIndexOf(charBuffer0, charBuffer0, 3);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      CharBuffer charBuffer0 = CharBuffer.allocate(30);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, charBuffer0, 30);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      int int0 = CharSequenceUtils.lastIndexOf(stringBuffer0, stringBuffer0, (-459));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      // Undeclared exception!
      CharSequenceUtils.lastIndexOf(charBuffer0, "', is neither of type Map.Entry nor an ArrgN", 65536);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(40);
      int int0 = CharSequenceUtils.lastIndexOf(stringBuffer0, "'", 40);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      int int0 = CharSequenceUtils.lastIndexOf(stringBuilder0, "', is neither of type Map.Entry nor an Array", 1041);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      int int0 = CharSequenceUtils.lastIndexOf((CharSequence) null, stringBuilder0, 1245);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = CharSequenceUtils.lastIndexOf((CharSequence) null, (CharSequence) null, (-1525));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(65536);
      stringBuilder0.insert(1, 1973L);
      int int0 = CharSequenceUtils.indexOf(stringBuilder1, 65536, (-897));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(65571);
      int int0 = CharSequenceUtils.indexOf(stringBuilder1, 65571, (-2194));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, Integer.MAX_VALUE, Integer.MAX_VALUE);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(0);
      int int0 = CharSequenceUtils.indexOf(stringBuilder1, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      stringBuilder0.insert(0, (CharSequence) charBuffer0);
      // Undeclared exception!
      CharSequenceUtils.indexOf(stringBuilder0, (-1790), 3507);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, (-1790), 3507);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int int0 = CharSequenceUtils.indexOf("', is neither of type Map.Entry nor an Array", 84, 1041);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = CharSequenceUtils.indexOf(stringBuilder0, 65571, (-2194));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      StringBuilder stringBuilder0 = new StringBuilder(stringBuffer0);
      int int0 = CharSequenceUtils.indexOf(stringBuffer0, stringBuilder0, (-1231));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("', is neither of type Map.Entry nor an Array");
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = CharSequenceUtils.indexOf(charBuffer0, stringBuilder0, (-1231));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("");
      int int0 = CharSequenceUtils.indexOf("", stringBuilder0, 8);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(0);
      int int0 = CharSequenceUtils.indexOf(stringBuffer0, (CharSequence) null, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      int int0 = CharSequenceUtils.indexOf((CharSequence) null, (CharSequence) null, 120);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder("er of tpp mer of tpp map.entry nor an array");
      StringBuilder stringBuilder1 = stringBuilder0.deleteCharAt(22);
      int int0 = CharSequenceUtils.lastIndexOf("er of tpp mer of tpp map.entry nor an array", stringBuilder1, 22);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      CharSequenceUtils charSequenceUtils0 = new CharSequenceUtils();
  }
}
