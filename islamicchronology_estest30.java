package org.joda.time.chrono;

import org.joda.time.Chronology;
import org.junit.Test;

/**
 * This test class contains tests for the IslamicChronology, focusing on edge cases.
 * The original test was auto-generated by EvoSuite.
 */
public class IslamicChronology_ESTestTest30 extends IslamicChronology_ESTest_scaffolding {

    /**
     * Verifies that methods relying on the leap year pattern fail with a
     * NullPointerException if the IslamicChronology is constructed with a null
     * LeapYearPatternType.
     *
     * This is an unsupported way to instantiate the class, but this test ensures
     * it fails fast and predictably.
     */
    @Test(expected = NullPointerException.class)
    public void getMonthOfYear_whenConstructedWithNullLeapYearPattern_throwsNullPointerException() {
        // Arrange: Create an IslamicChronology instance, intentionally passing null
        // for the LeapYearPatternType. The base chronology is a required parameter
        // for this constructor.
        Chronology baseChronology = ISOChronology.getInstanceUTC();
        IslamicChronology.LeapYearPatternType nullLeapYearPattern = null;
        IslamicChronology chronology =
                new IslamicChronology(baseChronology, null, nullLeapYearPattern);

        // Act: Call a method that internally depends on the leap year pattern.
        // The specific instant (0L) and year (1) are arbitrary; any valid
        // values would trigger the same exception due to the null pattern.
        chronology.getMonthOfYear(0L, 1);

        // Assert: A NullPointerException is expected, as declared in the @Test annotation.
        // The test will automatically fail if no exception, or an incorrect one, is thrown.
    }
}