/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 19 15:32:48 GMT 2025
 */

package com.google.gson;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.Strictness;
import com.google.gson.ToNumberPolicy;
import com.google.gson.stream.JsonReader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ToNumberPolicy_ESTest extends ToNumberPolicy_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringReader stringReader0 = new StringReader("\"*.\"{/");
      JsonReader jsonReader0 = new JsonReader(stringReader0);
      ToNumberPolicy toNumberPolicy0 = ToNumberPolicy.LONG_OR_DOUBLE;
      // Undeclared exception!
      try { 
        toNumberPolicy0.readNumber(jsonReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot parse *.; at path $
         //
         verifyException("com.google.gson.ToNumberPolicy$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p(ppj%8[r\u0000>Md]");
      JsonReader jsonReader0 = new JsonReader(stringReader0);
      Strictness strictness0 = Strictness.LENIENT;
      jsonReader0.setStrictness(strictness0);
      ToNumberPolicy toNumberPolicy0 = ToNumberPolicy.BIG_DECIMAL;
      // Undeclared exception!
      try { 
        toNumberPolicy0.readNumber(jsonReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot parse p(ppj%8; at path $
         //
         verifyException("com.google.gson.ToNumberPolicy$4", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".a&;-m");
      JsonReader jsonReader0 = new JsonReader(stringReader0);
      Strictness strictness0 = Strictness.LENIENT;
      jsonReader0.setStrictness(strictness0);
      ToNumberPolicy toNumberPolicy0 = ToNumberPolicy.LONG_OR_DOUBLE;
      // Undeclared exception!
      try { 
        toNumberPolicy0.readNumber(jsonReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot parse .a&; at path $
         //
         verifyException("com.google.gson.ToNumberPolicy$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p(ppj%8[r\u0000>Md]");
      JsonReader jsonReader0 = new JsonReader(stringReader0);
      Strictness strictness0 = Strictness.LENIENT;
      jsonReader0.setStrictness(strictness0);
      ToNumberPolicy toNumberPolicy0 = ToNumberPolicy.LONG_OR_DOUBLE;
      // Undeclared exception!
      try { 
        toNumberPolicy0.readNumber(jsonReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Cannot parse p(ppj%8; at path $
         //
         verifyException("com.google.gson.ToNumberPolicy$3", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ToNumberPolicy toNumberPolicy0 = ToNumberPolicy.LAZILY_PARSED_NUMBER;
      // Undeclared exception!
      try { 
        toNumberPolicy0.readNumber((JsonReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.ToNumberPolicy$2", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ToNumberPolicy toNumberPolicy0 = ToNumberPolicy.DOUBLE;
      // Undeclared exception!
      try { 
        toNumberPolicy0.readNumber((JsonReader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gson.ToNumberPolicy$1", e);
      }
  }
}
