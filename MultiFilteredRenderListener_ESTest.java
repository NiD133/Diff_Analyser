/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 17 18:36:32 GMT 2025
 */

package com.itextpdf.text.pdf.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.itextpdf.awt.geom.Rectangle2D;
import com.itextpdf.text.pdf.parser.ImageRenderInfo;
import com.itextpdf.text.pdf.parser.LocationTextExtractionStrategy;
import com.itextpdf.text.pdf.parser.MultiFilteredRenderListener;
import com.itextpdf.text.pdf.parser.RegionTextRenderFilter;
import com.itextpdf.text.pdf.parser.RenderFilter;
import com.itextpdf.text.pdf.parser.TextRenderInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MultiFilteredRenderListener_ESTest extends MultiFilteredRenderListener_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultiFilteredRenderListener multiFilteredRenderListener0 = new MultiFilteredRenderListener();
      LocationTextExtractionStrategy.TextChunkLocationStrategy locationTextExtractionStrategy_TextChunkLocationStrategy0 = mock(LocationTextExtractionStrategy.TextChunkLocationStrategy.class, new ViolatedAssumptionAnswer());
      LocationTextExtractionStrategy locationTextExtractionStrategy0 = new LocationTextExtractionStrategy(locationTextExtractionStrategy_TextChunkLocationStrategy0);
      RenderFilter[] renderFilterArray0 = new RenderFilter[7];
      multiFilteredRenderListener0.attachRenderListener(locationTextExtractionStrategy0, renderFilterArray0);
      multiFilteredRenderListener0.endTextBlock();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MultiFilteredRenderListener multiFilteredRenderListener0 = new MultiFilteredRenderListener();
      RenderFilter[] renderFilterArray0 = new RenderFilter[0];
      multiFilteredRenderListener0.attachRenderListener((LocationTextExtractionStrategy) null, renderFilterArray0);
      // Undeclared exception!
      try { 
        multiFilteredRenderListener0.beginTextBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.parser.MultiFilteredRenderListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultiFilteredRenderListener multiFilteredRenderListener0 = new MultiFilteredRenderListener();
      LocationTextExtractionStrategy.TextChunkLocationStrategy locationTextExtractionStrategy_TextChunkLocationStrategy0 = mock(LocationTextExtractionStrategy.TextChunkLocationStrategy.class, new ViolatedAssumptionAnswer());
      LocationTextExtractionStrategy locationTextExtractionStrategy0 = new LocationTextExtractionStrategy(locationTextExtractionStrategy_TextChunkLocationStrategy0);
      RenderFilter[] renderFilterArray0 = new RenderFilter[3];
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double((-2030.332760438), (-2030.332760438), (-2030.332760438), (-846.7357066836466));
      RegionTextRenderFilter regionTextRenderFilter0 = new RegionTextRenderFilter(rectangle2D_Double0);
      renderFilterArray0[0] = (RenderFilter) regionTextRenderFilter0;
      renderFilterArray0[1] = (RenderFilter) regionTextRenderFilter0;
      renderFilterArray0[2] = (RenderFilter) regionTextRenderFilter0;
      multiFilteredRenderListener0.attachRenderListener(locationTextExtractionStrategy0, renderFilterArray0);
      multiFilteredRenderListener0.renderImage((ImageRenderInfo) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MultiFilteredRenderListener multiFilteredRenderListener0 = new MultiFilteredRenderListener();
      LocationTextExtractionStrategy.TextChunkLocationStrategy locationTextExtractionStrategy_TextChunkLocationStrategy0 = mock(LocationTextExtractionStrategy.TextChunkLocationStrategy.class, new ViolatedAssumptionAnswer());
      LocationTextExtractionStrategy locationTextExtractionStrategy0 = new LocationTextExtractionStrategy(locationTextExtractionStrategy_TextChunkLocationStrategy0);
      RenderFilter[] renderFilterArray0 = new RenderFilter[3];
      multiFilteredRenderListener0.attachRenderListener(locationTextExtractionStrategy0, renderFilterArray0);
      // Undeclared exception!
      try { 
        multiFilteredRenderListener0.renderImage((ImageRenderInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.parser.MultiFilteredRenderListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MultiFilteredRenderListener multiFilteredRenderListener0 = new MultiFilteredRenderListener();
      multiFilteredRenderListener0.attachRenderListener((LocationTextExtractionStrategy) null, (RenderFilter[]) null);
      // Undeclared exception!
      try { 
        multiFilteredRenderListener0.endTextBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.parser.MultiFilteredRenderListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MultiFilteredRenderListener multiFilteredRenderListener0 = new MultiFilteredRenderListener();
      LocationTextExtractionStrategy locationTextExtractionStrategy0 = new LocationTextExtractionStrategy();
      RenderFilter[] renderFilterArray0 = new RenderFilter[0];
      multiFilteredRenderListener0.attachRenderListener(locationTextExtractionStrategy0, renderFilterArray0);
      // Undeclared exception!
      try { 
        multiFilteredRenderListener0.renderText((TextRenderInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.parser.LocationTextExtractionStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MultiFilteredRenderListener multiFilteredRenderListener0 = new MultiFilteredRenderListener();
      RenderFilter[] renderFilterArray0 = new RenderFilter[1];
      multiFilteredRenderListener0.attachRenderListener((LocationTextExtractionStrategy) null, renderFilterArray0);
      // Undeclared exception!
      try { 
        multiFilteredRenderListener0.renderText((TextRenderInfo) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.parser.MultiFilteredRenderListener", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MultiFilteredRenderListener multiFilteredRenderListener0 = new MultiFilteredRenderListener();
      multiFilteredRenderListener0.renderText((TextRenderInfo) null);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MultiFilteredRenderListener multiFilteredRenderListener0 = new MultiFilteredRenderListener();
      multiFilteredRenderListener0.beginTextBlock();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      MultiFilteredRenderListener multiFilteredRenderListener0 = new MultiFilteredRenderListener();
      LocationTextExtractionStrategy.TextChunkLocationStrategy locationTextExtractionStrategy_TextChunkLocationStrategy0 = mock(LocationTextExtractionStrategy.TextChunkLocationStrategy.class, new ViolatedAssumptionAnswer());
      LocationTextExtractionStrategy locationTextExtractionStrategy0 = new LocationTextExtractionStrategy(locationTextExtractionStrategy_TextChunkLocationStrategy0);
      RenderFilter[] renderFilterArray0 = new RenderFilter[3];
      multiFilteredRenderListener0.attachRenderListener(locationTextExtractionStrategy0, renderFilterArray0);
      multiFilteredRenderListener0.beginTextBlock();
  }
}
