package org.apache.commons.io.file;

import static org.evosuite.shaded.org.mockito.Mockito.mock;

import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.attribute.BasicFileAttributes;
import org.apache.commons.io.filefilter.HiddenFileFilter;
import org.apache.commons.io.filefilter.IOFileFilter;
import org.apache.commons.io.filefilter.PathEqualsFileFilter;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.Test;

/**
 * This test class contains a test case for {@link CountingPathVisitor} that was
 * likely generated by a tool and captures an edge-case behavior.
 */
public class CountingPathVisitor_ESTestTest12 extends CountingPathVisitor_ESTest_scaffolding {

    /**
     * Tests that preVisitDirectory throws an ArrayIndexOutOfBoundsException when used
     * with a specific combination of filters. This test appears to capture an
     * unexpected runtime exception rather than a designed behavior.
     */
    @Test(timeout = 4000, expected = ArrayIndexOutOfBoundsException.class)
    public void preVisitDirectoryWithSpecificFiltersThrowsArrayIndexOutOfBounds() throws IOException {
        // --- Arrange ---
        // 1. Define a path representing the current directory.
        final Path currentDirectoryPath = new MockFile("").toPath();

        // 2. Create a specific combination of file and directory filters.
        // This particular setup is required to trigger the exception.
        final IOFileFilter pathEqualsFilter = new PathEqualsFileFilter(currentDirectoryPath);
        final IOFileFilter visibleFilter = HiddenFileFilter.VISIBLE;
        final IOFileFilter combinedFileFilter = pathEqualsFilter.or(visibleFilter);

        // 3. Instantiate the visitor using a subclass, AccumulatorPathVisitor,
        // with the configured filters.
        final AccumulatorPathVisitor visitor = AccumulatorPathVisitor.withLongCounters(combinedFileFilter, visibleFilter);
        final BasicFileAttributes mockAttributes = mock(BasicFileAttributes.class, new ViolatedAssumptionAnswer());

        // --- Act ---
        // The call to preVisitDirectory is expected to throw the exception.
        visitor.preVisitDirectory(currentDirectoryPath, mockAttributes);

        // --- Assert ---
        // The test will pass only if an ArrayIndexOutOfBoundsException is thrown,
        // as specified by the 'expected' parameter in the @Test annotation.
    }
}