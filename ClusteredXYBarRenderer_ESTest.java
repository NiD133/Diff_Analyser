/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 17:14:30 GMT 2025
 */

package org.jfree.chart.renderer.xy;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import java.text.DateFormatSymbols;
import java.util.Date;
import java.util.Locale;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.plot.CategoryCrosshairState;
import org.jfree.chart.plot.CombinedRangeXYPlot;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.renderer.xy.ClusteredXYBarRenderer;
import org.jfree.chart.renderer.xy.XYItemRendererState;
import org.jfree.chart.util.DirectionalGradientPaintTransformer;
import org.jfree.data.Range;
import org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset;
import org.jfree.data.statistics.SimpleHistogramBin;
import org.jfree.data.statistics.SimpleHistogramDataset;
import org.jfree.data.time.TimeSeriesDataItem;
import org.jfree.data.xy.CategoryTableXYDataset;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.DefaultWindDataset;
import org.jfree.data.xy.DefaultXYZDataset;
import org.jfree.data.xy.IntervalXYDataset;
import org.jfree.data.xy.OHLCDataItem;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ClusteredXYBarRenderer_ESTest extends ClusteredXYBarRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      SimpleHistogramDataset<Integer> simpleHistogramDataset0 = new SimpleHistogramDataset<Integer>(integer0);
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(Double.NEGATIVE_INFINITY, (double) clusteredXYBarRenderer0.ZERO);
      simpleHistogramDataset0.addBin(simpleHistogramBin0);
      Range range0 = clusteredXYBarRenderer0.findDomainBoundsWithOffset(simpleHistogramDataset0);
      assertEquals(Double.NEGATIVE_INFINITY, range0.getCentralValue(), 0.01);
      assertNotNull(range0);
      assertEquals(Double.NaN, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      SimpleHistogramDataset<Integer> simpleHistogramDataset0 = new SimpleHistogramDataset<Integer>(integer0);
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(907.6900148845, 1031.047, true, false);
      simpleHistogramDataset0.addBin(simpleHistogramBin0);
      SimpleHistogramBin simpleHistogramBin1 = new SimpleHistogramBin((-370.1426432302365), (double) clusteredXYBarRenderer0.ZERO);
      simpleHistogramDataset0.addBin(simpleHistogramBin1);
      Range range0 = clusteredXYBarRenderer0.findDomainBoundsWithOffset(simpleHistogramDataset0);
      assertEquals(1524.5824722876048, range0.getLength(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Boolean boolean0 = Boolean.valueOf("");
      XYSeries<Boolean> xYSeries0 = new XYSeries<Boolean>(boolean0);
      xYSeries0.add((double) clusteredXYBarRenderer0.ZERO, 30.0);
      XYSeriesCollection<Boolean> xYSeriesCollection0 = new XYSeriesCollection<Boolean>(xYSeries0);
      Range range0 = clusteredXYBarRenderer0.findDomainBoundsWithOffset(xYSeriesCollection0);
      assertNotNull(range0);
      assertEquals((-0.5), range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      SimpleHistogramDataset<Integer> simpleHistogramDataset0 = new SimpleHistogramDataset<Integer>(integer0);
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1, 3);
      simpleHistogramDataset0.addBin(simpleHistogramBin0);
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Range range0 = clusteredXYBarRenderer0.findDomainBoundsWithOffset(simpleHistogramDataset0);
      assertEquals(1.0, range0.getCentralValue(), 0.01);
      assertEquals(0.0, range0.getLowerBound(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      SimpleHistogramDataset<Integer> simpleHistogramDataset0 = new SimpleHistogramDataset<Integer>(integer0);
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin((double) clusteredXYBarRenderer0.ZERO, 0.2);
      simpleHistogramDataset0.addBin(simpleHistogramBin0);
      Range range0 = clusteredXYBarRenderer0.findDomainBoundsWithOffset(simpleHistogramDataset0);
      assertEquals(0.0, range0.getCentralValue(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(1249.0, 2514.4173606);
      SimpleHistogramDataset<Integer> simpleHistogramDataset0 = new SimpleHistogramDataset<Integer>(integer0);
      simpleHistogramDataset0.addBin(simpleHistogramBin0);
      Range range0 = clusteredXYBarRenderer0.findDomainBoundsWithOffset(simpleHistogramDataset0);
      assertEquals(1249.0, range0.getCentralValue(), 0.01);
      assertNotNull(range0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      SimpleHistogramDataset<Integer> simpleHistogramDataset0 = new SimpleHistogramDataset<Integer>(integer0);
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin((-901.5175700727494), (-465.48054286));
      simpleHistogramDataset0.addBin(simpleHistogramBin0);
      Range range0 = clusteredXYBarRenderer0.findDomainBounds(simpleHistogramDataset0);
      assertEquals((-683.4990564663747), range0.getCentralValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = JLayeredPane.PALETTE_LAYER;
      SimpleHistogramDataset<Integer> simpleHistogramDataset0 = new SimpleHistogramDataset<Integer>(integer0);
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin(0.0, 1.0F, true, true);
      simpleHistogramDataset0.addBin(simpleHistogramBin0);
      Range range0 = clusteredXYBarRenderer0.findDomainBounds(simpleHistogramDataset0);
      assertFalse(range0.isNaNRange());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[5];
      Locale locale0 = new Locale("}y&~*+ |^", " q~^A)mz{I%kS}vYl\"h");
      DateFormatSymbols dateFormatSymbols0 = DateFormatSymbols.getInstance(locale0);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("", dateFormatSymbols0);
      Date date0 = mockSimpleDateFormat0.get2DigitYearStart();
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(date0, 1641.62203, 1376.0317, 1376.0317, 1641.62203, 597.5355594430192);
      oHLCDataItemArray0[0] = oHLCDataItem0;
      oHLCDataItemArray0[1] = oHLCDataItemArray0[0];
      oHLCDataItemArray0[2] = oHLCDataItemArray0[1];
      oHLCDataItemArray0[3] = oHLCDataItemArray0[1];
      oHLCDataItemArray0[4] = oHLCDataItemArray0[0];
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(clusteredXYBarRenderer0.ZERO, oHLCDataItemArray0);
      Range range0 = clusteredXYBarRenderer0.findDomainBounds(defaultOHLCDataset0);
      assertEquals(1.39240928132E12, range0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      SimpleHistogramDataset<Integer> simpleHistogramDataset0 = new SimpleHistogramDataset<Integer>(integer0);
      SimpleHistogramBin simpleHistogramBin0 = new SimpleHistogramBin((-673.5246), (double) clusteredXYBarRenderer0.ZERO);
      simpleHistogramDataset0.addBin(simpleHistogramBin0);
      Range range0 = clusteredXYBarRenderer0.findDomainBounds(simpleHistogramDataset0);
      assertNotNull(range0);
      assertEquals(0.0, range0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      SimpleHistogramDataset<Integer> simpleHistogramDataset0 = new SimpleHistogramDataset<Integer>(integer0);
      simpleHistogramDataset0.addBin((SimpleHistogramBin) null);
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.findDomainBoundsWithOffset(simpleHistogramDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.statistics.SimpleHistogramDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.findDomainBoundsWithOffset((IntervalXYDataset) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'dataset' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      DefaultBoxAndWhiskerXYDataset<Short> defaultBoxAndWhiskerXYDataset0 = new DefaultBoxAndWhiskerXYDataset<Short>((Short) null);
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.findDomainBounds(defaultBoxAndWhiskerXYDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.general.AbstractSeriesDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer((-3079.59), true);
      DefaultWindDataset defaultWindDataset0 = new DefaultWindDataset();
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.findDomainBounds(defaultWindDataset0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfree.data.xy.DefaultWindDataset cannot be cast to class org.jfree.data.xy.IntervalXYDataset (org.jfree.data.xy.DefaultWindDataset and org.jfree.data.xy.IntervalXYDataset are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @9a99bfa)
         //
         verifyException("org.jfree.chart.renderer.xy.ClusteredXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CombinedRangeXYPlot<Short> combinedRangeXYPlot0 = new CombinedRangeXYPlot<Short>();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryCrosshairState<Short, Short> categoryCrosshairState0 = new CategoryCrosshairState<Short, Short>();
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(0, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0, 0.0);
      XYSeriesCollection<TimeSeriesDataItem> xYSeriesCollection0 = new XYSeriesCollection<TimeSeriesDataItem>();
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.drawItem((Graphics2D) null, (XYItemRendererState) null, rectangle2D_Double0, plotRenderingInfo0, combinedRangeXYPlot0, cyclicNumberAxis0, cyclicNumberAxis0, xYSeriesCollection0, 1, 10, categoryCrosshairState0, (-3574));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CombinedRangeXYPlot<Short> combinedRangeXYPlot0 = new CombinedRangeXYPlot<Short>();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryCrosshairState<Short, Short> categoryCrosshairState0 = new CategoryCrosshairState<Short, Short>();
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(2, false);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, 0.0);
      DefaultXYZDataset<Short> defaultXYZDataset0 = new DefaultXYZDataset<Short>();
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.drawItem((Graphics2D) null, (XYItemRendererState) null, rectangle2D_Double0, plotRenderingInfo0, combinedRangeXYPlot0, cyclicNumberAxis0, cyclicNumberAxis0, defaultXYZDataset0, 2, (-3493), categoryCrosshairState0, 2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfree.data.xy.DefaultXYZDataset cannot be cast to class org.jfree.data.xy.IntervalXYDataset (org.jfree.data.xy.DefaultXYZDataset and org.jfree.data.xy.IntervalXYDataset are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @9a99bfa)
         //
         verifyException("org.jfree.chart.renderer.xy.ClusteredXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      DirectionalGradientPaintTransformer directionalGradientPaintTransformer0 = new DirectionalGradientPaintTransformer();
      clusteredXYBarRenderer0.setGradientPaintTransformer(directionalGradientPaintTransformer0);
      try { 
        clusteredXYBarRenderer0.clone();
        fail("Expecting exception: CloneNotSupportedException");
      
      } catch(CloneNotSupportedException e) {
         //
         // Object without clone() method is impossible.
         //
         verifyException("org.jfree.chart.internal.CloneUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      ClusteredXYBarRenderer clusteredXYBarRenderer1 = new ClusteredXYBarRenderer(10, true);
      boolean boolean0 = clusteredXYBarRenderer1.equals(clusteredXYBarRenderer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      boolean boolean0 = clusteredXYBarRenderer0.equals(clusteredXYBarRenderer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Object object0 = new Object();
      boolean boolean0 = clusteredXYBarRenderer0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CombinedRangeXYPlot<Short> combinedRangeXYPlot0 = new CombinedRangeXYPlot<Short>();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo((ChartRenderingInfo) null);
      CategoryCrosshairState<Short, Short> categoryCrosshairState0 = new CategoryCrosshairState<Short, Short>();
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(0, false);
      clusteredXYBarRenderer0.setUseYInterval(true);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2);
      // Undeclared exception!
      try { 
        clusteredXYBarRenderer0.drawItem((Graphics2D) null, (XYItemRendererState) null, rectangle2D_Double0, plotRenderingInfo0, combinedRangeXYPlot0, cyclicNumberAxis0, cyclicNumberAxis0, (XYDataset) null, 2, 0, categoryCrosshairState0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.renderer.xy.ClusteredXYBarRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      SimpleHistogramDataset<Integer> simpleHistogramDataset0 = new SimpleHistogramDataset<Integer>(integer0);
      Range range0 = clusteredXYBarRenderer0.findDomainBoundsWithOffset(simpleHistogramDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CategoryTableXYDataset categoryTableXYDataset0 = new CategoryTableXYDataset();
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer(10, true);
      Range range0 = clusteredXYBarRenderer0.findDomainBounds(categoryTableXYDataset0);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Range range0 = clusteredXYBarRenderer0.findDomainBounds((XYDataset) null);
      assertNull(range0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      int int0 = clusteredXYBarRenderer0.getPassCount();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClusteredXYBarRenderer clusteredXYBarRenderer0 = new ClusteredXYBarRenderer();
      Object object0 = clusteredXYBarRenderer0.clone();
      boolean boolean0 = clusteredXYBarRenderer0.equals(object0);
      assertTrue(boolean0);
  }
}
