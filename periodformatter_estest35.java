package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

/**
 * This class contains unit tests for the PeriodFormatter.
 * Note: The original class name "PeriodFormatter_ESTestTest35" was generated by a tool.
 * In a real-world scenario, it would be renamed to "PeriodFormatterTest".
 */
public class PeriodFormatter_ESTestTest35 {

    /**
     * This test verifies that the parsePeriod() method throws an IllegalArgumentException
     * when the input string does not conform to the expected format.
     */
    @Test
    public void parsePeriod_withInvalidFormat_shouldThrowIllegalArgumentException() {
        // Arrange: Create a formatter that strictly expects only a literal double-quote character ("").
        PeriodFormatterBuilder.Literal literalParser = new PeriodFormatterBuilder.Literal("\"");
        PeriodFormatter formatter = new PeriodFormatter(literalParser, literalParser);
        String invalidInput = "Parsing not supported";

        // Act & Assert: Attempt to parse the non-matching string and verify the exception.
        try {
            formatter.parsePeriod(invalidInput);
            fail("Expected an IllegalArgumentException because the input does not match the format.");
        } catch (IllegalArgumentException e) {
            // Verify that the correct exception was thrown with a descriptive message.
            String expectedMessage = "Invalid format: \"" + invalidInput + "\"";
            assertEquals(expectedMessage, e.getMessage());
        }
    }
}