/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 17 16:20:26 GMT 2025
 */

package com.itextpdf.text.error_messages;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.itextpdf.text.error_messages.MessageLocalization;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MessageLocalization_ESTest extends MessageLocalization_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageLocalization.setMessages((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("rL:MuU>kC(vmJ+!e!(>");
      stringReader0.close();
      try { 
        MessageLocalization.setMessages(stringReader0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "Xs";
      String string0 = MessageLocalization.getComposedMessage("X72rI", objectArray0);
      assertEquals("No message found for X72rI", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = MessageLocalization.getMessage("you.can.only.add.cells.to.rows.no.objects.of.type.1", true);
      assertEquals("You can only add cells to rows, no objects of type {1}", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = MessageLocalization.getMessage("", true);
      assertNotNull(string0);
      assertEquals("No message found for ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = MessageLocalization.setLanguage("en", "No message found for #N.value.1.is.not.supported");
      assertTrue(boolean0);
      
      String string0 = MessageLocalization.getMessage("No message found for #N.value.1.is.not.supported", false);
      assertEquals("No message found for No message found for #N.value.1.is.not.supported", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = MessageLocalization.getMessage("#you.can.t.add.a.1.to.a.section");
      assertNotNull(string0);
      assertEquals("No message found for #you.can.t.add.a.1.to.a.section", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = MessageLocalization.setLanguage("en", (String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = MessageLocalization.setLanguage("Xs", (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        MessageLocalization.setLanguage((String) null, "#wrong.number.of.columns");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The language cannot be null.
         //
         verifyException("com.itextpdf.text.error_messages.MessageLocalization", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = MessageLocalization.setLanguage("#N.value.1.is.not.supported", "Z+[q![/n\".7YLF#");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = MessageLocalization.getComposedMessage((String) null, (Object[]) null);
      assertEquals("No message found for null", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = MessageLocalization.getComposedMessage("you.can.only.add.cells.to.rows.no.objects.of.type.1", (-83190818));
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("W=EJ%T_\"");
      stringReader0.read();
      MessageLocalization.setMessages(stringReader0);
      String string0 = MessageLocalization.getMessage("", false);
      assertEquals("EJ%T_\"", string0);
  }
}
