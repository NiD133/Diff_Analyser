/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 16:27:58 GMT 2025
 */

package com.itextpdf.text.pdf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.itextpdf.text.io.GetBufferedRandomAccessSource;
import com.itextpdf.text.io.IndependentRandomAccessSource;
import com.itextpdf.text.io.RandomAccessSource;
import com.itextpdf.text.io.WindowRandomAccessSource;
import com.itextpdf.text.pdf.RandomAccessFileOrArray;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.net.URL;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RandomAccessFileOrArray_ESTest extends RandomAccessFileOrArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      byteArray0[4] = (byte) (-104);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArrayInputStream0);
      long long0 = randomAccessFileOrArray0.readLong();
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(2550136832L, long0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-99);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.readUnsignedIntLE();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(2634022912L, long0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)94;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.readUnsignedIntLE();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(6160384L, long0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)30;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.readUnsignedIntLE();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(7680L, long0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte)52;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      short short0 = randomAccessFileOrArray0.readShortLE();
      assertEquals((short)0, short0);
      
      long long0 = randomAccessFileOrArray0.readUnsignedInt();
      assertEquals(4147380224L, long0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)52;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.readUnsignedInt();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(52L, long0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)16;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArrayInputStream0);
      float float0 = randomAccessFileOrArray0.readFloatLE();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(5.74E-42F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readLine();
      try { 
        randomAccessFileOrArray0.readLongLE();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      byteArray0[3] = (byte)52;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArrayInputStream0);
      long long0 = randomAccessFileOrArray0.readLong();
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(223338299392L, long0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-9);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      double double0 = randomAccessFileOrArray0.readDouble();
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(1.34178037854316E-309, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte)0);
      try { 
        randomAccessFileOrArray0.readFloat();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)30;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      char char0 = randomAccessFileOrArray0.readCharLE();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals('\u1E77', char0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte)52;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readShort();
      char char0 = randomAccessFileOrArray0.readChar();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals('\uF734', char0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte)13;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      int int0 = randomAccessFileOrArray0.readUnsignedShortLE();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(3577, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-9);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readShort();
      int int0 = randomAccessFileOrArray0.readUnsignedShort();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(63232, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readShort();
      try { 
        randomAccessFileOrArray0.readUnsignedShort();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)47;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      short short0 = randomAccessFileOrArray0.readShortLE();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((short)47, short0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)16;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      short short0 = randomAccessFileOrArray0.readShort();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((short)4112, short0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      int int0 = randomAccessFileOrArray0.skipBytes((byte)0);
      assertEquals(0, int0);
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte) (-123));
      int int0 = randomAccessFileOrArray0.read(byteArray0);
      assertArrayEquals(new byte[] {(byte) (-123), (byte) (-123), (byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte)0);
      randomAccessFileOrArray0.readFully(byteArray0);
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readLine();
      int int0 = randomAccessFileOrArray0.skipBytes(769);
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readLine();
      long long0 = randomAccessFileOrArray0.skip(8);
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)16;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      int int0 = randomAccessFileOrArray0.readUnsignedShort();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)119;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.readUnsignedIntLE();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(119L, long0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-9);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.readUnsignedInt();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(63232L, long0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)16;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      int int0 = randomAccessFileOrArray0.readUnsignedByte();
      assertEquals(1L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)16;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      short short0 = randomAccessFileOrArray0.readShortLE();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((short)4096, short0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-83);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      short short0 = randomAccessFileOrArray0.readShortLE();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((short) (-21248), short0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)114;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      short short0 = randomAccessFileOrArray0.readShort();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((short)29184, short0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-90);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      short short0 = randomAccessFileOrArray0.readShort();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((short) (-23040), short0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.readLongLE();
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)16;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.readLongLE();
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(16L, long0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-12);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.readLongLE();
      assertEquals((-864691128455135232L), long0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.readLong();
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      byteArray0[1] = (byte)16;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArrayInputStream0);
      long long0 = randomAccessFileOrArray0.readLong();
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(4503599627370496L, long0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte) (-63));
      long long0 = randomAccessFileOrArray0.readLong();
      assertEquals(7L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-4539628424389459968L), long0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-9);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      int int0 = randomAccessFileOrArray0.readIntLE();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(16187392, int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-9);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      int int0 = randomAccessFileOrArray0.readIntLE();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-150994944), int0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte)10);
      int int0 = randomAccessFileOrArray0.readInt();
      assertEquals(3L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(167772160, int0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-9);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readShort();
      int int0 = randomAccessFileOrArray0.readInt();
      assertEquals(6L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-150994944), int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArrayInputStream0);
      float float0 = randomAccessFileOrArray0.readFloatLE();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-1.7014118E38F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte)118);
      float float0 = randomAccessFileOrArray0.readFloat();
      assertEquals(3L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(6.490371E32F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-7);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      float float0 = randomAccessFileOrArray0.readFloat();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-4.1538375E34F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      double double0 = randomAccessFileOrArray0.readDoubleLE();
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte) (-9);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      double double0 = randomAccessFileOrArray0.readDoubleLE();
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(7.9976343E-317, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[7] = (byte) (-21);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      double double0 = randomAccessFileOrArray0.readDoubleLE();
      assertEquals(8L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-2.5684257331779168E207), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      double double0 = randomAccessFileOrArray0.readDouble();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte) (-63));
      randomAccessFileOrArray0.readDouble();
      randomAccessFileOrArray0.skipBytes(1);
      randomAccessFileOrArray0.readBoolean();
      try { 
        randomAccessFileOrArray0.readShortLE();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-16);
      byteArray0[1] = (byte)6;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      char char0 = randomAccessFileOrArray0.readCharLE();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals('\u06F0', char0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)52;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readUnsignedShort();
      char char0 = randomAccessFileOrArray0.readChar();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals('4', char0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)16;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readBoolean();
      char char0 = randomAccessFileOrArray0.readChar();
      assertEquals(3L, randomAccessFileOrArray0.getFilePointer());
      assertEquals('\u1000', char0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)31;
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      byte byte0 = randomAccessFileOrArray0.readByte();
      assertEquals(1L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((byte)31, byte0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte) (-124);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      byte byte0 = randomAccessFileOrArray0.readByte();
      assertEquals(1L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((byte) (-124), byte0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      byte[] byteArray1 = new byte[0];
      int int0 = randomAccessFileOrArray0.read(byteArray1);
      assertEquals(0, int0);
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.skipBytes(437);
      int int0 = randomAccessFileOrArray0.read();
      assertEquals(6L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-960), (-960));
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArrayInputStream0);
      randomAccessFileOrArray0.length();
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readIntLE();
      long long0 = randomAccessFileOrArray0.getFilePointer();
      assertEquals(4L, long0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.getByteSource();
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.skip(1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readUnsignedShortLE();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readUnsignedShort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readUnsignedIntLE();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.seek((-2416L));
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readUnsignedIntLE();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readUnsignedInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      IndependentRandomAccessSource independentRandomAccessSource0 = new IndependentRandomAccessSource((RandomAccessSource) null);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(independentRandomAccessSource0);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readUnsignedByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.io.IndependentRandomAccessSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readUTF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readString(0, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // 
         //
         verifyException("org.evosuite.runtime.mock.java.lang.MockRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readString(2919, "xEp}d]>:P4jFt\" =");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readString(1272, "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Already closed
         //
         verifyException("com.itextpdf.text.io.ArrayRandomAccessSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readString(1504, "");
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readShortLE();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.seek((-172L));
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readShortLE();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readShort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readLongLE();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readLong();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.seek((-3337L));
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readIntLE();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readInt();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readFully((byte[]) null, 0, 1518);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readFully(byteArray0, 125, 125);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Already closed
         //
         verifyException("com.itextpdf.text.io.ArrayRandomAccessSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readFully(byteArray0, 695, 695);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readFully((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readFully(byteArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Already closed
         //
         verifyException("com.itextpdf.text.io.ArrayRandomAccessSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.seek((-2345L));
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readFully(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readFloatLE();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readFloat();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readFloat();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readDoubleLE();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readCharLE();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readByte();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readBoolean();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.seek((-1064L));
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readBoolean();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.read((byte[]) null, 437, 437);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.read(byteArray0, 255, 255);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Already closed
         //
         verifyException("com.itextpdf.text.io.ArrayRandomAccessSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.read((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.read(byteArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Already closed
         //
         verifyException("com.itextpdf.text.io.ArrayRandomAccessSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.seek((-1583L));
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.read(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.read();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.close();
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.length();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.io.ArrayRandomAccessSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.io.ArrayRandomAccessSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray(uRL0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray((String) null, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray("", false, false);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.io.RandomAccessSourceFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3396), 11);
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessFileOrArray) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readIntLE();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      int int0 = randomAccessFileOrArray0.readInt();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readInt();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.getFilePointer();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte)22);
      long long0 = randomAccessFileOrArray0.skip(114L);
      assertEquals(5L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(6L, long0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte)32);
      long long0 = randomAccessFileOrArray0.skip(1L);
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      long long0 = randomAccessFileOrArray0.skip((-2015L));
      assertEquals(0L, long0);
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      WindowRandomAccessSource windowRandomAccessSource0 = new WindowRandomAccessSource((RandomAccessSource) null, 418L, 418L);
      IndependentRandomAccessSource independentRandomAccessSource0 = new IndependentRandomAccessSource(windowRandomAccessSource0);
      GetBufferedRandomAccessSource getBufferedRandomAccessSource0 = new GetBufferedRandomAccessSource(independentRandomAccessSource0);
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(getBufferedRandomAccessSource0);
      long long0 = randomAccessFileOrArray0.skip(418L);
      assertEquals(418L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(418L, long0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readIntLE();
      try { 
        randomAccessFileOrArray0.readFully(byteArray0, 1, 888606720);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readFully(byteArray0, (-5), 0);
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readFully(byteArray0, (-2783), (-2783));
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.read(byteArray0, 0, 2480);
      try { 
        randomAccessFileOrArray0.readUnsignedIntLE();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readLine();
      int int0 = randomAccessFileOrArray0.read(byteArray0, 52, 16);
      assertEquals(9L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.read(byteArray0, 8, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte)127);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.read(byteArray0, (int) (byte)127, (int) (byte)127);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      int int0 = randomAccessFileOrArray0.read(byteArray0, 0, (int) (byte)0);
      assertEquals(0, int0);
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte) (-69));
      int int0 = randomAccessFileOrArray0.read();
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(187, int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.read();
      assertEquals(1L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray("report");
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.length();
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readLong();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("i'{b2_OYx?q");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray("i'{b2_OYx?q", true, true);
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.read(byteArray0);
      randomAccessFileOrArray0.readLine();
      assertEquals(3L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte)13);
      assertEquals((-1L), randomAccessFileOrArray0.getFilePointer());
      
      String string0 = randomAccessFileOrArray0.readLine();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte)10);
      randomAccessFileOrArray0.readLine();
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readUnsignedIntLE();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readUnsignedInt();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readUnsignedInt();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readFloatLE();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readDouble();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readCharLE();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      char char0 = randomAccessFileOrArray0.readCharLE();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readChar();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      char char0 = randomAccessFileOrArray0.readChar();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readUnsignedShortLE();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      int int0 = randomAccessFileOrArray0.readUnsignedShortLE();
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readShort();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readShortLE();
      try { 
        randomAccessFileOrArray0.readUnsignedByte();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      int int0 = randomAccessFileOrArray0.readUnsignedByte();
      assertEquals(1L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readByte();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      byte byte0 = randomAccessFileOrArray0.readByte();
      assertEquals(1L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((byte)0, byte0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.pushBack((byte) (-63));
      boolean boolean0 = randomAccessFileOrArray0.readBoolean();
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readBoolean();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
      
      randomAccessFileOrArray0.pushBack((byte) (-127));
      long long0 = randomAccessFileOrArray0.getFilePointer();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readShortLE();
      try { 
        randomAccessFileOrArray0.readFully(byteArray0);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
      
      randomAccessFileOrArray0.pushBack((byte) (-104));
      int int0 = randomAccessFileOrArray0.read(byteArray0, 10, (int) (byte) (-104));
      assertEquals((-1L), randomAccessFileOrArray0.getFilePointer());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.readUTF();
      int int0 = randomAccessFileOrArray0.read(byteArray0);
      assertEquals(2L, randomAccessFileOrArray0.getFilePointer());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      RandomAccessFileOrArray randomAccessFileOrArray1 = randomAccessFileOrArray0.createView();
      assertEquals(0L, randomAccessFileOrArray1.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readDouble();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      RandomAccessFileOrArray randomAccessFileOrArray1 = new RandomAccessFileOrArray(randomAccessFileOrArray0);
      assertEquals(0L, randomAccessFileOrArray1.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray("", true, true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.reOpen();
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readString((-940), "\"O:pU~");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readDoubleLE();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      float float0 = randomAccessFileOrArray0.readFloat();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.skipBytes(127);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      float float0 = randomAccessFileOrArray0.readFloatLE();
      assertEquals(4L, randomAccessFileOrArray0.getFilePointer());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      URL uRL0 = MockURL.getFileExample();
      RandomAccessFileOrArray randomAccessFileOrArray0 = null;
      try {
        randomAccessFileOrArray0 = new RandomAccessFileOrArray(uRL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      randomAccessFileOrArray0.pushBack((byte)13);
      // Undeclared exception!
      try { 
        randomAccessFileOrArray0.readLine();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray((RandomAccessSource) null);
      randomAccessFileOrArray0.getByteSource();
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      try { 
        randomAccessFileOrArray0.readUTF();
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.RandomAccessFileOrArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      RandomAccessFileOrArray randomAccessFileOrArray0 = new RandomAccessFileOrArray(byteArray0);
      randomAccessFileOrArray0.createSourceView();
      assertEquals(0L, randomAccessFileOrArray0.getFilePointer());
  }
}
