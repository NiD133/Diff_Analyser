/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 17 09:49:50 GMT 2025
 */

package org.apache.commons.collections4.bag;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.Comparator;
import java.util.ConcurrentModificationException;
import java.util.EnumSet;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import org.apache.commons.collections4.Bag;
import org.apache.commons.collections4.Equator;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.SortedBag;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.bag.CollectionBag;
import org.apache.commons.collections4.bag.HashBag;
import org.apache.commons.collections4.bag.PredicatedBag;
import org.apache.commons.collections4.bag.PredicatedSortedBag;
import org.apache.commons.collections4.bag.SynchronizedBag;
import org.apache.commons.collections4.bag.SynchronizedSortedBag;
import org.apache.commons.collections4.bag.TransformedBag;
import org.apache.commons.collections4.bag.TransformedSortedBag;
import org.apache.commons.collections4.bag.TreeBag;
import org.apache.commons.collections4.bag.UnmodifiableBag;
import org.apache.commons.collections4.bag.UnmodifiableSortedBag;
import org.apache.commons.collections4.functors.AndPredicate;
import org.apache.commons.collections4.functors.EqualPredicate;
import org.apache.commons.collections4.functors.ExceptionPredicate;
import org.apache.commons.collections4.functors.ExceptionTransformer;
import org.apache.commons.collections4.functors.IdentityPredicate;
import org.apache.commons.collections4.functors.InstanceofPredicate;
import org.apache.commons.collections4.functors.InvokerTransformer;
import org.apache.commons.collections4.functors.NullIsFalsePredicate;
import org.apache.commons.collections4.functors.TransformerClosure;
import org.apache.commons.collections4.functors.UniquePredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CollectionBag_ESTest extends CollectionBag_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      treeBag0.add(locale_Category0);
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      boolean boolean0 = collectionBag0.remove((Object) locale_Category0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      HashBag<Object> hashBag0 = new HashBag<Object>((Iterable<?>) linkedList0);
      CollectionBag<Object> collectionBag0 = new CollectionBag<Object>(hashBag0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.REJECT_EXTENDED_RANGES;
      boolean boolean0 = collectionBag0.remove((Object) locale_FilteringMode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      TreeBag<Locale.FilteringMode> treeBag0 = new TreeBag<Locale.FilteringMode>(comparator0);
      Predicate<Object> predicate0 = ExceptionPredicate.exceptionPredicate();
      PredicatedSortedBag<Locale.FilteringMode> predicatedSortedBag0 = PredicatedSortedBag.predicatedSortedBag((SortedBag<Locale.FilteringMode>) treeBag0, (Predicate<? super Locale.FilteringMode>) predicate0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      treeBag0.add(locale_FilteringMode0, 5);
      Stack<LinkedList<Object>> stack0 = new Stack<LinkedList<Object>>();
      TreeBag<LinkedList<Object>> treeBag1 = new TreeBag<LinkedList<Object>>((Collection<? extends LinkedList<Object>>) stack0);
      CollectionBag<LinkedList<Object>> collectionBag0 = new CollectionBag<LinkedList<Object>>(treeBag1);
      boolean boolean0 = collectionBag0.containsAll(predicatedSortedBag0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      collectionBag0.add(locale_Category0, 3073);
      // Undeclared exception!
      collectionBag0.retainAll(treeBag0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TreeBag<Locale.FilteringMode> treeBag0 = new TreeBag<Locale.FilteringMode>();
      SortedBag<Locale.FilteringMode> sortedBag0 = UnmodifiableSortedBag.unmodifiableSortedBag((SortedBag<Locale.FilteringMode>) treeBag0);
      CollectionBag<Locale.FilteringMode> collectionBag0 = new CollectionBag<Locale.FilteringMode>(sortedBag0);
      // Undeclared exception!
      try { 
        collectionBag0.retainAll((Collection<?>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.UnmodifiableSortedBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      EnumSet<Locale.FilteringMode> enumSet0 = EnumSet.allOf(class0);
      HashBag<Locale.FilteringMode> hashBag0 = new HashBag<Locale.FilteringMode>((Iterable<? extends Locale.FilteringMode>) enumSet0);
      Bag<Object> bag0 = UnmodifiableBag.unmodifiableBag((Bag<?>) hashBag0);
      CollectionBag<Object> collectionBag0 = new CollectionBag<Object>(bag0);
      // Undeclared exception!
      try { 
        collectionBag0.removeAll(hashBag0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.UnmodifiableBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashBag<LinkedList<Object>> hashBag0 = new HashBag<LinkedList<Object>>();
      CollectionBag<LinkedList<Object>> collectionBag0 = new CollectionBag<LinkedList<Object>>(hashBag0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      collectionBag0.add(linkedList0);
      TreeBag<Object> treeBag0 = new TreeBag<Object>((Iterable<?>) linkedList0);
      UniquePredicate<Object> uniquePredicate0 = new UniquePredicate<Object>();
      PredicatedBag<Object> predicatedBag0 = new PredicatedBag<Object>(treeBag0, uniquePredicate0);
      CollectionBag<Object> collectionBag1 = new CollectionBag<Object>(predicatedBag0);
      // Undeclared exception!
      try { 
        collectionBag1.removeAll(collectionBag0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      TreeBag<Integer> treeBag0 = new TreeBag<Integer>((Collection<? extends Integer>) linkedList0);
      SortedBag<Integer> sortedBag0 = UnmodifiableSortedBag.unmodifiableSortedBag((SortedBag<Integer>) treeBag0);
      CollectionBag<Integer> collectionBag0 = new CollectionBag<Integer>(sortedBag0);
      Integer integer0 = new Integer(4);
      // Undeclared exception!
      try { 
        collectionBag0.remove((Object) integer0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.UnmodifiableSortedBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      // Undeclared exception!
      try { 
        collectionBag0.remove((Object) treeBag0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      TreeBag<Object> treeBag1 = new TreeBag<Object>();
      SynchronizedSortedBag<Object> synchronizedSortedBag0 = SynchronizedSortedBag.synchronizedSortedBag((SortedBag<Object>) treeBag1);
      CollectionBag<Object> collectionBag1 = new CollectionBag<Object>(synchronizedSortedBag0);
      // Undeclared exception!
      try { 
        collectionBag1.remove((Object) collectionBag0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      // Undeclared exception!
      try { 
        collectionBag0.containsAll((Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.CollectionBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        CollectionBag.collectionBag((Bag<Object>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // collection
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      treeBag0.add(locale_Category0);
      Transformer<Locale.Category, Locale.Category> transformer0 = ExceptionTransformer.exceptionTransformer();
      TransformedSortedBag<Locale.Category> transformedSortedBag0 = TransformedSortedBag.transformingSortedBag((SortedBag<Locale.Category>) treeBag0, (Transformer<? super Locale.Category, ? extends Locale.Category>) transformer0);
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(transformedSortedBag0);
      // Undeclared exception!
      try { 
        collectionBag0.addAll(transformedSortedBag0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ExceptionTransformer invoked
         //
         verifyException("org.apache.commons.collections4.functors.ExceptionTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      treeBag0.add(locale_Category0);
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      collectionBag0.addAll(treeBag0);
      // Undeclared exception!
      try { 
        collectionBag0.addAll(treeBag0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.AbstractMapBag$BagIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      treeBag0.add(locale_Category0);
      SortedBag<Locale.Category> sortedBag0 = UnmodifiableSortedBag.unmodifiableSortedBag((SortedBag<Locale.Category>) treeBag0);
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(sortedBag0);
      // Undeclared exception!
      try { 
        collectionBag0.addAll(treeBag0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.UnmodifiableSortedBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      // Undeclared exception!
      try { 
        collectionBag0.addAll((Collection<? extends Locale.Category>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.CollectionBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashBag<Object> hashBag0 = new HashBag<Object>();
      Transformer<Object, Object> transformer0 = ExceptionTransformer.exceptionTransformer();
      TransformerClosure<Object> transformerClosure0 = new TransformerClosure<Object>(transformer0);
      Bag<Object> bag0 = TransformedBag.transformingBag((Bag<Object>) hashBag0, (Transformer<? super Object, ?>) transformer0);
      CollectionBag<Object> collectionBag0 = new CollectionBag<Object>(bag0);
      // Undeclared exception!
      try { 
        collectionBag0.add((Object) transformerClosure0, 5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ExceptionTransformer invoked
         //
         verifyException("org.apache.commons.collections4.functors.ExceptionTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashBag<Locale.FilteringMode> hashBag0 = new HashBag<Locale.FilteringMode>();
      Bag<Locale.FilteringMode> bag0 = UnmodifiableBag.unmodifiableBag((Bag<? extends Locale.FilteringMode>) hashBag0);
      SynchronizedBag<Locale.FilteringMode> synchronizedBag0 = new SynchronizedBag<Locale.FilteringMode>(bag0);
      CollectionBag<Locale.FilteringMode> collectionBag0 = new CollectionBag<Locale.FilteringMode>(synchronizedBag0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      // Undeclared exception!
      try { 
        collectionBag0.add(locale_FilteringMode0, (-2920));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.UnmodifiableBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TreeBag<Object> treeBag0 = new TreeBag<Object>();
      CollectionBag<Object> collectionBag0 = new CollectionBag<Object>(treeBag0);
      // Undeclared exception!
      try { 
        collectionBag0.add((Object) null, 586);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      TreeBag<Locale.FilteringMode> treeBag1 = new TreeBag<Locale.FilteringMode>();
      Predicate<Object> predicate0 = IdentityPredicate.identityPredicate((Object) treeBag0);
      AndPredicate<Object> andPredicate0 = new AndPredicate<Object>(predicate0, predicate0);
      PredicatedBag<Locale.FilteringMode> predicatedBag0 = PredicatedBag.predicatedBag((Bag<Locale.FilteringMode>) treeBag1, (Predicate<? super Locale.FilteringMode>) andPredicate0);
      CollectionBag<Locale.FilteringMode> collectionBag0 = new CollectionBag<Locale.FilteringMode>(predicatedBag0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      // Undeclared exception!
      try { 
        collectionBag0.add(locale_FilteringMode0, 512);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add Object 'EXTENDED_FILTERING' - Predicate 'org.apache.commons.collections4.functors.AndPredicate@4' rejected it
         //
         verifyException("org.apache.commons.collections4.collection.PredicatedCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PriorityQueue<Locale.FilteringMode> priorityQueue0 = new PriorityQueue<Locale.FilteringMode>();
      PriorityQueue<Object> priorityQueue1 = new PriorityQueue<Object>(priorityQueue0);
      TreeBag<Object> treeBag0 = new TreeBag<Object>((Iterable<?>) priorityQueue1);
      SynchronizedSortedBag<Object> synchronizedSortedBag0 = new SynchronizedSortedBag<Object>(treeBag0);
      CollectionBag<Object> collectionBag0 = new CollectionBag<Object>(synchronizedSortedBag0);
      // Undeclared exception!
      try { 
        collectionBag0.add((Object) priorityQueue0, 1681);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TreeBag<LinkedList<Locale.Category>> treeBag0 = new TreeBag<LinkedList<Locale.Category>>((Comparator<? super LinkedList<Locale.Category>>) null);
      SynchronizedSortedBag<LinkedList<Locale.Category>> synchronizedSortedBag0 = SynchronizedSortedBag.synchronizedSortedBag((SortedBag<LinkedList<Locale.Category>>) treeBag0);
      Transformer<Object, LinkedList<Locale.Category>> transformer0 = InvokerTransformer.invokerTransformer("predicate");
      Bag<LinkedList<Locale.Category>> bag0 = TransformedBag.transformedBag((Bag<LinkedList<Locale.Category>>) synchronizedSortedBag0, (Transformer<? super LinkedList<Locale.Category>, ? extends LinkedList<Locale.Category>>) transformer0);
      CollectionBag<LinkedList<Locale.Category>> collectionBag0 = new CollectionBag<LinkedList<Locale.Category>>(bag0);
      LinkedList<Locale.Category> linkedList0 = new LinkedList<Locale.Category>();
      // Undeclared exception!
      try { 
        collectionBag0.add(linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // InvokerTransformer: The method 'predicate' on 'class java.util.LinkedList' does not exist
         //
         verifyException("org.apache.commons.collections4.functors.InvokerTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      Bag<Object> bag0 = UnmodifiableBag.unmodifiableBag((Bag<?>) treeBag0);
      CollectionBag<Object> collectionBag1 = new CollectionBag<Object>(bag0);
      // Undeclared exception!
      try { 
        collectionBag1.add((Object) collectionBag0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.UnmodifiableBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TreeBag<Object> treeBag0 = new TreeBag<Object>((Comparator<? super Object>) null);
      CollectionBag<Object> collectionBag0 = new CollectionBag<Object>(treeBag0);
      // Undeclared exception!
      try { 
        collectionBag0.add((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      TreeBag<Locale.FilteringMode> treeBag0 = new TreeBag<Locale.FilteringMode>();
      EqualPredicate<Object> equalPredicate0 = new EqualPredicate<Object>(locale_Category0, (Equator<Object>) null);
      NullIsFalsePredicate<Object> nullIsFalsePredicate0 = new NullIsFalsePredicate<Object>(equalPredicate0);
      PredicatedSortedBag<Locale.FilteringMode> predicatedSortedBag0 = PredicatedSortedBag.predicatedSortedBag((SortedBag<Locale.FilteringMode>) treeBag0, (Predicate<? super Locale.FilteringMode>) nullIsFalsePredicate0);
      CollectionBag<Locale.FilteringMode> collectionBag0 = new CollectionBag<Locale.FilteringMode>(predicatedSortedBag0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      // Undeclared exception!
      try { 
        collectionBag0.add(locale_FilteringMode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add Object 'MAP_EXTENDED_RANGES' - Predicate 'org.apache.commons.collections4.functors.NullIsFalsePredicate@3' rejected it
         //
         verifyException("org.apache.commons.collections4.collection.PredicatedCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HashSet<Locale.FilteringMode> hashSet0 = new HashSet<Locale.FilteringMode>();
      TreeBag<Object> treeBag0 = new TreeBag<Object>((Iterable<?>) hashSet0);
      CollectionBag<Object> collectionBag0 = new CollectionBag<Object>(treeBag0);
      // Undeclared exception!
      try { 
        collectionBag0.add((Object) treeBag0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      TreeBag<Object> treeBag1 = new TreeBag<Object>((Iterable<?>) treeBag0);
      SynchronizedSortedBag<Object> synchronizedSortedBag0 = new SynchronizedSortedBag<Object>(treeBag1);
      CollectionBag<Object> collectionBag0 = new CollectionBag<Object>(synchronizedSortedBag0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        collectionBag0.add(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CollectionBag<Transformer<InstanceofPredicate, InstanceofPredicate>> collectionBag0 = null;
      try {
        collectionBag0 = new CollectionBag<Transformer<InstanceofPredicate, InstanceofPredicate>>((Bag<Transformer<InstanceofPredicate, InstanceofPredicate>>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // collection
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TreeBag<LinkedList<Object>> treeBag0 = new TreeBag<LinkedList<Object>>();
      CollectionBag<LinkedList<Object>> collectionBag0 = new CollectionBag<LinkedList<Object>>(treeBag0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        collectionBag0.add(linkedList0, 2);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      treeBag0.add(locale_Category0);
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      boolean boolean0 = collectionBag0.retainAll(treeBag0);
      assertEquals(1, treeBag0.size());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      // Undeclared exception!
      try { 
        collectionBag0.retainAll((Collection<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.AbstractMapBag", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(comparator0).compare(any() , any());
      TreeBag<Locale.FilteringMode> treeBag0 = new TreeBag<Locale.FilteringMode>(comparator0);
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.AUTOSELECT_FILTERING;
      treeBag0.add(locale_FilteringMode0, 3251);
      Vector<LinkedList<Object>> vector0 = new Vector<LinkedList<Object>>();
      TreeBag<LinkedList<Object>> treeBag1 = new TreeBag<LinkedList<Object>>((Collection<? extends LinkedList<Object>>) vector0);
      HashBag<Locale.FilteringMode> hashBag0 = new HashBag<Locale.FilteringMode>((Collection<? extends Locale.FilteringMode>) treeBag0);
      CollectionBag<Locale.FilteringMode> collectionBag0 = new CollectionBag<Locale.FilteringMode>(treeBag0);
      collectionBag0.retainAll(treeBag1);
      // Undeclared exception!
      collectionBag0.removeAll(hashBag0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      EnumSet<Locale.FilteringMode> enumSet0 = EnumSet.allOf(class0);
      HashBag<Locale.FilteringMode> hashBag0 = new HashBag<Locale.FilteringMode>((Iterable<? extends Locale.FilteringMode>) enumSet0);
      CollectionBag<Locale.FilteringMode> collectionBag0 = new CollectionBag<Locale.FilteringMode>(hashBag0);
      boolean boolean0 = collectionBag0.removeAll(enumSet0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      boolean boolean0 = collectionBag0.removeAll(treeBag0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TreeBag<Object> treeBag0 = new TreeBag<Object>();
      CollectionBag<Object> collectionBag0 = new CollectionBag<Object>(treeBag0);
      boolean boolean0 = collectionBag0.removeAll((Collection<?>) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      Locale.Category locale_Category0 = Locale.Category.FORMAT;
      treeBag0.add(locale_Category0);
      treeBag0.add(locale_Category0);
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      HashBag<Locale.Category> hashBag0 = new HashBag<Locale.Category>((Iterable<? extends Locale.Category>) treeBag0);
      boolean boolean0 = collectionBag0.addAll(hashBag0);
      assertEquals(4, treeBag0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      Locale.Category locale_Category0 = Locale.Category.DISPLAY;
      treeBag0.add(locale_Category0);
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      collectionBag0.addAll(treeBag0);
      // Undeclared exception!
      try { 
        collectionBag0.removeAll(treeBag0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.collections4.bag.AbstractMapBag$BagIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(treeBag0);
      boolean boolean0 = collectionBag0.addAll(treeBag0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeBag<Locale.FilteringMode> treeBag0 = new TreeBag<Locale.FilteringMode>(comparator0);
      HashBag<Locale.FilteringMode> hashBag0 = new HashBag<Locale.FilteringMode>((Collection<? extends Locale.FilteringMode>) treeBag0);
      Bag<Locale.FilteringMode> bag0 = CollectionBag.collectionBag((Bag<Locale.FilteringMode>) hashBag0);
      assertEquals(0, bag0.size());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Vector<LinkedList<Object>> vector0 = new Vector<LinkedList<Object>>();
      TreeBag<Object> treeBag0 = new TreeBag<Object>((Iterable<?>) vector0);
      CollectionBag<Object> collectionBag0 = new CollectionBag<Object>(treeBag0);
      // Undeclared exception!
      try { 
        collectionBag0.remove((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.TreeMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TreeBag<Locale.Category> treeBag0 = new TreeBag<Locale.Category>();
      HashBag<Locale.Category> hashBag0 = new HashBag<Locale.Category>();
      CollectionBag<Locale.Category> collectionBag0 = new CollectionBag<Locale.Category>(hashBag0);
      boolean boolean0 = collectionBag0.containsAll(treeBag0);
      assertTrue(boolean0);
  }
}
