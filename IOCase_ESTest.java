/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 00:50:37 GMT 2025
 */

package org.apache.commons.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.io.IOCase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IOCase_ESTest extends IOCase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkIndexOf("1", 0, "1");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkCompareTo("LINUX", "\"#S6?U_R7?'mwf");
      assertEquals(74, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      IOCase iOCase1 = IOCase.value((IOCase) null, iOCase0);
      assertEquals(IOCase.INSENSITIVE, iOCase1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      IOCase iOCase1 = IOCase.INSENSITIVE;
      IOCase iOCase2 = IOCase.value(iOCase0, iOCase1);
      assertEquals(IOCase.SENSITIVE, iOCase2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IOCase[] iOCaseArray0 = IOCase.values();
      assertEquals(3, iOCaseArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOCase iOCase0 = IOCase.valueOf("SENSITIVE");
      assertEquals(IOCase.SENSITIVE, iOCase0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOCase iOCase0 = IOCase.valueOf("INSENSITIVE");
      assertEquals("Insensitive", iOCase0.getName());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      IOCase iOCase1 = IOCase.value(iOCase0, iOCase0);
      assertEquals(IOCase.INSENSITIVE, iOCase1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.isCaseSensitive();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkIndexOf("\"93F*1y", (-794), "\"93F*1y");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      IOCase iOCase1 = IOCase.value(iOCase0, iOCase0);
      assertEquals(IOCase.SYSTEM, iOCase1);
      
      int int0 = iOCase1.checkCompareTo("\"#s6?ulinuxmwf", "#s6?u");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOCase.forName("7VKlZdfe6fjn*5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal IOCase name: 7VKlZdfe6fjn*5
         //
         verifyException("org.apache.commons.io.IOCase", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      // Undeclared exception!
      iOCase0.checkIndexOf("H{o(4Kq#L?M", (-70537784), "H{o(4Kq#L?M");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      // Undeclared exception!
      try { 
        iOCase0.checkCompareTo((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // str1
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkRegionMatches("hM'", (-537), "hM'");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOCase iOCase0 = IOCase.forName("Sensitive");
      boolean boolean0 = iOCase0.checkRegionMatches("NUL", 0, "NUL");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.checkRegionMatches("Sensitive", 258, "Insensitive");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEquals(")", ")");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      String string0 = iOCase0.getName();
      assertEquals("Insensitive", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      boolean boolean0 = iOCase0.checkStartsWith("vHnm-dNXF4", "2");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkStartsWith("\"#s6?", "\"#s6?");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkStartsWith("I", (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      boolean boolean0 = iOCase0.checkStartsWith((String) null, (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      boolean boolean0 = iOCase0.checkRegionMatches("System", (-1121), (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      boolean boolean0 = iOCase0.checkRegionMatches((String) null, 493, (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      int int0 = iOCase0.checkIndexOf("5La,\"KK)#Ep.w:5veX", 0, "1");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      int int0 = iOCase0.checkIndexOf("aRG9v=v)b", 2351, "");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      int int0 = iOCase0.checkIndexOf("gEp63)S_DE]h,eyp", (-231), (String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkIndexOf("XH{o(jPCKq3L?>", (-31), "p");
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkIndexOf((String) null, 6, (String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEquals("System", "SYSTEM");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.checkEquals("", "&b");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEquals("krmipp?jw", "1bq26gL^");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOCase iOCase0 = IOCase.forName("Sensitive");
      boolean boolean0 = iOCase0.checkEquals((String) null, "|*+9<&3 LH");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      boolean boolean0 = iOCase0.checkEquals("", "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IOCase iOCase0 = IOCase.SENSITIVE;
      boolean boolean0 = iOCase0.checkEndsWith("|,?])9N.", "|,?])9N.");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEndsWith("Sensitive", "gX@Wm5dEh2O");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = iOCase0.checkEndsWith("krmipp?jw", (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      boolean boolean0 = iOCase0.checkEndsWith((String) null, (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      int int0 = iOCase0.checkCompareTo("1bq26gL^", "1bq26gL^");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      IOCase iOCase1 = IOCase.value((IOCase) null, iOCase0);
      assertEquals(IOCase.SYSTEM, iOCase1);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      boolean boolean0 = IOCase.isCaseSensitive(iOCase0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IOCase iOCase0 = IOCase.SYSTEM;
      boolean boolean0 = IOCase.isCaseSensitive(iOCase0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      boolean boolean0 = IOCase.isCaseSensitive((IOCase) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IOCase iOCase0 = IOCase.INSENSITIVE;
      String string0 = iOCase0.toString();
      assertEquals("Insensitive", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IOCase iOCase0 = IOCase.forName("Insensitive");
      boolean boolean0 = iOCase0.isCaseSensitive();
      assertFalse(boolean0);
  }
}
