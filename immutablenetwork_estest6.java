package com.google.common.graph;

import static com.google.common.truth.Truth.assertThat;
import static org.junit.Assert.assertEquals;

import com.google.common.collect.ImmutableSet;
import org.junit.Test;

/**
 * This test class contains an improved version of a test originally generated by EvoSuite.
 * The focus of the improvement is on understandability and thoroughness of assertions.
 */
public class ImmutableNetwork_ESTestTest6 {

    /**
     * Tests that building an ImmutableNetwork after adding an edge via an EndpointPair
     * results in a network containing that edge and its incident nodes.
     */
    @Test
    public void build_afterAddingEdgeWithEndpointPair_createsNetworkWithCorrectElements() {
        // Arrange: Define the nodes, the edge, and the endpoint pair.
        Integer nodeU = 1;
        Integer nodeV = 2;
        Integer edge = 101; // Use a distinct value for the edge for clarity.
        EndpointPair<Integer> endpointPair = EndpointPair.unordered(nodeU, nodeV);

        // Act: Create an immutable network by adding the edge.
        // The nodes are added implicitly when the edge is added.
        ImmutableNetwork<Integer, Integer> network =
            NetworkBuilder.undirected()
                .<Integer, Integer>immutable()
                .addEdge(endpointPair, edge)
                .build();

        // Assert: Verify the structure and contents of the created network.
        // 1. Check that both nodes were implicitly added to the network.
        assertThat(network.nodes()).containsExactly(nodeU, nodeV);

        // 2. Check that the edge was added.
        assertThat(network.edges()).containsExactly(edge);

        // 3. Check that the edge connects the correct pair of nodes.
        assertEquals(endpointPair, network.incidentNodes(edge));
    }
}