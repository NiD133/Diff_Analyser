/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 17 18:33:55 GMT 2025
 */

package com.itextpdf.text.pdf;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.itextpdf.text.pdf.ByteBuffer;
import com.itextpdf.text.pdf.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringUtils_ESTest extends StringUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'h';
      byte[] byteArray0 = StringUtils.convertCharsToBytes(charArray0);
      assertEquals(16, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[0];
      byte[] byteArray0 = StringUtils.convertCharsToBytes(charArray0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        StringUtils.escapeString(byteArray0, (ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = new ByteBuffer();
      byteBuffer0.count = (-27);
      // Undeclared exception!
      try { 
        StringUtils.escapeString(byteArray0, byteBuffer0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -27
         //
         verifyException("com.itextpdf.text.pdf.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.escapeString((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        StringUtils.convertCharsToBytes((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.itextpdf.text.pdf.StringUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte)12;
      ByteBuffer byteBuffer0 = new ByteBuffer((byte) (-35));
      StringUtils.escapeString(byteArray0, byteBuffer0);
      assertEquals(9, byteBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)8;
      ByteBuffer byteBuffer0 = new ByteBuffer();
      StringUtils.escapeString(byteArray0, byteBuffer0);
      assertEquals(11, byteBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)13;
      ByteBuffer byteBuffer0 = new ByteBuffer();
      StringUtils.escapeString(byteArray0, byteBuffer0);
      assertEquals(8, byteBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)9;
      ByteBuffer byteBuffer0 = new ByteBuffer(71);
      byte[] byteArray1 = StringUtils.escapeString(byteArray0);
      StringUtils.escapeString(byteArray1, byteBuffer0);
      assertEquals(12, byteBuffer0.size());
      assertArrayEquals(new byte[] {(byte)40, (byte)0, (byte)92, (byte)116, (byte)0, (byte)0, (byte)41}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteBuffer byteBuffer0 = new ByteBuffer((byte)10);
      byte[] byteArray0 = new byte[7];
      byteArray0[5] = (byte)10;
      StringUtils.escapeString(byteArray0, byteBuffer0);
      assertEquals(10, byteBuffer0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)9;
      ByteBuffer byteBuffer0 = new ByteBuffer(71);
      StringUtils.escapeString(byteArray0, byteBuffer0);
      assertEquals(7, byteBuffer0.size());
  }
}
