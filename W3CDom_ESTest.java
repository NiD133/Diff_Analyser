/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 19 13:46:13 GMT 2025
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.sun.org.apache.xerces.internal.dom.DocumentImpl;
import java.io.Reader;
import java.io.StringReader;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import javax.imageio.metadata.IIOMetadataNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.W3CDom;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.XmlDeclaration;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class W3CDom_ESTest extends W3CDom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Document document0 = Parser.parse("", "V5");
      Document document1 = document0.clone();
      Element element0 = document1.attr("http://www.w3.org/1998/Math/MathML", "http://www.w3.org/2000/svg");
      W3CDom w3CDom0 = new W3CDom();
      Element element1 = document0.prependChild(element0);
      w3CDom0.fromJsoup(element1);
      assertTrue(w3CDom0.namespaceAware());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Element element0 = new Element("jsoupSource", "javax.xml.xpath.XPathFactory:jsoup");
      Document document0 = new Document("javax.xml.xpath.XPathFactory:jsoup");
      element0.prependChild(document0);
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Element) document0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Document document0 = Parser.parse("", "V5");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      w3CDom_W3CBuilder0.tail(document0, 88);
      assertEquals(Document.QuirksMode.quirks, document0.quirksMode());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.head(document0, 0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("javax.xml.xpath.XPathFactory:jsoup");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      w3CDom0.selectXpath("jsoupSource", document1);
      assertTrue(w3CDom0.namespaceAware());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attributes attributes0 = new Attributes();
      Map<String, String> map0 = attributes0.dataset();
      Properties properties0 = W3CDom.propertiesFromMap(map0);
      assertEquals(0, properties0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.namespaceAware(true);
      assertTrue(w3CDom0.namespaceAware());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Class<Document> class0 = Document.class;
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("jsoupSource");
      NodeList nodeList0 = iIOMetadataNode0.getElementsByTagName("jsoupSource");
      // Undeclared exception!
      try { 
        w3CDom0.sourceNodes(nodeList0, class0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // Method not supported
         //
         verifyException("javax.imageio.metadata.IIOMetadataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Class<DocumentType> class0 = DocumentType.class;
      // Undeclared exception!
      try { 
        w3CDom0.sourceNodes((NodeList) null, class0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
      Class<XmlDeclaration> class0 = XmlDeclaration.class;
      // Undeclared exception!
      try { 
        w3CDom0.sourceNodes((NodeList) iIOMetadataNode0, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      // Undeclared exception!
      try { 
        w3CDom0.selectXpath("-", (Node) iIOMetadataNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not evaluate XPath query [-]: javax.xml.transform.TransformerException: A location path was expected, but the end of the XPath expression was found instead.
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.selectXpath("jsoupSource", (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'contextNode' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("javax.xml.xpath.XPathFactory:jsoup");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.selectXpath("2", document1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not evaluate XPath query [2]: com.sun.org.apache.xpath.internal.XPathException: Can not convert #NUMBER to a NodeList!
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        W3CDom.propertiesFromMap((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Hashtable", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Element element0 = new Element("xmlns", "org.jsoup.nodes.Entities");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(element0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Element) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Element element0 = new Element("jsoupSource", "javax.xml.xpath.XPathFactory:jsoup");
      element0.prependChild(element0);
      // Undeclared exception!
      w3CDom0.fromJsoup(element0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Element element0 = new Element("javax.xml.xpath.XPathFactory:jsoup", "javax.xml.xpath.XPathFactory:jsoup");
      w3CDom0.factory = null;
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("=68QmV3%[sf)G~");
      document0.prependElement("::/~/%3V}");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("jsoupSource", "javax.xml.xpath.XPathFactory:jsoup");
      document0.prependChild(document0);
      // Undeclared exception!
      w3CDom0.fromJsoup(document0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      w3CDom0.factory = null;
      Document document0 = Parser.parse("jsoupSource", "jsoupSource");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("jsoupSource");
      // Undeclared exception!
      try { 
        w3CDom0.fromJsoup(document0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.convert((Element) null, (org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom$W3CBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Element element0 = new Element("javax.xml.xpath.XPathFactory:jsoup");
      org.w3c.dom.Document document0 = w3CDom0.fromJsoup(element0);
      // Undeclared exception!
      try { 
        w3CDom0.convert((Document) null, document0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        W3CDom.convert((Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Document document0 = Document.createShell("");
      document0.appendChild(document0);
      // Undeclared exception!
      W3CDom.convert(document0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Document document0 = new Document("*zHMY,@{AzE8{");
      // Undeclared exception!
      try { 
        W3CDom.convert(document0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.contextNode((org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Document document0 = Document.createShell("554\"");
      W3CDom w3CDom0 = new W3CDom();
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("", true);
      Map<String, String> map0 = attributes1.dataset();
      // Undeclared exception!
      try { 
        W3CDom.asString(document1, map0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      HashMap<String, String> hashMap0 = W3CDom.OutputHtml();
      hashMap0.put("", "FS");
      // Undeclared exception!
      try { 
        W3CDom.asString((org.w3c.dom.Document) null, (Map<String, String>) hashMap0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<String, String> hashMap0 = W3CDom.OutputHtml();
      // Undeclared exception!
      try { 
        W3CDom.asString((org.w3c.dom.Document) null, (Map<String, String>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.asString((org.w3c.dom.Document) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.W3CDom", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = new Document("javax.xml.xpath.XPathFactory:jsoup");
      Document document1 = Parser.parse("e93?", "&f:_3v-DWZ");
      org.w3c.dom.Document document2 = W3CDom.convert(document1);
      // Undeclared exception!
      try { 
        w3CDom0.convert((Element) document0, document2);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("", "");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup((Element) document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert((Element) document0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Tag tag0 = new Tag("s#A4<>v~!I!6^W3m");
      Element element0 = new Element(tag0, "org.jsoup.helper.W3CDom$W3CBuilder");
      Document document0 = Document.createShell("javax.xml.xpath.XPathFactory:jsoup");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(element0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("<!DOCTYPE", "javax.xml.xpath.XPathFactory:jsoup");
      w3CDom0.fromJsoup((Element) document0);
      assertTrue(w3CDom0.namespaceAware());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse(")S", "jsoupSource");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      String string0 = W3CDom.asString(document1, (Map<String, String>) null);
      assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\"?><html xmlns=\"http://www.w3.org/1999/xhtml\"><head/><body>)S</body></html>", string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Document document0 = Parser.parse("", "V5");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("xmlns");
      Document document2 = parser0.parseInput((Reader) stringReader0, "$.|O:LS7]cD\u0001o5k\"5h");
      Element element0 = document2.attr("http://www.w3.org/1998/Math/MathML", "http://www.w3.org/2000/svg");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.traverse(element0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("javax.xml.xpath.XPathFactory:jsoup", "xmlns:");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      document0.attr("xmlns:", "xmlns:");
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.traverse(document0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("javax.xml.xpath.XPathFactory:jsoup", "xmlns:");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      Element element0 = document0.id("javax.xml.xpath.XPathFactory:jsoup");
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.traverse(element0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      assertTrue(w3CDom0.namespaceAware());
      
      Element element0 = new Element("jsoupSource", "jsoupSource");
      element0.addClass("jsoupSource");
      W3CDom w3CDom1 = w3CDom0.namespaceAware(false);
      w3CDom1.fromJsoup(element0);
      assertFalse(w3CDom0.namespaceAware());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("javax.xml.xpath.XPathFactory:jsoup", "javax.xml.xpath.XPathFactory:jsoup");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      Element element0 = document0.attr("520&v[}X+}:5ZJj 0", "jsoupSource");
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.traverse(element0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("javax.xml.xpath.XPathFactory:jsoup");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      DocumentType documentType0 = new DocumentType("jsoupSource", "&", "jsoupSource");
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      w3CDom_W3CBuilder0.traverse(documentType0);
      assertTrue(w3CDom0.namespaceAware());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("jsoupSource", "javax.xml.xpath.XPathFactory:jsoup");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      DataNode dataNode0 = new DataNode("javax.xml.xpath.XPathFactory:jsoup");
      W3CDom.W3CBuilder w3CDom_W3CBuilder0 = new W3CDom.W3CBuilder(document1);
      // Undeclared exception!
      try { 
        w3CDom_W3CBuilder0.traverse(dataNode0);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Document document0 = Parser.parseBodyFragment("<!DOCMTYPE", "<!DOCMTYPE");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      assertNotNull(document1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      assertTrue(w3CDom0.namespaceAware());
      
      Element element0 = new Element("javax.xml.xpath.XPathFactory:jsoup");
      W3CDom w3CDom1 = w3CDom0.namespaceAware(false);
      w3CDom1.fromJsoup(element0);
      assertFalse(w3CDom0.namespaceAware());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Document.createShell("javax.xml.xpath.XPathFactory:jsoup");
      DocumentImpl documentImpl0 = (DocumentImpl)w3CDom0.fromJsoup(document0);
      Class<FormElement> class0 = FormElement.class;
      w3CDom0.sourceNodes((NodeList) documentImpl0, class0);
      assertTrue(w3CDom0.namespaceAware());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("jsoupSource", "jsoupSource");
      DocumentImpl documentImpl0 = (DocumentImpl)w3CDom0.fromJsoup(document0);
      Class<Element> class0 = Element.class;
      List<Element> list0 = w3CDom0.sourceNodes((NodeList) documentImpl0, class0);
      assertTrue(w3CDom0.namespaceAware());
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("jsoupSource", "jsoupSource");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      Document document2 = document0.shallowClone();
      // Undeclared exception!
      try { 
        w3CDom0.convert(document2, document1);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      HashMap<String, String> hashMap0 = W3CDom.OutputHtml();
      hashMap0.put("jsoupSource", "javax.xml.xpath.XPathFactory:jsoup");
      // Undeclared exception!
      try { 
        W3CDom.asString((org.w3c.dom.Document) null, (Map<String, String>) hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      boolean boolean0 = w3CDom0.namespaceAware();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("jsoupSource", "jsoupSource");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      // Undeclared exception!
      try { 
        w3CDom0.convert(document0, document1);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      HashMap<String, String> hashMap0 = W3CDom.OutputXml();
      Properties properties0 = W3CDom.propertiesFromMap(hashMap0);
      assertEquals(1, properties0.size());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      // Undeclared exception!
      try { 
        w3CDom0.selectXpath("z4oSaE[\")", (org.w3c.dom.Document) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The parameter 'contextNode' must not be null.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      assertTrue(w3CDom0.namespaceAware());
      
      W3CDom w3CDom1 = w3CDom0.namespaceAware(false);
      boolean boolean0 = w3CDom1.namespaceAware();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parse("javax.xml.xpath.xpathfactory", "javax.xml.xpath.xpathfactory");
      org.w3c.dom.Document document1 = W3CDom.convert(document0);
      Node node0 = w3CDom0.contextNode(document1);
      assertNotNull(node0);
      
      w3CDom0.selectXpath("javax.xml.xpath.xpathfactory", node0);
      assertTrue(w3CDom0.namespaceAware());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      W3CDom w3CDom0 = new W3CDom();
      Document document0 = Parser.parseBodyFragment("jsoupSource", "jsoupSource");
      org.w3c.dom.Document document1 = w3CDom0.fromJsoup(document0);
      w3CDom0.asString(document1);
  }
}
