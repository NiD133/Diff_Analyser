/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 17:15:01 GMT 2025
 */

package org.jfree.chart.title;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.time.chrono.ChronoLocalDate;
import java.time.chrono.JapaneseDate;
import java.util.Calendar;
import java.util.List;
import javax.swing.JTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.block.Size2D;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.SpiderWebPlot;
import org.jfree.chart.plot.pie.PiePlot;
import org.jfree.chart.title.ShortTextTitle;
import org.jfree.chart.title.Title;
import org.jfree.data.Range;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultStatisticalCategoryDataset;
import org.jfree.data.time.TimePeriodAnchor;
import org.jfree.data.time.TimeSeries;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShortTextTitle_ESTest extends ShortTextTitle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      CombinedDomainXYPlot<ChronoLocalDate> combinedDomainXYPlot0 = new CombinedDomainXYPlot<ChronoLocalDate>();
      JFreeChart jFreeChart0 = new JFreeChart("", combinedDomainXYPlot0);
      List<Title> list0 = List.of((Title) shortTextTitle0);
      jFreeChart0.setSubtitles(list0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10, (ChartRenderingInfo) null);
      assertEquals(1, bufferedImage0.getTileWidth());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle(".p.");
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(90.0, 3.4028234663852886E38);
      Size2D size2D0 = shortTextTitle0.arrangeRR(graphics2D0, cyclicNumberAxis0.DEFAULT_RANGE, (Range) null);
      assertEquals("Size2D[width=0.0, height=0.0]", size2D0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("Not yet implemented.");
      CombinedDomainXYPlot<ChronoLocalDate> combinedDomainXYPlot0 = new CombinedDomainXYPlot<ChronoLocalDate>();
      JFreeChart jFreeChart0 = new JFreeChart((String) null, combinedDomainXYPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(1, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Range range0 = new Range(229.0, 913.12026869883);
      Size2D size2D0 = shortTextTitle0.arrangeRR(graphics2D0, range0, range0);
      assertEquals(134.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("Polar Zoom Out");
      PiePlot<ChronoLocalDate> piePlot0 = new PiePlot<ChronoLocalDate>();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 28);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Size2D size2D0 = shortTextTitle0.arrangeNN(graphics2D0);
      assertEquals(98.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Size2D size2D0 = shortTextTitle0.arrangeNN(graphics2D0);
      assertEquals(15.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("org.jfree.chart.legend.LegendTitle");
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Size2D size2D0 = shortTextTitle0.arrangeFN(graphics2D0, 0.08);
      assertEquals("Size2D[width=0.0, height=0.0]", size2D0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      Size2D size2D0 = shortTextTitle0.arrangeFN(graphics2D0, 0.4);
      assertEquals(0.4, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Range range0 = new Range(1.0F, 10);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, range0);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("U");
      Size2D size2D0 = shortTextTitle0.arrange(graphics2D0, rectangleConstraint0);
      assertEquals(0.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("U");
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultBoxAndWhiskerCategoryDataset<ChronoLocalDate, ChronoLocalDate> defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset<ChronoLocalDate, ChronoLocalDate>();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, range0);
      shortTextTitle0.setMargin((-2187.894), 0.08, 17.0, 0.08);
      Size2D size2D0 = shortTextTitle0.arrange(graphics2D0, rectangleConstraint0);
      assertEquals((-2153.894), size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("org.jfree.chart.block.BorderArrangement");
      // Undeclared exception!
      try { 
        shortTextTitle0.draw((Graphics2D) null, (Rectangle2D) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("A'.f!");
      // Undeclared exception!
      try { 
        shortTextTitle0.arrangeRR((Graphics2D) null, range0, range0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("Fe`R4/pOsm9");
      // Undeclared exception!
      try { 
        shortTextTitle0.arrangeRN((Graphics2D) null, (Range) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("%gR`.z;.\"}^I4',fXd{");
      // Undeclared exception!
      try { 
        shortTextTitle0.arrangeNN((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("Polar Zoom Out");
      // Undeclared exception!
      try { 
        shortTextTitle0.arrangeFN((Graphics2D) null, (-1393.4121));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("org.jfree.chart.annotations.XYShapeAnnotation");
      // Undeclared exception!
      try { 
        shortTextTitle0.arrange((Graphics2D) null, (RectangleConstraint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'c' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = null;
      try {
        shortTextTitle0 = new ShortTextTitle((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'text' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("Polar Zoom Out");
      PiePlot<ChronoLocalDate> piePlot0 = new PiePlot<ChronoLocalDate>();
      JFreeChart jFreeChart0 = new JFreeChart(piePlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 28);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1.0, 98.0, 90.0, 1076.462779136287);
      Object object0 = new Object();
      shortTextTitle0.draw(graphics2D0, (Rectangle2D) rectangle2D_Double0, object0);
      assertEquals(1074.462779136287, rectangle2D_Double0.height, 0.01);
      assertEquals(99.0, rectangle2D_Double0.getMinY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle(".p.");
      DefaultStatisticalCategoryDataset<JTable.PrintMode, JTable.PrintMode> defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset<JTable.PrintMode, JTable.PrintMode>();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(".p.", spiderWebPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      JapaneseDate japaneseDate0 = MockJapaneseDate.now();
      TimeSeries<ChronoLocalDate> timeSeries0 = new TimeSeries<ChronoLocalDate>(japaneseDate0);
      Range range0 = new Range((-1.0), 0.1);
      TimePeriodAnchor timePeriodAnchor0 = TimePeriodAnchor.END;
      Calendar calendar0 = MockCalendar.getInstance();
      Range range1 = timeSeries0.findValueRange(range0, timePeriodAnchor0, calendar0);
      Size2D size2D0 = shortTextTitle0.arrangeRN(graphics2D0, range1);
      assertEquals(14.0, size2D0.width, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Range range0 = ValueAxis.DEFAULT_RANGE;
      Size2D size2D0 = shortTextTitle0.arrangeRN(graphics2D0, range0);
      assertEquals(15.0, size2D0.height, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle(".p.");
      DefaultStatisticalCategoryDataset<JTable.PrintMode, JTable.PrintMode> defaultStatisticalCategoryDataset0 = new DefaultStatisticalCategoryDataset<JTable.PrintMode, JTable.PrintMode>();
      SpiderWebPlot spiderWebPlot0 = new SpiderWebPlot(defaultStatisticalCategoryDataset0);
      JFreeChart jFreeChart0 = new JFreeChart(".p.", spiderWebPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (ChartRenderingInfo) null);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Range range0 = new Range((-1.0), 0.1);
      Size2D size2D0 = shortTextTitle0.arrangeRN(graphics2D0, range0);
      assertEquals("Size2D[width=0.0, height=0.0]", size2D0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(1, 1, 1);
      Font font0 = new Font("y>OwYa{2LeD)?\"", 1, 2121918366);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("y>OwYa{2LeD)?\"");
      shortTextTitle0.setFont(font0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      Size2D size2D0 = shortTextTitle0.arrange(graphics2D0);
      assertEquals(0.0, size2D0.getWidth(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-158L), (-158L));
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("Not yet implemented.");
      // Undeclared exception!
      try { 
        shortTextTitle0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(3.4028234663852886E38, 3.4028234663852886E38);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("k");
      RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toUnconstrainedHeight();
      // Undeclared exception!
      try { 
        shortTextTitle0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, 838.5372107469134);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("iT/Ila@nrA+L");
      // Undeclared exception!
      try { 
        shortTextTitle0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Range range0 = ValueAxis.DEFAULT_RANGE;
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, 838.5372107469134);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toUnconstrainedHeight();
      // Undeclared exception!
      try { 
        shortTextTitle0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((-3132.55), (Range) null);
      // Undeclared exception!
      try { 
        shortTextTitle0.arrange((Graphics2D) null, rectangleConstraint0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint((Range) null, (Range) null);
      RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toUnconstrainedWidth();
      // Undeclared exception!
      try { 
        shortTextTitle0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(838.5372107469134, 838.5372107469134);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("");
      RectangleConstraint rectangleConstraint1 = rectangleConstraint0.toUnconstrainedWidth();
      // Undeclared exception!
      try { 
        shortTextTitle0.arrange((Graphics2D) null, rectangleConstraint1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not yet implemented.
         //
         verifyException("org.jfree.chart.title.ShortTextTitle", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BufferedImage bufferedImage0 = new BufferedImage(10, 10, 10);
      ShortTextTitle shortTextTitle0 = new ShortTextTitle("U");
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      DefaultBoxAndWhiskerCategoryDataset<ChronoLocalDate, ChronoLocalDate> defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset<ChronoLocalDate, ChronoLocalDate>();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(true);
      RectangleConstraint rectangleConstraint0 = new RectangleConstraint(range0, range0);
      Size2D size2D0 = shortTextTitle0.arrange(graphics2D0, rectangleConstraint0);
      assertEquals(11.0, size2D0.width, 0.01);
  }
}
