package com.google.gson.internal.bind;

import com.google.gson.JsonNull;
import org.junit.Test;

import java.io.IOException;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

/**
 * Contains tests for the {@link JsonTreeReader} class.
 * Note: The original test class name `JsonTreeReader_ESTestTest67`
 * suggests it was generated by a tool. A more conventional name would be `JsonTreeReaderTest`.
 */
public class JsonTreeReader_ESTestTest67 {

    /**
     * Verifies that attempting to read another element after the entire JSON tree
     * has been consumed results in an IllegalStateException.
     */
    @Test
    public void nextJsonElement_atEndOfDocument_throwsIllegalStateException() throws IOException {
        // Arrange: Create a reader for a simple JSON document containing only a null value.
        JsonTreeReader reader = new JsonTreeReader(JsonNull.INSTANCE);

        // Act: Consume the single element in the document, advancing the reader to the end.
        reader.nextNull();

        // Assert: Attempting to read past the end of the document should throw an exception.
        try {
            reader.nextJsonElement();
            fail("Expected an IllegalStateException to be thrown when reading past the end of the document.");
        } catch (IllegalStateException expected) {
            // Verify that the exception message is correct.
            assertEquals("Unexpected END_DOCUMENT when reading a JsonElement.", expected.getMessage());
        }
    }
}