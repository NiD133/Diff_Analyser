/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 23 14:39:19 GMT 2025
 */

package org.apache.ibatis.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Array;
import java.sql.CallableStatement;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Time;
import java.sql.Timestamp;
import java.time.Instant;
import java.time.LocalDate;
import java.time.Month;
import org.apache.ibatis.type.ArrayTypeHandler;
import org.apache.ibatis.type.JdbcType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArrayTypeHandler_ESTest extends ArrayTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      Object object0 = arrayTypeHandler0.extractArray((Array) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      Month month0 = Month.JANUARY;
      LocalDate localDate0 = MockLocalDate.of(1, month0, 1);
      Date date0 = Date.valueOf(localDate0);
      Array array0 = mock(Array.class, new ViolatedAssumptionAnswer());
      doReturn(date0).when(array0).getArray();
      Object object0 = arrayTypeHandler0.extractArray(array0);
      assertSame(date0, object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      Time time0 = new Time(226);
      JdbcType jdbcType0 = JdbcType.BINARY;
      // Undeclared exception!
      try { 
        arrayTypeHandler0.setNonNullParameter(preparedStatement0, 1577, time0, jdbcType0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // ArrayType Handler requires SQL array or java array parameter and does not support type class java.sql.Time
         //
         verifyException("org.apache.ibatis.type.ArrayTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JdbcType jdbcType0 = JdbcType.TIMESTAMP;
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      // Undeclared exception!
      try { 
        arrayTypeHandler0.setNonNullParameter((PreparedStatement) null, 9, (Object) null, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.type.ArrayTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      // Undeclared exception!
      try { 
        arrayTypeHandler0.resolveTypeName((Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      // Undeclared exception!
      try { 
        arrayTypeHandler0.getNullableResult((CallableStatement) null, 2638);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.type.ArrayTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      CallableStatement callableStatement0 = mock(CallableStatement.class, new ViolatedAssumptionAnswer());
      doReturn((Array) null).when(callableStatement0).getArray(anyInt());
      Object object0 = arrayTypeHandler0.getNullableResult(callableStatement0, 1577);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      // Undeclared exception!
      try { 
        arrayTypeHandler0.getNullableResult((ResultSet) null, "4i.1>=ua+");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.type.ArrayTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      Class<java.util.Date> class0 = java.util.Date.class;
      String string0 = arrayTypeHandler0.resolveTypeName(class0);
      assertEquals("TIMESTAMP", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      // Undeclared exception!
      try { 
        arrayTypeHandler0.getNullableResult((ResultSet) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.type.ArrayTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayTypeHandler arrayTypeHandler0 = new ArrayTypeHandler();
      Instant instant0 = MockInstant.ofEpochSecond((long) (-1314), 0L);
      Timestamp timestamp0 = Timestamp.from(instant0);
      Array array0 = mock(Array.class, new ViolatedAssumptionAnswer());
      doReturn(timestamp0).when(array0).getArray();
      CallableStatement callableStatement0 = mock(CallableStatement.class, new ViolatedAssumptionAnswer());
      doReturn(array0).when(callableStatement0).getArray(anyInt());
      Timestamp timestamp1 = (Timestamp)arrayTypeHandler0.getNullableResult(callableStatement0, (-1314));
      assertEquals(0, timestamp1.getNanos());
  }
}
