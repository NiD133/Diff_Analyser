/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 15:35:06 GMT 2025
 */

package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.cli.DeprecatedAttributes;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DeprecatedAttributes_ESTest extends DeprecatedAttributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DeprecatedAttributes.Builder deprecatedAttributes_Builder0 = DeprecatedAttributes.builder();
      deprecatedAttributes_Builder0.setForRemoval(true);
      DeprecatedAttributes deprecatedAttributes0 = deprecatedAttributes_Builder0.get();
      boolean boolean0 = deprecatedAttributes0.isForRemoval();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DeprecatedAttributes.Builder deprecatedAttributes_Builder0 = DeprecatedAttributes.builder();
      DeprecatedAttributes.Builder deprecatedAttributes_Builder1 = deprecatedAttributes_Builder0.setSince("+,ygu");
      DeprecatedAttributes deprecatedAttributes0 = deprecatedAttributes_Builder1.get();
      String string0 = deprecatedAttributes0.getSince();
      assertEquals("", deprecatedAttributes0.getDescription());
      assertFalse(deprecatedAttributes0.isForRemoval());
      assertEquals("+,ygu", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DeprecatedAttributes.Builder deprecatedAttributes_Builder0 = DeprecatedAttributes.builder();
      deprecatedAttributes_Builder0.setDescription("RSb&;Wj}.&C.b S?5");
      DeprecatedAttributes deprecatedAttributes0 = deprecatedAttributes_Builder0.get();
      String string0 = deprecatedAttributes0.getDescription();
      assertEquals("", deprecatedAttributes0.getSince());
      assertFalse(deprecatedAttributes0.isForRemoval());
      assertEquals("RSb&;Wj}.&C.b S?5", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DeprecatedAttributes.Builder deprecatedAttributes_Builder0 = DeprecatedAttributes.builder();
      deprecatedAttributes_Builder0.setSince("x-qz[]");
      DeprecatedAttributes deprecatedAttributes0 = deprecatedAttributes_Builder0.get();
      String string0 = deprecatedAttributes0.toString();
      assertEquals("Deprecated since x-qz[]", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DeprecatedAttributes.Builder deprecatedAttributes_Builder0 = DeprecatedAttributes.builder();
      deprecatedAttributes_Builder0.setForRemoval(true);
      DeprecatedAttributes deprecatedAttributes0 = deprecatedAttributes_Builder0.get();
      String string0 = deprecatedAttributes0.toString();
      assertEquals("Deprecated for removal", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DeprecatedAttributes deprecatedAttributes0 = DeprecatedAttributes.DEFAULT;
      String string0 = deprecatedAttributes0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DeprecatedAttributes deprecatedAttributes0 = DeprecatedAttributes.DEFAULT;
      boolean boolean0 = deprecatedAttributes0.isForRemoval();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DeprecatedAttributes deprecatedAttributes0 = DeprecatedAttributes.DEFAULT;
      String string0 = deprecatedAttributes0.getSince();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DeprecatedAttributes.Builder deprecatedAttributes_Builder0 = DeprecatedAttributes.builder();
      deprecatedAttributes_Builder0.setDescription(",");
      DeprecatedAttributes deprecatedAttributes0 = deprecatedAttributes_Builder0.get();
      String string0 = deprecatedAttributes0.toString();
      assertEquals("Deprecated: ,", string0);
      assertEquals(",", deprecatedAttributes0.getDescription());
  }
}
