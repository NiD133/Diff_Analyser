/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 23 14:15:42 GMT 2025
 */

package org.apache.ibatis.cache;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.ibatis.cache.CacheKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CacheKey_ESTest extends CacheKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      CacheKey cacheKey1 = new CacheKey();
      assertTrue(cacheKey1.equals((Object)cacheKey0));
      
      cacheKey1.update(cacheKey0);
      boolean boolean0 = cacheKey0.equals(cacheKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      Object object0 = new Object();
      cacheKey0.update(object0);
      int int0 = cacheKey0.getUpdateCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      // Undeclared exception!
      try { 
        cacheKey0.updateAll((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.cache.CacheKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CacheKey cacheKey0 = null;
      try {
        cacheKey0 = new CacheKey((Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.ibatis.cache.CacheKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      Object[] objectArray0 = new Object[7];
      cacheKey0.updateAll(objectArray0);
      assertEquals(7, cacheKey0.getUpdateCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      cacheKey0.update((Object) null);
      assertEquals(1, cacheKey0.getUpdateCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      objectArray0[2] = (Object) cacheKey0;
      CacheKey cacheKey1 = new CacheKey(objectArray0);
      boolean boolean0 = cacheKey1.equals(objectArray0[2]);
      assertEquals(5, cacheKey1.getUpdateCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      Object[] objectArray0 = new Object[0];
      CacheKey cacheKey1 = new CacheKey(objectArray0);
      assertTrue(cacheKey1.equals((Object)cacheKey0));
      
      cacheKey1.update(cacheKey1);
      boolean boolean0 = cacheKey1.equals(cacheKey0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      boolean boolean0 = cacheKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      boolean boolean0 = cacheKey0.equals(cacheKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      Object[] objectArray0 = new Object[0];
      CacheKey cacheKey1 = new CacheKey(objectArray0);
      boolean boolean0 = cacheKey1.equals(cacheKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      CacheKey cacheKey0 = new CacheKey(objectArray0);
      // Undeclared exception!
      try { 
        cacheKey0.NULL_CACHE_KEY.updateAll(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not allowed to update a null cache key instance.
         //
         verifyException("org.apache.ibatis.cache.CacheKey$1", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      cacheKey0.update(cacheKey0);
      CacheKey cacheKey1 = cacheKey0.clone();
      boolean boolean0 = cacheKey0.equals(cacheKey1);
      assertNotSame(cacheKey1, cacheKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      cacheKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      CacheKey cacheKey1 = cacheKey0.clone();
      assertNotSame(cacheKey1, cacheKey0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      String string0 = cacheKey0.toString();
      assertEquals("17:0", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CacheKey cacheKey0 = new CacheKey();
      int int0 = cacheKey0.getUpdateCount();
      assertEquals(0, int0);
  }
}
