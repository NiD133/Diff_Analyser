package org.jfree.chart;

import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

/**
 * This test class focuses on verifying the behavior of the ChartRenderingInfo class.
 * The original test class name `ChartRenderingInfo_ESTestTest2` and its inheritance
 * from `ChartRenderingInfo_ESTest_scaffolding` suggest it was generated by a tool
 * like EvoSuite. The tests have been refactored for clarity and maintainability.
 */
public class ChartRenderingInfo_ESTestTest2 extends ChartRenderingInfo_ESTest_scaffolding {

    /**
     * Verifies that modifications to the PlotRenderingInfo object obtained from a
     * ChartRenderingInfo instance are correctly reflected.
     *
     * This test ensures that when a subplot is added to the PlotRenderingInfo,
     * its internal subplot count is updated, confirming that getPlotInfo() returns a
     * live, mutable object rather than a defensive copy.
     */
    @Test
    public void getPlotInfo_whenSubplotIsAdded_updatesSubplotCount() {
        // Arrange: Create a ChartRenderingInfo instance and retrieve its associated PlotRenderingInfo.
        ChartRenderingInfo chartInfo = new ChartRenderingInfo(new StandardEntityCollection());
        PlotRenderingInfo plotInfo = chartInfo.getPlotInfo();

        // Act: Add the plot's own info as a subplot to itself.
        // This is a simple way to test the list management without creating a new object.
        plotInfo.addSubplotInfo(plotInfo);

        // Assert: The subplot count should now be 1.
        assertEquals("The subplot count should be 1 after adding one subplot.", 1, plotInfo.getSubplotCount());
    }
}