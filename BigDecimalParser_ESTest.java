/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 23 13:28:12 GMT 2025
 */

package com.fasterxml.jackson.core.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.io.BigDecimalParser;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(
    mockJVMNonDeterminism = true,
    useVFS = true,
    useVNET = true,
    resetStaticState = true,
    separateClassLoader = true
)
public class BigDecimalParser_ESTest extends BigDecimalParser_ESTest_scaffolding {

    // Tests for parsing valid numeric representations
    @Test(timeout = 4000)
    public void parseSingleDigitFromCharArray() throws Throwable {
        char[] input = new char[9];
        input[1] = '2';
        BigDecimal result = BigDecimalParser.parse(input, 1, 1);
        assertEquals(2, result.shortValue());
    }

    @Test(timeout = 4000)
    public void parseNegativeZeroFromCharArray() throws Throwable {
        char[] input = new char[]{'-', '0'};
        BigDecimal result = BigDecimalParser.parse(input);
        assertEquals(0, result.shortValue());
    }

    @Test(timeout = 4000)
    public void parseSingleDigitFourFromCharArray() throws Throwable {
        char[] input = new char[]{'4'};
        BigDecimal result = BigDecimalParser.parse(input);
        assertEquals(4, result.byteValue());
    }

    @Test(timeout = 4000)
    public void parseExponentialNotationFromCharArray() throws Throwable {
        char[] input = new char[]{'2', 'E', '2'};
        BigDecimal result = BigDecimalParser.parse(input);
        assertEquals(-56, result.byteValue()); // 2E2 = 200, byteValue() truncates to -56
    }

    @Test(timeout = 4000)
    public void parseSingleDigitString() throws Throwable {
        BigDecimal result = BigDecimalParser.parse("8");
        assertEquals(8, result.byteValue());
    }

    @Test(timeout = 4000)
    public void parseExponentialNotationString() throws Throwable {
        BigDecimal result = BigDecimalParser.parse("7e2");
        assertEquals(700, result.shortValue());
    }

    @Test(timeout = 4000)
    public void parseDotOneString() throws Throwable {
        BigDecimal result = BigDecimalParser.parse(".1");
        assertEquals(0, result.byteValue()); // 0.1 truncates to 0 in byte
    }

    // Tests for expected exceptions during parsing
    @Test(timeout = 4000)
    public void parseNegativeOffsetThrowsNoClassDefError() throws Throwable {
        char[] input = new char[1];
        try {
            BigDecimalParser.parse(input, -1747, 771);
            fail("Expecting exception: NoClassDefFoundError");
        } catch (NoClassDefFoundError e) {
            verifyException("com.fasterxml.jackson.core.io.BigDecimalParser", e);
        }
    }

    @Test(timeout = 4000)
    public void parseEmptyCharArrayThrowsNumberFormatException() throws Throwable {
        char[] input = new char[1];
        try {
            BigDecimalParser.parse(input, 0, 0);
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
            verifyException("com.fasterxml.jackson.core.io.BigDecimalParser", e);
        }
    }

    @Test(timeout = 4000)
    public void parseNullCharArrayThrowsNullPointerException() throws Throwable {
        try {
            BigDecimalParser.parse((char[]) null, 486, 486);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            verifyException("java.math.BigDecimal", e);
        }
    }

    @Test(timeout = 4000)
    public void parseNullCharArrayWithoutOffsetThrowsNullPointerException() throws Throwable {
        try {
            BigDecimalParser.parse((char[]) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            verifyException("com.fasterxml.jackson.core.io.BigDecimalParser", e);
        }
    }

    @Test(timeout = 4000)
    public void parseNullStringThrowsNullPointerException() throws Throwable {
        try {
            BigDecimalParser.parse((String) null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            verifyException("com.fasterxml.jackson.core.io.BigDecimalParser", e);
        }
    }

    @Test(timeout = 4000)
    public void parseInvalidLengthThrowsIndexException() throws Throwable {
        char[] input = new char[0];
        try {
            BigDecimalParser.parse(input, 265, 265);
            fail("Expecting exception: StringIndexOutOfBoundsException");
        } catch (StringIndexOutOfBoundsException e) {
            // Expected
        }
    }

    @Test(timeout = 4000)
    public void parseInvalidStringThrowsNumberFormatException() throws Throwable {
        try {
            BigDecimalParser.parse("eA8ojpN");
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
            verifyException("com.fasterxml.jackson.core.io.BigDecimalParser", e);
        }
    }

    @Test(timeout = 4000)
    public void parseEmptyCharArrayWithLargeOffsetThrowsNoClassDefError() throws Throwable {
        char[] input = new char[0];
        try {
            BigDecimalParser.parse(input, 500, 500);
            fail("Expecting exception: NoClassDefFoundError");
        } catch (NoClassDefFoundError e) {
            verifyException("com.fasterxml.jackson.core.io.BigDecimalParser", e);
        }
    }

    @Test(timeout = 4000)
    public void parseWithFastParserNegativeLengthThrowsNoClassDefError() throws Throwable {
        char[] input = new char[6];
        try {
            BigDecimalParser.parseWithFastParser(input, 1754, -2552);
            fail("Expecting exception: NoClassDefFoundError");
        } catch (NoClassDefFoundError e) {
            verifyException("com.fasterxml.jackson.core.io.BigDecimalParser", e);
        }
    }

    @Test(timeout = 4000)
    public void parseWithFastParserEmptyStringThrowsNoClassDefError() throws Throwable {
        try {
            BigDecimalParser.parseWithFastParser("");
            fail("Expecting exception: NoClassDefFoundError");
        } catch (NoClassDefFoundError e) {
            verifyException("com.fasterxml.jackson.core.io.BigDecimalParser", e);
        }
    }

    @Test(timeout = 4000)
    public void parseNullCharArrayThrowsNumberFormatException() throws Throwable {
        char[] input = new char[3]; // Defaults to null chars
        try {
            BigDecimalParser.parse(input);
            fail("Expecting exception: NumberFormatException");
        } catch (NumberFormatException e) {
            verifyException("com.fasterxml.jackson.core.io.BigDecimalParser", e);
        }
    }
}