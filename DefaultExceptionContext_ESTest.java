/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 18 20:23:23 GMT 2025
 */

package org.apache.commons.lang3.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Set;
import org.apache.commons.lang3.exception.DefaultExceptionContext;
import org.apache.commons.lang3.tuple.Pair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultExceptionContext_ESTest extends DefaultExceptionContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.addContextValue("\t[", "\t[");
      Object object0 = defaultExceptionContext1.getFirstContextValue("\t[");
      assertEquals("\t[", object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.addContextValue("\t[", "\t[");
      Set<String> set0 = defaultExceptionContext1.getContextLabels();
      assertFalse(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.addContextValue("\t[", "\t[");
      List<Pair<String, Object>> list0 = defaultExceptionContext1.getContextEntries();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      DefaultExceptionContext defaultExceptionContext1 = defaultExceptionContext0.setContextValue((String) null, (Object) null);
      String string0 = defaultExceptionContext1.getFormattedExceptionMessage((String) null);
      assertEquals("Exception Context:\n\t[1:null=null]\n---------------------------------", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      String string0 = defaultExceptionContext0.getFormattedExceptionMessage("Ikm:Ms");
      assertEquals("Ikm:Ms", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      String string0 = defaultExceptionContext0.getFormattedExceptionMessage((String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      List<Pair<String, Object>> list0 = defaultExceptionContext0.getContextEntries();
      defaultExceptionContext0.setContextValue(",yx", list0);
      // Undeclared exception!
      try { 
        defaultExceptionContext0.getFormattedExceptionMessage(",yx");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      List<Object> list0 = defaultExceptionContext0.getContextValues("tnJ_{Nixtyk");
      assertFalse(list0.contains("tnJ_{Nixtyk"));
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      Set<String> set0 = defaultExceptionContext0.getContextLabels();
      defaultExceptionContext0.addContextValue("=", set0);
      List<Object> list0 = defaultExceptionContext0.getContextValues("=");
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DefaultExceptionContext defaultExceptionContext0 = new DefaultExceptionContext();
      Object object0 = defaultExceptionContext0.getFirstContextValue("6Yh~Lxgr");
      assertNull(object0);
  }
}
