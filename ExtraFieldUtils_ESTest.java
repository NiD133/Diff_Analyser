/*
 * This file was automatically generated by EvoSuite
 * Sun Jul 06 10:53:12 GMT 2025
 */

package org.apache.commons.compress.archivers.zip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.zip.ZipException;
import org.apache.commons.compress.archivers.zip.AsiExtraField;
import org.apache.commons.compress.archivers.zip.ExtraFieldParsingBehavior;
import org.apache.commons.compress.archivers.zip.ExtraFieldUtils;
import org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData;
import org.apache.commons.compress.archivers.zip.X000A_NTFS;
import org.apache.commons.compress.archivers.zip.X0016_CertificateIdForCentralDirectory;
import org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp;
import org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField;
import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;
import org.apache.commons.compress.archivers.zip.ZipEightByteInteger;
import org.apache.commons.compress.archivers.zip.ZipExtraField;
import org.apache.commons.compress.archivers.zip.ZipShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) 
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExtraFieldUtils_ESTest extends ExtraFieldUtils_ESTest_scaffolding {

    // Test exception handling
    @Test(timeout = 4000)
    public void testMergeLocalFileDataDataWithNullInput() throws Throwable {
        // Test that NullPointerException is thrown when input is null
        try {
            ExtraFieldUtils.mergeLocalFileDataData(null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // Expected exception
        }
    }

    @Test(timeout = 4000)
    public void testRegisterNullClass() throws Throwable {
        // Test that NullPointerException is thrown when class is null
        try {
            ExtraFieldUtils.register(null);
            fail("Expecting exception: NullPointerException");
        } catch (NullPointerException e) {
            // Expected exception
        }
    }

    // Test parsing
    @Test(timeout = 4000)
    public void testParseLocalFileData() throws Throwable {
        // Test parsing local file data
        byte[] data = new byte[4];
        ZipExtraField[] extraFields = ExtraFieldUtils.parse(data, true);
        assertEquals(0, extraFields.length);
    }

    @Test(timeout = 4000)
    public void testParseCentralDirectoryData() throws Throwable {
        // Test parsing central directory data
        byte[] data = new byte[4];
        ZipExtraField[] extraFields = ExtraFieldUtils.parse(data, false);
        assertEquals(0, extraFields.length);
    }

    // Test create extra field
    @Test(timeout = 4000)
    public void testCreateExtraField() throws Throwable {
        // Test creating an extra field
        ZipShort headerId = new ZipShort(1);
        ZipExtraField extraField = ExtraFieldUtils.createExtraField(headerId);
        assertNotNull(extraField);
    }

    // Test filling extra field
    @Test(timeout = 4000)
    public void testFillExtraField() throws Throwable {
        // Test filling an extra field
        ZipExtraField extraField = new AsiExtraField();
        byte[] data = new byte[4];
        int off = 0;
        int len = 4;
        boolean local = true;
        ZipExtraField filledExtraField = ExtraFieldUtils.fillExtraField(extraField, data, off, len, local);
        assertNotNull(filledExtraField);
    }

    // Test merging central directory data
    @Test(timeout = 4000)
    public void testMergeCentralDirectoryData() throws Throwable {
        // Test merging central directory data
        ZipExtraField[] extraFields = new ZipExtraField[0];
        byte[] mergedData = ExtraFieldUtils.mergeCentralDirectoryData(extraFields);
        assertEquals(0, mergedData.length);
    }

    // Test merging local file data
    @Test(timeout = 4000)
    public void testMergeLocalFileData() throws Throwable {
        // Test merging local file data
        ZipExtraField[] extraFields = new ZipExtraField[0];
        byte[] mergedData = ExtraFieldUtils.mergeLocalFileDataData(extraFields);
        assertEquals(0, mergedData.length);
    }

    // Test registration
    @Test(timeout = 4000)
    public void testRegisterClass() throws Throwable {
        // Test registering a class
        Class<AsiExtraField> clazz = AsiExtraField.class;
        ExtraFieldUtils.register(clazz);
    }

    // Test parse with different behaviors
    @Test(timeout = 4000)
    public void testParseWithThrowBehavior() throws Throwable {
        // Test parsing with throw behavior
        byte[] data = new byte[4];
        UnparseableExtraFieldData.OnUnparseableExtraField onUnparseableExtraField = UnparseableExtraFieldData.OnUnparseableExtraField.THROW;
        ZipExtraField[] extraFields = ExtraFieldUtils.parse(data, true, onUnparseableExtraField);
        assertEquals(0, extraFields.length);
    }

    @Test(timeout = 4000)
    public void testParseWithSkipBehavior() throws Throwable {
        // Test parsing with skip behavior
        byte[] data = new byte[4];
        UnparseableExtraFieldData.OnUnparseableExtraField onUnparseableExtraField = UnparseableExtraFieldData.OnUnparseableExtraField.SKIP;
        ZipExtraField[] extraFields = ExtraFieldUtils.parse(data, true, onUnparseableExtraField);
        assertEquals(0, extraFields.length);
    }

    @Test(timeout = 4000)
    public void testParseWithReadBehavior() throws Throwable {
        // Test parsing with read behavior
        byte[] data = new byte[4];
        UnparseableExtraFieldData.OnUnparseableExtraField onUnparseableExtraField = UnparseableExtraFieldData.OnUnparseableExtraField.READ;
        ZipExtraField[] extraFields = ExtraFieldUtils.parse(data, true, onUnparseableExtraField);
        assertEquals(0, extraFields.length);
    }
}