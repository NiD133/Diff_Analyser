/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 17:14:54 GMT 2025
 */

package org.jfree.chart.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.time.chrono.HijrahEra;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.entity.LegendItemEntity;
import org.jfree.data.general.Dataset;
import org.jfree.data.xy.DefaultTableXYDataset;
import org.jfree.data.xy.XIntervalSeriesCollection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LegendItemEntity_ESTest extends LegendItemEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LegendItemEntity<HijrahEra> legendItemEntity0 = new LegendItemEntity<HijrahEra>(rectangle2D_Double0);
      HijrahEra hijrahEra0 = HijrahEra.AH;
      legendItemEntity0.setSeriesKey(hijrahEra0);
      HijrahEra hijrahEra1 = legendItemEntity0.getSeriesKey();
      assertSame(hijrahEra1, hijrahEra0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Rectangle2D.Float rectangle2D_Float0 = new Rectangle2D.Float();
      Rectangle rectangle0 = rectangle2D_Float0.getBounds();
      LegendItemEntity<Integer> legendItemEntity0 = new LegendItemEntity<Integer>(rectangle0);
      DefaultTableXYDataset<Integer> defaultTableXYDataset0 = new DefaultTableXYDataset<Integer>(false);
      legendItemEntity0.setDataset(defaultTableXYDataset0);
      DefaultTableXYDataset defaultTableXYDataset1 = (DefaultTableXYDataset)legendItemEntity0.getDataset();
      assertTrue(defaultTableXYDataset1.getNotify());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LegendItemEntity<Integer> legendItemEntity0 = null;
      try {
        legendItemEntity0 = new LegendItemEntity<Integer>((Shape) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'area' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LegendItemEntity<Integer> legendItemEntity0 = new LegendItemEntity<Integer>(rectangle2D_Double0);
      Object object0 = legendItemEntity0.clone();
      XIntervalSeriesCollection<Integer> xIntervalSeriesCollection0 = new XIntervalSeriesCollection<Integer>();
      legendItemEntity0.setDataset(xIntervalSeriesCollection0);
      boolean boolean0 = legendItemEntity0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Line2D.Float line2D_Float0 = new Line2D.Float();
      Rectangle2D rectangle2D0 = line2D_Float0.getBounds2D();
      LegendItemEntity<Integer> legendItemEntity0 = new LegendItemEntity<Integer>(rectangle2D0);
      Object object0 = new Object();
      boolean boolean0 = legendItemEntity0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LegendItemEntity<Integer> legendItemEntity0 = new LegendItemEntity<Integer>(rectangle2D_Double0);
      boolean boolean0 = legendItemEntity0.equals(legendItemEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Rectangle rectangle0 = new Rectangle(0, 0, 0, 0);
      LegendItemEntity<Integer> legendItemEntity0 = new LegendItemEntity<Integer>(rectangle0);
      String string0 = legendItemEntity0.toString();
      assertEquals("LegendItemEntity: seriesKey=null, dataset=null", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LegendItemEntity<HijrahEra> legendItemEntity0 = new LegendItemEntity<HijrahEra>(rectangle2D_Double0);
      legendItemEntity0.getSeriesKey();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LegendItemEntity<Integer> legendItemEntity0 = new LegendItemEntity<Integer>(rectangle2D_Double0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      legendItemEntity0.setSeriesKey(integer0);
      LegendItemEntity<Integer> legendItemEntity1 = new LegendItemEntity<Integer>(rectangle2D_Double0);
      boolean boolean0 = legendItemEntity0.equals(legendItemEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LegendItemEntity<Integer> legendItemEntity0 = new LegendItemEntity<Integer>(rectangle2D_Double0);
      Object object0 = legendItemEntity0.clone();
      boolean boolean0 = legendItemEntity0.equals(object0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double();
      LegendItemEntity<Integer> legendItemEntity0 = new LegendItemEntity<Integer>(rectangle2D_Double0);
      Dataset dataset0 = legendItemEntity0.getDataset();
      assertNull(dataset0);
  }
}
