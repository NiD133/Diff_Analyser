/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 17:09:11 GMT 2025
 */

package org.jfree.data.general;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.chrono.ChronoLocalDate;
import java.util.List;
import java.util.Vector;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.api.SortOrder;
import org.jfree.chart.api.TableOrder;
import org.jfree.data.DefaultKeyedValues;
import org.jfree.data.KeyedValues;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.CategoryToPieDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.category.SlidingCategoryDataset;
import org.jfree.data.general.DefaultKeyedValuesDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DefaultPieDataset_ESTest extends DefaultPieDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      defaultPieDataset0.setValue(integer0, (Number) integer0);
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      boolean boolean0 = defaultKeyedValuesDataset0.equals(defaultPieDataset0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultKeyedValuesDataset0.insertValue(0, integer0, (Number) integer0);
      assertTrue(defaultKeyedValuesDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultPieDataset0.setValue(integer0, (Number) integer0);
      Integer integer1 = defaultPieDataset0.getKey(0);
      assertEquals(400, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      defaultPieDataset0.sortByKeys(sortOrder0);
      assertEquals(0, defaultPieDataset0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultKeyedValuesDataset0.setValue(integer0, 1036.25471);
      defaultKeyedValuesDataset0.remove(integer0);
      assertTrue(defaultKeyedValuesDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      defaultPieDataset0.insertValue(0, integer0, (double) 0);
      assertEquals(1, defaultPieDataset0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultPieDataset0.setValue(integer0, (Number) null);
      Number number0 = defaultPieDataset0.getValue(integer0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultPieDataset0.setValue(integer0, (Number) null);
      Number number0 = defaultPieDataset0.getValue(0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultPieDataset0.setValue(integer0, 0.8);
      int int0 = defaultPieDataset0.getItemCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultPieDataset0.setValue(integer0, (Number) null);
      int int0 = defaultPieDataset0.getIndex(integer0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultPieDataset0.setValue(integer0, 0.8);
      Integer integer1 = JLayeredPane.MODAL_LAYER;
      defaultPieDataset0.setValue(integer1, (double) (-1));
      int int0 = defaultPieDataset0.getIndex(integer1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      // Undeclared exception!
      try { 
        defaultPieDataset0.sortByValues((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      // Undeclared exception!
      try { 
        defaultKeyedValuesDataset0.setValue((Integer) null, (Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      // Undeclared exception!
      try { 
        defaultKeyedValuesDataset0.setValue((Integer) null, 0.0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      // Undeclared exception!
      try { 
        defaultPieDataset0.remove(integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The key (300) is not recognised.
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      defaultKeyedValuesDataset0.setValue(integer0, (Number) integer0);
      // Undeclared exception!
      try { 
        defaultKeyedValuesDataset0.insertValue(1, integer0, (Number) integer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      defaultKeyedValuesDataset0.setValue(integer0, (Number) integer0);
      // Undeclared exception!
      try { 
        defaultKeyedValuesDataset0.insertValue(1, integer0, (double) 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      // Undeclared exception!
      try { 
        defaultKeyedValuesDataset0.getValue((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      // Undeclared exception!
      try { 
        defaultPieDataset0.getIndex((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SlidingCategoryDataset<ChronoLocalDate, ChronoLocalDate> slidingCategoryDataset0 = new SlidingCategoryDataset<ChronoLocalDate, ChronoLocalDate>((CategoryDataset<ChronoLocalDate, ChronoLocalDate>) null, (-1795), (-1795));
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(slidingCategoryDataset0, tableOrder0, (-1795));
      DefaultPieDataset<Integer> defaultPieDataset0 = null;
      try {
        defaultPieDataset0 = new DefaultPieDataset<Integer>(categoryToPieDataset0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.data.category.SlidingCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset<Integer, Integer> defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset<Integer, Integer>();
      Vector<Integer> vector0 = new Vector<Integer>();
      Integer integer0 = JLayeredPane.MODAL_LAYER;
      defaultBoxAndWhiskerCategoryDataset0.add((List<? extends Number>) vector0, integer0, integer0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultBoxAndWhiskerCategoryDataset0, tableOrder0, (-374));
      DefaultPieDataset<Integer> defaultPieDataset0 = null;
      try {
        defaultPieDataset0 = new DefaultPieDataset<Integer>(categoryToPieDataset0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = null;
      try {
        defaultPieDataset0 = new DefaultPieDataset<Integer>((KeyedValues<Integer>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'source' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double[][] doubleArray0 = new double[3][9];
      double[] doubleArray1 = new double[0];
      doubleArray0[2] = doubleArray1;
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      TableOrder tableOrder0 = TableOrder.BY_COLUMN;
      CategoryToPieDataset categoryToPieDataset0 = new CategoryToPieDataset(defaultIntervalCategoryDataset0, tableOrder0, 1);
      DefaultPieDataset<Long> defaultPieDataset0 = null;
      try {
        defaultPieDataset0 = new DefaultPieDataset<Long>(categoryToPieDataset0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 0
         //
         verifyException("org.jfree.data.category.DefaultIntervalCategoryDataset", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      // Undeclared exception!
      try { 
        defaultPieDataset0.getKey((-2210));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      int int0 = defaultPieDataset0.getItemCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      // Undeclared exception!
      try { 
        defaultPieDataset0.getValue(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      defaultKeyedValuesDataset0.setValue(integer0, (Number) integer0);
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>(defaultKeyedValuesDataset0);
      assertEquals(1, defaultPieDataset0.getItemCount());
      
      defaultPieDataset0.setValue(integer0, (-140.1353984740134));
      boolean boolean0 = defaultKeyedValuesDataset0.equals(defaultPieDataset0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultPieDataset0.setValue(integer0, (Number) null);
      DefaultPieDataset<Integer> defaultPieDataset1 = new DefaultPieDataset<Integer>(defaultPieDataset0);
      assertTrue(defaultPieDataset1.equals((Object)defaultPieDataset0));
      
      defaultPieDataset1.setValue(integer0, (Number) integer0);
      boolean boolean0 = defaultPieDataset0.equals(defaultPieDataset1);
      assertFalse(defaultPieDataset1.equals((Object)defaultPieDataset0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      defaultKeyedValuesDataset0.setValue(integer0, (Number) integer0);
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>(defaultKeyedValuesDataset0);
      boolean boolean0 = defaultKeyedValuesDataset0.equals(defaultPieDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultPieDataset0.setValue(integer0, (Number) null);
      DefaultPieDataset<Integer> defaultPieDataset1 = new DefaultPieDataset<Integer>(defaultPieDataset0);
      Integer integer1 = JLayeredPane.POPUP_LAYER;
      defaultPieDataset1.clear();
      defaultPieDataset1.setValue(integer1, (Number) integer0);
      boolean boolean0 = defaultPieDataset0.equals(defaultPieDataset1);
      assertEquals(1, defaultPieDataset1.getItemCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset1 = new DefaultKeyedValuesDataset<Integer>();
      assertTrue(defaultKeyedValuesDataset1.equals((Object)defaultKeyedValuesDataset0));
      
      Integer integer0 = JLayeredPane.FRAME_CONTENT_LAYER;
      defaultKeyedValuesDataset0.setValue(integer0, (Number) integer0);
      boolean boolean0 = defaultKeyedValuesDataset0.equals(defaultKeyedValuesDataset1);
      assertFalse(defaultKeyedValuesDataset1.equals((Object)defaultKeyedValuesDataset0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      boolean boolean0 = defaultPieDataset0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      boolean boolean0 = defaultKeyedValuesDataset0.equals(defaultKeyedValuesDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      defaultPieDataset0.clear();
      assertTrue(defaultPieDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      SortOrder sortOrder0 = SortOrder.ASCENDING;
      defaultKeyedValuesDataset0.sortByValues(sortOrder0);
      assertEquals(0, defaultKeyedValuesDataset0.getItemCount());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultKeyedValues<Integer> defaultKeyedValues0 = new DefaultKeyedValues<Integer>();
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>(defaultKeyedValues0);
      defaultPieDataset0.hashCode();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      // Undeclared exception!
      try { 
        defaultKeyedValuesDataset0.remove((Integer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'key' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      int int0 = defaultPieDataset0.getIndex(integer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      List<Integer> list0 = defaultPieDataset0.getKeys();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      defaultPieDataset0.setValue(integer0, (Number) null);
      DefaultPieDataset<Integer> defaultPieDataset1 = new DefaultPieDataset<Integer>(defaultPieDataset0);
      boolean boolean0 = defaultPieDataset1.equals(defaultPieDataset0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      // Undeclared exception!
      try { 
        defaultKeyedValuesDataset0.sortByKeys((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.internal.Args", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>();
      Integer integer0 = JLayeredPane.DRAG_LAYER;
      // Undeclared exception!
      try { 
        defaultPieDataset0.getValue(integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Key not found: 400
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultKeyedValues<Integer> defaultKeyedValues0 = new DefaultKeyedValues<Integer>();
      DefaultPieDataset<Integer> defaultPieDataset0 = new DefaultPieDataset<Integer>(defaultKeyedValues0);
      Integer integer0 = JLayeredPane.POPUP_LAYER;
      // Undeclared exception!
      try { 
        defaultPieDataset0.insertValue(1, integer0, (-3722.9802));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'position' out of bounds.
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      DefaultPieDataset defaultPieDataset0 = (DefaultPieDataset)defaultKeyedValuesDataset0.clone();
      assertTrue(defaultPieDataset0.getNotify());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultKeyedValuesDataset<Integer> defaultKeyedValuesDataset0 = new DefaultKeyedValuesDataset<Integer>();
      Integer integer0 = JLayeredPane.DEFAULT_LAYER;
      // Undeclared exception!
      try { 
        defaultKeyedValuesDataset0.insertValue(1, integer0, (Number) integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 'position' out of bounds.
         //
         verifyException("org.jfree.data.DefaultKeyedValues", e);
      }
  }
}
