package org.locationtech.spatial4j.shape.impl;

import org.junit.Test;
import org.locationtech.spatial4j.context.SpatialContext;

import static org.junit.Assert.assertEquals;

/**
 * This test class contains improved tests for the {@link BBoxCalculator}.
 * The original test was auto-generated by EvoSuite and used non-sensical
 * geographic coordinates, making it hard to understand. This version uses
 * realistic values and a clear structure to test the same underlying logic.
 */
public class BBoxCalculatorImprovedTest {

    /**
     * Tests that expanding only the X-axis of the bounding box does not
     * alter the previously set Y-axis boundaries.
     */
    @Test
    public void expandXRangeShouldNotAffectYBounds() {
        // ARRANGE
        // Use a geodetic context, as the calculator's behavior can differ from a cartesian one.
        SpatialContext geoContext = SpatialContext.GEO;
        BBoxCalculator bboxCalculator = new BBoxCalculator(geoContext);

        // Define and set an initial bounding box.
        double initialMinY = 10.0;
        double initialMaxY = 20.0;
        bboxCalculator.expandRange(-50.0, -40.0, initialMinY, initialMaxY);

        // ACT
        // Expand only the X-axis. This action should not modify the Y-axis bounds.
        bboxCalculator.expandXRange(-60.0, -30.0);

        // ASSERT
        // Verify that the Y-axis boundaries remain unchanged after the X-axis expansion.
        assertEquals("getMaxY() should not be changed by expandXRange()",
                initialMaxY, bboxCalculator.getMaxY(), 0.0);
        assertEquals("getMinY() should not be changed by expandXRange()",
                initialMinY, bboxCalculator.getMinY(), 0.0);
    }
}