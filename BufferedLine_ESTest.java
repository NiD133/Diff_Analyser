/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 21 19:36:17 GMT 2025
 */

package org.locationtech.spatial4j.shape.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.locationtech.spatial4j.context.SpatialContext;
import org.locationtech.spatial4j.context.SpatialContextFactory;
import org.locationtech.spatial4j.distance.CartesianDistCalc;
import org.locationtech.spatial4j.shape.Point;
import org.locationtech.spatial4j.shape.Rectangle;
import org.locationtech.spatial4j.shape.Shape;
import org.locationtech.spatial4j.shape.SpatialRelation;
import org.locationtech.spatial4j.shape.impl.BufferedLine;
import org.locationtech.spatial4j.shape.impl.InfBufLine;
import org.locationtech.spatial4j.shape.impl.PointImpl;
import org.locationtech.spatial4j.shape.impl.RectangleImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BufferedLine_ESTest extends BufferedLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      BufferedLine bufferedLine1 = new BufferedLine(pointImpl0, pointImpl0, 90.0, spatialContext0);
      boolean boolean0 = bufferedLine1.equals(bufferedLine0);
      assertFalse(boolean0);
      assertFalse(bufferedLine0.equals((Object)bufferedLine1));
      assertTrue(bufferedLine1.hasArea());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      RectangleImpl rectangleImpl0 = new RectangleImpl(1869.69281314934, 0.0, (-548.9229133084503), Double.POSITIVE_INFINITY, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, Double.POSITIVE_INFINITY, spatialContext0);
      SpatialRelation spatialRelation0 = bufferedLine0.relate((Rectangle) rectangleImpl0);
      assertEquals(SpatialRelation.CONTAINS, spatialRelation0);
      assertEquals(Double.POSITIVE_INFINITY, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 1774.4545169222108, spatialContext0);
      PointImpl pointImpl1 = new PointImpl(1774.4545169222108, (-3282.38), spatialContext0);
      // Undeclared exception!
      try { 
        BufferedLine.expandBufForLongitudeSkew(pointImpl0, pointImpl1, 261.90724681475126);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      PointImpl pointImpl1 = new PointImpl(0.0, (-3550.72104647596), spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl1, pointImpl0, 0.0, spatialContext0);
      InfBufLine infBufLine0 = bufferedLine0.getLinePrimary();
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
      assertEquals(0.0, infBufLine0.getBuf(), 0.01);
      assertEquals(Double.POSITIVE_INFINITY, infBufLine0.getSlope(), 0.01);
      assertEquals(0.0, infBufLine0.getIntercept(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl((-1697.31376), (-512.1), spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 3478.012754255683, spatialContext0);
      InfBufLine infBufLine0 = bufferedLine0.getLinePrimary();
      assertEquals((-512.1), infBufLine0.getIntercept(), 0.01);
      assertEquals(3478.012754255683, bufferedLine0.getBuf(), 0.01);
      assertEquals(3478.012754255683, infBufLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(4611.61214728, 4611.61214728, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 4611.61214728, spatialContext0);
      InfBufLine infBufLine0 = bufferedLine0.getLinePrimary();
      assertEquals(4611.61214728, infBufLine0.getIntercept(), 0.01);
      assertTrue(bufferedLine0.hasArea());
      assertEquals(0.0, infBufLine0.getSlope(), 0.01);
      assertEquals(4611.61214728, infBufLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      CartesianDistCalc cartesianDistCalc0 = CartesianDistCalc.INSTANCE_SQUARED;
      cartesianDistCalc0.pointOnBearing(pointImpl0, 1521.0, 2573.0, spatialContext0, pointImpl0);
      PointImpl pointImpl1 = new PointImpl(0.0, (-1573.0219511291966), spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl1, 3550.72104647596, spatialContext0);
      InfBufLine infBufLine0 = bufferedLine0.getLinePerp();
      assertTrue(bufferedLine0.hasArea());
      assertEquals((-32.3417023265244), infBufLine0.getIntercept(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      CartesianDistCalc cartesianDistCalc0 = CartesianDistCalc.INSTANCE_SQUARED;
      Point point0 = cartesianDistCalc0.pointOnBearing(pointImpl0, 1521.0, 2573.0, spatialContext0, pointImpl0);
      BufferedLine bufferedLine0 = new BufferedLine(point0, point0, 3550.72104647596, spatialContext0);
      InfBufLine infBufLine0 = bufferedLine0.getLinePerp();
      assertEquals(1214.7246107819335, infBufLine0.getIntercept(), 0.01);
      assertTrue(bufferedLine0.hasArea());
      assertEquals(3550.72104647596, infBufLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      PointImpl pointImpl1 = new PointImpl(0.0, (-3402.5), spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl1, pointImpl0, 1945.7336009, spatialContext0);
      InfBufLine infBufLine0 = bufferedLine0.getLinePerp();
      assertEquals((-1701.25), infBufLine0.getIntercept(), 0.01);
      assertTrue(bufferedLine0.hasArea());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 1945.7336009, spatialContext0);
      InfBufLine infBufLine0 = bufferedLine0.getLinePerp();
      assertEquals(Double.NaN, infBufLine0.getDistDenomInv(), 0.01);
      assertEquals(1945.7336009, infBufLine0.getBuf(), 0.01);
      assertEquals(0.0, infBufLine0.getIntercept(), 0.01);
      assertEquals(1945.7336009, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      BufferedLine bufferedLine1 = (BufferedLine)bufferedLine0.getBuffered(0.0, spatialContext0);
      assertEquals(0.0, bufferedLine1.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 1461.7, spatialContext0);
      double double0 = bufferedLine0.getBuf();
      assertEquals(1461.7, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(154.414307, 25.661000646614852, (SpatialContext) null);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 25.661000646614852, spatialContext0);
      bufferedLine0.getBoundingBox();
      assertEquals(25.661000646614852, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SpatialContext spatialContext0 = SpatialContextFactory.makeSpatialContext(hashMap0, classLoader0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      pointImpl0.reset(0.0, (-2.3956291180657985));
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      bufferedLine0.getBoundingBox();
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(3.150319189088167, Double.POSITIVE_INFINITY, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, Double.POSITIVE_INFINITY, spatialContext0);
      bufferedLine0.getBoundingBox();
      assertEquals(Double.POSITIVE_INFINITY, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl((-678.400034831), (-1.0), spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 505.0, spatialContext0);
      bufferedLine0.getBoundingBox();
      assertEquals(505.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(2115.863165, 2115.863165, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 2115.863165, spatialContext0);
      double double0 = bufferedLine0.getArea(spatialContext0);
      assertEquals(1.790750773201527E7, double0, 0.01);
      assertTrue(bufferedLine0.hasArea());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      double double0 = BufferedLine.expandBufForLongitudeSkew(pointImpl0, pointImpl0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      double double0 = BufferedLine.expandBufForLongitudeSkew(pointImpl0, pointImpl0, (-43.390550600565));
      assertEquals((-43.390550600565), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = spatialContextFactory0.newSpatialContext();
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      // Undeclared exception!
      try { 
        bufferedLine0.relate((Rectangle) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.locationtech.spatial4j.shape.impl.RectangleImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(2115.863165, 2115.863165, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 2115.863165, spatialContext0);
      // Undeclared exception!
      try { 
        bufferedLine0.getBuffered((-1304.935812), spatialContext0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // maxY must be >= minY: 1304.935812 to 90.0
         //
         verifyException("org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      // Undeclared exception!
      try { 
        bufferedLine0.getBuffered(0.0, (SpatialContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        BufferedLine.expandBufForLongitudeSkew((Point) null, (Point) null, (-2061.3583581165));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.locationtech.spatial4j.shape.impl.BufferedLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      // Undeclared exception!
      try { 
        bufferedLine0.contains((Point) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.locationtech.spatial4j.shape.impl.InfBufLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      BufferedLine bufferedLine0 = null;
      try {
        bufferedLine0 = new BufferedLine((Point) null, (Point) null, 2693.6085181, spatialContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = spatialContextFactory0.newSpatialContext();
      PointImpl pointImpl0 = new PointImpl(2.0, 2.0, spatialContext0);
      PointImpl pointImpl1 = new PointImpl(6378.137, 2.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 3958.7613145272735, spatialContext0);
      boolean boolean0 = bufferedLine0.contains(pointImpl1);
      assertEquals(3958.7613145272735, bufferedLine0.getBuf(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 1774.4545169222108, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 1774.4545169222108, spatialContext0);
      boolean boolean0 = bufferedLine0.contains(pointImpl0);
      assertTrue(bufferedLine0.hasArea());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(3.150319189088167, Double.POSITIVE_INFINITY, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, Double.POSITIVE_INFINITY, spatialContext0);
      boolean boolean0 = bufferedLine0.contains(pointImpl0);
      assertEquals(Double.POSITIVE_INFINITY, bufferedLine0.getBuf(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      BufferedLine bufferedLine0 = null;
      try {
        bufferedLine0 = new BufferedLine((Point) null, (Point) null, (-512.59591197), spatialContext0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SpatialContext spatialContext0 = SpatialContextFactory.makeSpatialContext(hashMap0, classLoader0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      bufferedLine0.getBoundingBox();
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(4190.070059671743, Double.NaN, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 4190.070059671743, spatialContext0);
      bufferedLine0.hashCode();
      assertTrue(bufferedLine0.hasArea());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SpatialContext spatialContext0 = SpatialContextFactory.makeSpatialContext(hashMap0, classLoader0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      bufferedLine0.hashCode();
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(47.596567977381824, 47.596567977381824, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 47.596567977381824, spatialContext0);
      PointImpl pointImpl1 = new PointImpl(47.596567977381824, 47.596567977381824, spatialContext0);
      pointImpl1.reset((-2340.0), (-2340.0));
      BufferedLine bufferedLine1 = new BufferedLine(pointImpl0, pointImpl1, 47.596567977381824, spatialContext0);
      boolean boolean0 = bufferedLine0.equals(bufferedLine1);
      assertFalse(boolean0);
      assertEquals(47.596567977381824, bufferedLine1.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      PointImpl pointImpl1 = new PointImpl(2040.083, 2040.083, spatialContext0);
      BufferedLine bufferedLine1 = new BufferedLine(pointImpl1, pointImpl0, 0.0, spatialContext0);
      boolean boolean0 = bufferedLine1.equals(bufferedLine0);
      assertFalse(boolean0);
      assertEquals(0.0, bufferedLine1.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(2115.863165, 2115.863165, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 2115.863165, spatialContext0);
      BufferedLine bufferedLine1 = new BufferedLine(pointImpl0, pointImpl0, 2117.6127380359226, spatialContext0);
      boolean boolean0 = bufferedLine0.equals(bufferedLine1);
      assertFalse(boolean0);
      assertFalse(bufferedLine1.equals((Object)bufferedLine0));
      assertTrue(bufferedLine1.hasArea());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      boolean boolean0 = bufferedLine0.equals(pointImpl0);
      assertFalse(boolean0);
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      boolean boolean0 = bufferedLine0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(2115.863165, 2115.863165, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 2115.863165, spatialContext0);
      boolean boolean0 = bufferedLine0.equals(bufferedLine0);
      assertTrue(boolean0);
      assertTrue(bufferedLine0.hasArea());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      SpatialContext spatialContext0 = SpatialContextFactory.makeSpatialContext(hashMap0, classLoader0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      BufferedLine bufferedLine1 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      boolean boolean0 = bufferedLine0.equals(bufferedLine1);
      assertTrue(boolean0);
      assertEquals(0.0, bufferedLine1.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(1.5, 1.5, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 1.5, spatialContext0);
      boolean boolean0 = bufferedLine0.hasArea();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      boolean boolean0 = bufferedLine0.hasArea();
      assertFalse(boolean0);
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(3.150319189088167, Double.POSITIVE_INFINITY, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, Double.POSITIVE_INFINITY, spatialContext0);
      SpatialRelation spatialRelation0 = bufferedLine0.relate((Shape) pointImpl0);
      assertEquals(SpatialRelation.DISJOINT, spatialRelation0);
      assertTrue(bufferedLine0.hasArea());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.017453292519943295, 0.017453292519943295, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.017453292519943295, spatialContext0);
      RectangleImpl rectangleImpl0 = new RectangleImpl((-13.424214), 0.017453292519943295, 0.017453292519943295, 0.017453292519943295, spatialContext0);
      SpatialRelation spatialRelation0 = bufferedLine0.relate((Rectangle) rectangleImpl0);
      assertEquals(SpatialRelation.INTERSECTS, spatialRelation0);
      assertTrue(bufferedLine0.hasArea());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(19.95949838725778, 19.95949838725778, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 19.95949838725778, spatialContext0);
      RectangleImpl rectangleImpl0 = new RectangleImpl(314.0527, 648.9138053, 19.95949838725778, 314.0527, spatialContext0);
      SpatialRelation spatialRelation0 = bufferedLine0.relate((Rectangle) rectangleImpl0);
      assertEquals(SpatialRelation.DISJOINT, spatialRelation0);
      assertEquals(19.95949838725778, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      Rectangle rectangle0 = spatialContext0.getWorldBounds();
      SpatialRelation spatialRelation0 = bufferedLine0.relate(rectangle0);
      assertEquals(SpatialRelation.WITHIN, spatialRelation0);
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(3208.3, 3208.3, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 3208.3, spatialContext0);
      RectangleImpl rectangleImpl0 = new RectangleImpl(pointImpl0, pointImpl0, spatialContext0);
      SpatialRelation spatialRelation0 = bufferedLine0.relate((Rectangle) rectangleImpl0);
      assertEquals(3208.3, bufferedLine0.getBuf(), 0.01);
      assertEquals(SpatialRelation.DISJOINT, spatialRelation0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      // Undeclared exception!
      try { 
        bufferedLine0.relate((Shape) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.locationtech.spatial4j.shape.impl.BufferedLine", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      SpatialRelation spatialRelation0 = bufferedLine0.relate((Shape) pointImpl0);
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
      assertEquals(SpatialRelation.CONTAINS, spatialRelation0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      Rectangle rectangle0 = pointImpl0.getBoundingBox();
      SpatialRelation spatialRelation0 = bufferedLine0.relate((Shape) rectangle0);
      assertEquals(SpatialRelation.CONTAINS, spatialRelation0);
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl(57.29577951308232, 57.29577951308232, spatialContext0);
      PointImpl pointImpl1 = new PointImpl(57.29577951308232, 5181.5, spatialContext0);
      // Undeclared exception!
      try { 
        BufferedLine.expandBufForLongitudeSkew(pointImpl1, pointImpl0, 0.7853981633974483);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      double double0 = BufferedLine.expandBufForLongitudeSkew(pointImpl0, pointImpl0, (-2439.5224090430065));
      assertEquals(80.47759095699345, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      PointImpl pointImpl1 = new PointImpl((-3478.012754255683), 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl1, pointImpl0, 0.0, spatialContext0);
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, spatialContext0);
      BufferedLine bufferedLine0 = null;
      try {
        bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, Double.POSITIVE_INFINITY, spatialContext0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      SpatialContextFactory spatialContextFactory0 = new SpatialContextFactory();
      SpatialContext spatialContext0 = new SpatialContext(spatialContextFactory0);
      PointImpl pointImpl0 = new PointImpl((-1697.31376), (-512.1), spatialContext0);
      PointImpl pointImpl1 = new PointImpl((-1697.31376), (-286.39918406567), spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl1, pointImpl0, 3478.012754255683, spatialContext0);
      InfBufLine infBufLine0 = bufferedLine0.getLinePrimary();
      assertEquals(Double.NEGATIVE_INFINITY, infBufLine0.getSlope(), 0.01);
      assertEquals((-1697.31376), infBufLine0.getIntercept(), 0.01);
      assertEquals(3478.012754255683, bufferedLine0.getBuf(), 0.01);
      assertEquals(3478.012754255683, infBufLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(2.0, Double.POSITIVE_INFINITY, spatialContext0);
      BufferedLine bufferedLine0 = null;
      try {
        bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 2.0, spatialContext0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // maxY must be >= minY: Infinity to 90.0
         //
         verifyException("org.locationtech.spatial4j.shape.impl.ShapeFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      PointImpl pointImpl1 = new PointImpl((-3480.385), (-3480.385), spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl1, 0.0, spatialContext0);
      RectangleImpl rectangleImpl0 = new RectangleImpl(0.0, 0.0, 0.0, (-85.26133984169124), spatialContext0);
      SpatialRelation spatialRelation0 = bufferedLine0.relate((Rectangle) rectangleImpl0);
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
      assertEquals(SpatialRelation.DISJOINT, spatialRelation0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      double double0 = bufferedLine0.getArea(spatialContext0);
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      InfBufLine infBufLine0 = bufferedLine0.getLinePerp();
      assertEquals(Double.NaN, infBufLine0.getDistDenomInv(), 0.01);
      assertEquals(0.0, infBufLine0.getIntercept(), 0.01);
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
      assertEquals(0.0, infBufLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      // Undeclared exception!
      try { 
        bufferedLine0.getBuffered((-3307.844427), spatialContext0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      double double0 = bufferedLine0.getBuf();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      bufferedLine0.getA();
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      bufferedLine0.getB();
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl((-678.400034831), (-1.0), spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 505.0, spatialContext0);
      bufferedLine0.isEmpty();
      assertEquals(505.0, bufferedLine0.getBuf(), 0.01);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      String string0 = bufferedLine0.toString();
      assertEquals("BufferedLine(Pt(x=0.0,y=0.0), Pt(x=0.0,y=0.0) b=0.0)", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      SpatialContext spatialContext0 = SpatialContext.GEO;
      PointImpl pointImpl0 = new PointImpl(0.0, 0.0, spatialContext0);
      BufferedLine bufferedLine0 = new BufferedLine(pointImpl0, pointImpl0, 0.0, spatialContext0);
      bufferedLine0.getCenter();
      assertEquals(0.0, bufferedLine0.getBuf(), 0.01);
  }
}
